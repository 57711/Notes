import{_ as t,o as i,c as d,e}from"./app-7D7ZZLlA.js";const l="/Notes/images/CSS各种距离.png",n={},a=e('<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h1><h2 id="各种距离" tabindex="-1"><a class="header-anchor" href="#各种距离" aria-hidden="true">#</a> 各种距离</h2><ul><li>client-xxx 内边距</li><li>offset-xxx 外边距</li><li>scroll-xxx 可滚动的</li></ul><p><img src="'+l+'" alt="css各种距离"></p><h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h2><p>元素都是盒模型，包括 content, padding, border, margin。可以设置宽高，内外边距，border，display，box-sizing，背景色。</p><table><thead><tr><th></th><th>height/width</th><th>padding</th><th>border</th><th>margin</th><th>line-height</th></tr></thead><tbody><tr><td>block</td><td>有效</td><td>有效</td><td>有效</td><td>有效</td><td>有效</td></tr><tr><td>inline-block</td><td>有效</td><td>有效</td><td>有效</td><td>有效</td><td>有效</td></tr><tr><td>inline</td><td>无效</td><td>水平有效<br>垂直不占用空间</td><td>水平有效<br>垂直不占用空间</td><td>水平有效<br>垂直不占用空间</td><td>有效<br>但不影响背景</td></tr></tbody></table><ul><li><p>box-sizing:</p><ul><li>border-box, 包含 border 和 padding 的宽高，不受内部内容影响，可以优化页面重排，提高 CLS。</li><li>content-box，只设置 content 的宽高</li></ul></li><li><p>display:</p><ul><li>flex 弹性盒</li><li>float 浮动盒</li><li>grid</li><li>inline-block, block, inline,</li></ul></li></ul><h3 id="inline-之间的空格" tabindex="-1"><a class="header-anchor" href="#inline-之间的空格" aria-hidden="true">#</a> inline 之间的空格</h3><p>换行符会合并成一个空格，导致 inline 元素之间有空隙。</p><p>这个空隙实际上是一个空格字符，可以设置父元素字体大小<code>font-size: 0</code>，再恢复子元素（inline）字体大小<code>font-size: initial</code>。子元素再通过设置水平外边距调节间距。</p><h3 id="外边距合并" tabindex="-1"><a class="header-anchor" href="#外边距合并" aria-hidden="true">#</a> 外边距合并</h3><p>block 子元素之间外边距可以合并取较大值。inline-block 之间不会合并</p><p>父子元素之间也可以合并。父元素<code>margin-top: 0</code>且没有 padding，子元素<code>margin-top: 10px</code>，合并后父元素距上一个元素距离为 10px。父元素设置 padding，或 border 就不会合并了。</p><p>不合并的方法：</p><ul><li>子元素间设置为 inline-block</li><li>父子元素，设置父元素的 padding 或 border</li><li>设置父元素 float，grid，flex，<code>position:absolute</code></li><li>设置父元素 overflow 为非 visible</li></ul>',16),r=[a];function o(c,h){return i(),d("div",null,r)}const p=t(n,[["render",o],["__file","CSS.html.vue"]]);export{p as default};

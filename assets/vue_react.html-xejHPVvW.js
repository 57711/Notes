import{_ as e,o as a,c as t,e as r}from"./app-7D7ZZLlA.js";const c={},d=r('<h1 id="vue-react-区别" tabindex="-1"><a class="header-anchor" href="#vue-react-区别" aria-hidden="true">#</a> vue &amp; react 区别</h1><h2 id="响应式不同" tabindex="-1"><a class="header-anchor" href="#响应式不同" aria-hidden="true">#</a> 响应式不同</h2><p>vue 拦截监听 getter， setter， 做数据劫持，强调数据可变</p><p>react 通过对比引用，props，setState，强调数据不可变。</p><h3 id="更新流程" tabindex="-1"><a class="header-anchor" href="#更新流程" aria-hidden="true">#</a> 更新流程</h3><p>vue:</p><p>@click -&gt; this.count ++ -&gt; get/set -&gt; notify -&gt; watcher -&gt; 调用 cb -&gt; 更新 dom</p><p>react：</p><p>onClick -&gt; setState/dispatch -&gt; enqueueSetState -&gt; scheduleUpdateOnFiber -&gt; 层层判断组件发生了什么变化 -&gt; 标记 -&gt; 更新 dom</p><p>scheduleUpdateOnFiber 在 fiber 上调度更新，调度意味着从根节点开始。</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>react jsx 语法比 vue template 更灵活，不容易像 vue 一样监听具体改变. 所以 react 需要从头完全跑一次，再跟旧的对比，异步可中断更新，双缓存。</p></div><h2 id="数据流向" tabindex="-1"><a class="header-anchor" href="#数据流向" aria-hidden="true">#</a> 数据流向</h2><p>vue 支持双向绑定， v-model，父子组件间用 props，event，或者 provie，inject</p><p>react 单项流，父子组件间用 props， callback，或者 context</p><h2 id="功能组合" tabindex="-1"><a class="header-anchor" href="#功能组合" aria-hidden="true">#</a> 功能组合</h2><p>react 函数式编程，HOC, 创建自定义 hook</p><p>vue2 通过 mixin, vue3 创建 use 函数</p><h2 id="模版" tabindex="-1"><a class="header-anchor" href="#模版" aria-hidden="true">#</a> 模版</h2><p>vue 通过 template</p><p>react 通过 jsx</p><h2 id="vuex-redux" tabindex="-1"><a class="header-anchor" href="#vuex-redux" aria-hidden="true">#</a> vuex， redux</h2><p>vue 基于可变数据，数据拦截</p><p>vuex 直接将 store 注册到组件实例上 <code>this.$store</code></p><p>redux 基于不可变数据，state 每次都是新的对象</p><p>redux 需要 subscribe，或者 react-redux 利用 connect 将 mapStateToProps，mapDispatchToProps 传入组件</p><h2 id="都是基于虚拟-dom" tabindex="-1"><a class="header-anchor" href="#都是基于虚拟-dom" aria-hidden="true">#</a> 都是基于虚拟 dom</h2><p>vdom 简化 dom 结构，方便更新时 reconcile。方便跨端，可以在不同平台渲染为需要的元素</p><p>vue 是虚拟 dom</p><p>react 是 fiber</p>',29),p=[d];function i(h,s){return a(),t("div",null,p)}const n=e(c,[["render",i],["__file","vue_react.html.vue"]]);export{n as default};

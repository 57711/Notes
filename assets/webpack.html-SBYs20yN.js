import{_ as a,r as p,o as e,c as t,a as n,d as o,b as l,e as c}from"./app-7D7ZZLlA.js";const i={},r=c(`<h1 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h1><h2 id="config-结构" tabindex="-1"><a class="header-anchor" href="#config-结构" aria-hidden="true">#</a> config 结构</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/index.tsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;[name].[hash:10].js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 打包后文件的公共前缀路径</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// resolve 是路径相关</span>
  <span class="token literal-property property">resolve</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">// 可以省略的文件后缀，优先级有关性能</span>
    <span class="token literal-property property">extension</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">HTMLWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 以下在mode: development配置</span>
  <span class="token literal-property property">devtools</span><span class="token operator">:</span> <span class="token string">&quot;eval-cheap-module-source-map&quot;</span><span class="token punctuation">,</span> <span class="token comment">// source-map</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">conpress</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 不压缩，热更新更快</span>
    <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 热更新</span>
    <span class="token keyword">static</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">directory</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 静态资源托管</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 以下可以在mode: production配置</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">terserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">compress</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">pure_func</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token string">&#39;console.log&#39;</span><span class="token punctuation">,</span>
              <span class="token string">&#39;console.warn&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">splitChunk</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">vendor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;vendors&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_module</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
          <span class="token comment">// minChunk: 使用次数</span>
          <span class="token comment">// minSize: 多大的文件才提取</span>
          <span class="token comment">// chunks: &#39;initial&#39; 不管异步文件</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">commons</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;commons&#39;</span><span class="token punctuation">,</span>

        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 优化</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hash" tabindex="-1"><a class="header-anchor" href="#hash" aria-hidden="true">#</a> hash</h2><ul><li>hash 全局，牵一发动全身</li><li>chunkhash， 根据入口</li><li>contenthash，根据文件自身内容</li></ul><h2 id="微内核架构" tabindex="-1"><a class="header-anchor" href="#微内核架构" aria-hidden="true">#</a> 微内核架构</h2><p>微内核架构包含<strong>核心系统</strong>和<strong>插件系统</strong>，核心系统是最小可运行的模块，它提供的是通用逻辑（比如 Tapable），插件系统这是些具体的逻辑（比如 HtmlWebpackPlugin 插件）。插件之间可以相互独立，也可以互相依赖。</p><p>抽象不依赖于实现，每次扩展，内核不需要修改。意味着内核又很强的扩展性。微内核依赖扩展（plugin），内核驱动 plugin 执行</p><p>通过 webpack.config.js 注册表，核心系统可以知道哪些插件可用。读取注册表可以订阅事件，注册回调。</p><p>核心系统和插件系统通过 tapable 的 hooks，类似于生命周期，进行通信。核心系统需要提供一个上下文对象（Context），插件通过 context 与外部交互。</p><p>核心系统的生命周期顺序执行的过程，也就伴随这对应时期的插件的生命周期交替执行，生命周期走完了，整个程序流程也就结束了。</p><h2 id="webpack-require-代码" tabindex="-1"><a class="header-anchor" href="#webpack-require-代码" aria-hidden="true">#</a> webpack require 代码</h2>`,12),u={href:"/js/%E6%A8%A1%E5%9D%97%E5%8C%96.html#webpack-%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=p("ExternalLinkIcon");return e(),t("div",null,[r,n("p",null,[n("a",u,[o("webpack-实现代码"),l(s)])])])}const b=a(i,[["render",k],["__file","webpack.html.vue"]]);export{b as default};

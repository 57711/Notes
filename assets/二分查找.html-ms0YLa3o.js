import{_,r as e,o as v,c as k,a as t,d as n,b as s,w as a,e as u}from"./app-7D7ZZLlA.js";const f={},y=u(`<h1 id="二分查找" tabindex="-1"><a class="header-anchor" href="#二分查找" aria-hidden="true">#</a> 二分查找</h1><h2 id="条件" tabindex="-1"><a class="header-anchor" href="#条件" aria-hidden="true">#</a> 条件</h2><ul><li>必须是有序的</li><li>可以通过索引找到元素， 链表不可以</li><li>存在上下边界</li></ul><h2 id="模版" tabindex="-1"><a class="header-anchor" href="#模版" aria-hidden="true">#</a> 模版</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">BS</span><span class="token punctuation">(</span><span class="token parameter">sortedArray<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> sortedArray<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sortedArray<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>sortedArray<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),b={href:"https://leetcode.cn/problems/sqrtx/description/",target:"_blank",rel:"noopener noreferrer"},x=t("p",null,[t("strong",null,"解1"),n("：因为平方根是单调递增的， 是有序的， 可以用二分法")],-1),z=t("p",null,[t("strong",null,"解2"),n("： 牛顿迭代法")],-1),w={class:"katex"},A={class:"katex-mathml"},B=u('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2902em;vertical-align:-0.4451em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>',1),N={href:"https://leetcode.cn/problems/valid-perfect-square/description/",target:"_blank",rel:"noopener noreferrer"};function V(j,E){const r=e("ExternalLinkIcon"),l=e("mi"),c=e("mo"),p=e("mn"),o=e("mrow"),i=e("msub"),m=e("mfrac"),d=e("annotation"),h=e("semantics"),g=e("math");return v(),k("div",null,[y,t("ul",null,[t("li",null,[t("a",b,[n("x 的平方根"),s(r)])])]),x,z,t("p",null,[t("span",w,[t("span",A,[s(g,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(h,null,{default:a(()=>[s(o,null,{default:a(()=>[s(i,null,{default:a(()=>[s(l,null,{default:a(()=>[n("x")]),_:1}),s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(c,null,{default:a(()=>[n("+")]),_:1}),s(p,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(c,null,{default:a(()=>[n("=")]),_:1}),s(m,null,{default:a(()=>[s(p,null,{default:a(()=>[n("1")]),_:1}),s(p,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(i,null,{default:a(()=>[s(l,null,{default:a(()=>[n("x")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(c,null,{default:a(()=>[n("+")]),_:1}),s(m,null,{default:a(()=>[s(p,null,{default:a(()=>[n("1")]),_:1}),s(o,null,{default:a(()=>[s(p,null,{default:a(()=>[n("2")]),_:1}),s(i,null,{default:a(()=>[s(l,null,{default:a(()=>[n("x")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),_:1}),s(i,null,{default:a(()=>[s(l,null,{default:a(()=>[n("y")]),_:1}),s(p,null,{default:a(()=>[n("0")]),_:1})]),_:1})]),_:1}),s(d,{encoding:"application/x-tex"},{default:a(()=>[n("x_{n+1} = \\frac{1}{2}x_n + \\frac{1}{2x_n}y_0")]),_:1})]),_:1})]),_:1})]),B])]),t("ul",null,[t("li",null,[t("a",N,[n("有效的完全平方数"),s(r)])])])])}const M=_(f,[["render",V],["__file","二分查找.html.vue"]]);export{M as default};

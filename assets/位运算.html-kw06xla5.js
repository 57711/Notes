import{_ as k,r as t,o as m,c as b,a as n,d as s,b as a,w as e,e as p}from"./app-7D7ZZLlA.js";const v={},h=p(`<h1 id="位运算" tabindex="-1"><a class="header-anchor" href="#位运算" aria-hidden="true">#</a> 位运算</h1><h2 id="异或" tabindex="-1"><a class="header-anchor" href="#异或" aria-hidden="true">#</a> 异或</h2><ol><li>任意一个变量X与其自身进行异或运算，结果为0，即X^X=0</li><li>任意一个变量X与0进行异或运算，结果不变，即X^0=X</li><li>异或运算具有可结合性，即a^b^c=（a^b）^c=a^（b^c）</li><li>异或运算具有可交换性，即a^b=b^a</li></ol><p>交换两个变量</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">exchange</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    a <span class="token operator">=</span> a<span class="token operator">^</span>b
    b <span class="token operator">=</span> b<span class="token operator">^</span>a
    a <span class="token operator">=</span> a<span class="token operator">^</span>b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="与" tabindex="-1"><a class="header-anchor" href="#与" aria-hidden="true">#</a> 与</h2><p>判断奇偶, <code>x &amp; 1 == 1</code> , 1 为奇， 0 为偶</p><p>将最后一个1的位变0, <code>x &amp; (x - 1)</code> <code>10100 =&gt; 10000</code></p><p>取最后一个1的位， <code>x &amp; -x</code> <code>10100 =&gt; 100</code></p><h2 id="非" tabindex="-1"><a class="header-anchor" href="#非" aria-hidden="true">#</a> 非</h2><p>小数舍弃小数部分，转为整数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>～～<span class="token number">4.9</span> \\\\ <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2>`,13),_={href:"https://leetcode.cn/problems/number-of-1-bits/description/",target:"_blank",rel:"noopener noreferrer"},g=n("strong",null,"解1",-1),f=n("code",null,"x & 1",-1),x={class:"katex"},w={class:"katex-mathml"},y=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),N=n("p",null,[n("strong",null,"解2"),s("： "),n("code",null,"x & (x - 1)"),s(" 消掉x中的最后的1，循环")],-1),j={href:"https://leetcode.cn/problems/power-of-two/",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,[n("strong",null,"解1"),s("：模2循环")],-1),S=n("p",null,[n("strong",null,"解2"),s("：算对数")],-1),D=n("p",null,[n("strong",null,"解3"),s("：二进制数只有一个1， "),n("code",null,"x & (x - 1) && x !== 0")],-1),F={href:"https://leetcode.cn/problems/counting-bits/",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[n("strong",null,"解1"),s(": 遍历n， "),n("code",null,"count[i] = count[i & (i - 1)] + 1")],-1),B={href:"https://leetcode.cn/problems/n-queens/",target:"_blank",rel:"noopener noreferrer"},E=p(`<p><strong>解1</strong>: 位运算来判重。DFS不变</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">N</span> <span class="token operator">=</span> <span class="token number">4</span> <span class="token comment">// 4 皇后</span>
<span class="token keyword">let</span> count <span class="token comment">// 一共有几种放置方法</span>
<span class="token keyword">function</span> <span class="token constant">DFS</span> <span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> pie<span class="token punctuation">,</span> na</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 结束条件</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>row <span class="token operator">&gt;=</span> <span class="token constant">N</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        count <span class="token operator">++</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 得到N位的空的位置， 空位为1</span>
    <span class="token comment">// ((1 &lt;&lt; N) - 1 得到n个1，消除~(col | pie | na)冗余的1</span>
    <span class="token keyword">let</span> bits <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span>col <span class="token operator">|</span> pie <span class="token operator">|</span> na<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">N</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>bits <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 获取最后的一个1位</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> bits <span class="token operator">&amp;</span> <span class="token operator">-</span>bits

        <span class="token comment">// col | p 把这一位置1，占位</span>
        <span class="token comment">// (pie | p) &lt;&lt; 1 撇的位置要左移</span>
        <span class="token constant">DFS</span><span class="token punctuation">(</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> col <span class="token operator">|</span> p<span class="token punctuation">,</span> <span class="token punctuation">(</span>pie <span class="token operator">|</span> p<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>na <span class="token operator">|</span> p<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token comment">// 更新bits， 每次消除一个1</span>
        bits <span class="token operator">=</span> bits <span class="token operator">&amp;</span> <span class="token punctuation">(</span>bits <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token constant">DFS</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function L(M,O){const o=t("ExternalLinkIcon"),l=t("mi"),c=t("mo"),i=t("mrow"),r=t("annotation"),u=t("semantics"),d=t("math");return m(),b("div",null,[h,n("ul",null,[n("li",null,[n("a",_,[s("位1的个数"),a(o)])])]),n("p",null,[g,s("： 模2判断, 或者"),f,s(" 判断奇偶， 再右移"),n("span",x,[n("span",w,[a(d,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:e(()=>[a(u,null,{default:e(()=>[a(i,null,{default:e(()=>[a(l,null,{default:e(()=>[s("O")]),_:1}),a(c,{stretchy:"false"},{default:e(()=>[s("(")]),_:1}),a(l,null,{default:e(()=>[s("N")]),_:1}),a(c,{stretchy:"false"},{default:e(()=>[s(")")]),_:1})]),_:1}),a(r,{encoding:"application/x-tex"},{default:e(()=>[s("O(N)")]),_:1})]),_:1})]),_:1})]),y])]),N,n("ul",null,[n("li",null,[n("a",j,[s("2 的幂"),a(o)])])]),X,S,D,n("ul",null,[n("li",null,[n("a",F,[s("比特位计数"),a(o)])])]),V,n("ul",null,[n("li",null,[n("a",B,[s("n 皇后"),a(o)])])]),E])}const I=k(v,[["render",L],["__file","位运算.html.vue"]]);export{I as default};

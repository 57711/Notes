import{_ as u,r as t,o as g,c as f,a as e,d as n,b as s,w as a,e as h}from"./app-7D7ZZLlA.js";const x={},y=e("h1",{id:"剪枝",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#剪枝","aria-hidden":"true"},"#"),n(" 剪枝")],-1),b=e("p",null,"遍历树的时候可以剪枝，每个节点选择最优的优先遍历， 不好的节点舍弃不遍历。",-1),k=e("h2",{id:"题目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#题目","aria-hidden":"true"},"#"),n(" 题目")],-1),w={href:"https://leetcode.cn/problems/n-queens/",target:"_blank",rel:"noopener noreferrer"},v={class:"katex"},M={class:"katex-mathml"},N=h('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span>',1),j={class:"katex"},L={class:"katex-mathml"},V=h('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span>',1),z={class:"katex"},B={class:"katex-mathml"},E=h('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),O={href:"https://leetcode.cn/problems/valid-sudoku/description/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://leetcode.cn/problems/sudoku-solver/description/",target:"_blank",rel:"noopener noreferrer"};function I(S,q){const c=t("ExternalLinkIcon"),l=t("mi"),p=t("mo"),o=t("mrow"),r=t("annotation"),m=t("semantics"),i=t("math"),_=t("mn"),d=t("msup");return g(),f("div",null,[y,b,k,e("ul",null,[e("li",null,[e("a",w,[n("N皇后"),s(c)])])]),e("p",null,[n("按照行来遍历DFS，记录已经放的位置，需要记录列，撇"),e("span",v,[e("span",M,[s(i,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(m,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("m")]),_:1}),s(p,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(p,null,{default:a(()=>[n("+")]),_:1}),s(l,null,{default:a(()=>[n("j")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("m = i+j")]),_:1})]),_:1})]),_:1})]),N]),n("，捺"),e("span",j,[e("span",L,[s(i,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(m,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(p,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(p,null,{default:a(()=>[n("−")]),_:1}),s(l,null,{default:a(()=>[n("j")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("n = i-j")]),_:1})]),_:1})]),_:1})]),V]),n(", 每一行中遍历列的时候剪枝，递归之后需要恢复现场， 当前列撇捺需要移除"),e("span",z,[e("span",B,[s(i,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(m,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(p,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(d,null,{default:a(()=>[s(_,null,{default:a(()=>[n("2")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1})]),_:1}),s(p,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(2^N)")]),_:1})]),_:1})]),_:1})]),E])]),e("ul",null,[e("li",null,[e("a",O,[n("数独"),s(c)])]),e("li",null,[e("a",C,[n("解数独"),s(c)])])])])}const F=u(x,[["render",I],["__file","剪枝.html.vue"]]);export{F as default};

import{_ as n,o as s,c as a,e as t}from"./app-7D7ZZLlA.js";const e={},p=t(`<h1 id="动态递推" tabindex="-1"><a class="header-anchor" href="#动态递推" aria-hidden="true">#</a> 动态递推</h1><ol><li>递归+记忆化 一＞递推， 斐波那契+memo， 递推就返过来，从 n=2 开始增加</li><li>状态的定义：opt［n］， dpin］， fib［n］， 需要求的结果为每一步的状态</li><li>状态转移方程：optinl = best_of（opt［n-1］， opt［n-2］，.）</li><li>最优子结构， 每一步递推的递推公式</li></ol><h2 id="斐波那契" tabindex="-1"><a class="header-anchor" href="#斐波那契" aria-hidden="true">#</a> 斐波那契</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getFib</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getFib</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getFib</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>回溯（递归）</strong>：重复计算</li><li><strong>贪心</strong>：永远局部最优</li><li><strong>DP</strong>：记录局部最优子结构/多种记录值</li></ul>`,5),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","动态规划.html.vue"]]);export{r as default};

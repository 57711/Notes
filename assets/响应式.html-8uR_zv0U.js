import{_ as e,o as t,c as l,e as i}from"./app-7D7ZZLlA.js";const r={},c=i('<h1 id="响应式" tabindex="-1"><a class="header-anchor" href="#响应式" aria-hidden="true">#</a> 响应式</h1><ul><li>observe, 返回一个 proxy 代理的响应式数据对象 <ul><li>getter 中用 <code>Reflect.get()</code> 判断结果是对象继续调用 observe 返回代理</li><li>setter 中 nofify 收集到的依赖。</li></ul></li><li>触发第一次 getter，收集依赖。watcher <ul><li>需要将回调放到全局变量中，getter 里记录全局变量中的为回调</li><li>执行一次回调</li><li>清空全局变量</li></ul></li><li>之后改变响应式对象，触发 setter，调用回调。</li></ul>',2),o=[c];function a(s,_){return t(),l("div",null,o)}const d=e(r,[["render",a],["__file","响应式.html.vue"]]);export{d as default};

import{_ as f,r,o as g,c as k,a as t,b as s,w as a,d as n,e as p}from"./app-7D7ZZLlA.js";const x="/Notes/images/截屏2023-12-16-17.24.09.png",y="/Notes/images/截屏2023-12-16-17.27.47.png",v={},w=t("h1",{id:"map-set",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#map-set","aria-hidden":"true"},"#"),n(" Map & Set")],-1),b={class:"table-of-contents"},M=p('<p><strong>Map 和 set 多用于查询和计数</strong></p><h2 id="哈希表-哈希函数-碰撞" tabindex="-1"><a class="header-anchor" href="#哈希表-哈希函数-碰撞" aria-hidden="true">#</a> 哈希表，哈希函数，碰撞</h2><p>哈希Hash，hashing就是无限的字符转换为有限的过程。哈希之后不可逆</p><p>哈希表就是键值对，数组中的索引对应于数据的内存地址，而哈希表中的键进行<strong>哈希函数</strong>运算才能得到内存地址</p><h2 id="哈希函数" tabindex="-1"><a class="header-anchor" href="#哈希函数" aria-hidden="true">#</a> 哈希函数</h2><p>一个对象通过函数生成一个数组的下标</p><p>哈希需要不可逆，所以需要模运算，每个字母ascii 16进制相加求余</p><p><img src="'+x+'" alt="哈希函数" title="哈希函数"></p><h3 id="碰撞" tabindex="-1"><a class="header-anchor" href="#碰撞" aria-hidden="true">#</a> 碰撞</h3><p>不同对象可能生成同一个下标</p><p>两种方法:</p>',11),O=t("p",null,"开放寻址法",-1),N=t("li",null,"线性探测法，占用了就放下一个位置中，会出现集群现象",-1),L={class:"katex"},S={class:"katex-mathml"},z=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span>',1),H=t("li",null,[t("p",null,"封闭寻址法"),t("ul",null,[t("li",null,"链表，集群现象，数据可能聚集在某几个键里")])],-1),T=t("li",null,[t("p",null,"哈希算法，数据运算为固定长度的值"),t("ul",null,[t("li",null,"md5 （128bits）"),t("li",null,"sha-256，sha-512")])],-1),j=t("p",null,[t("img",{src:y,alt:"哈希碰撞-链表",title:"哈希碰撞"})],-1),V=t("h2",{id:"list-vs-map-vs-set",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#list-vs-map-vs-set","aria-hidden":"true"},"#"),n(" list vs map vs set")],-1),B={class:"katex"},E={class:"katex-mathml"},C=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),I={class:"katex"},q={class:"katex-mathml"},A=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span>',1),D=t("li",null,"map 实现HashMap， TreeMap",-1),F={class:"katex"},G={class:"katex-mathml"},J=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span>',1),K=t("h2",{id:"hashmap-hashset-treemap-treeset",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#hashmap-hashset-treemap-treeset","aria-hidden":"true"},"#"),n(" HashMap, HashSet, TreeMap, TreeSet")],-1),P={class:"katex"},Q={class:"katex-mathml"},R=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span>',1),U={class:"katex"},W={class:"katex-mathml"},X=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),Y=t("h2",{id:"题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#题目","aria-hidden":"true"},"#"),n(" 题目")],-1),Z={href:"https://leetcode.cn/problems/valid-anagram/",target:"_blank",rel:"noopener noreferrer"},$=t("strong",null,"解1",-1),ss={class:"katex"},as={class:"katex-mathml"},ns=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">Nl</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),ts=t("strong",null,"解2",-1),ls={class:"katex"},es={class:"katex-mathml"},ps=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),os={href:"https://leetcode.cn/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"},cs={href:"https://leetcode.cn/problems/3sum/",target:"_blank",rel:"noopener noreferrer"},is=t("strong",null,"解1",-1),us={class:"katex"},rs={class:"katex-mathml"},ds=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),ms={class:"katex"},hs={class:"katex-mathml"},_s=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),fs=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// b 是自己， 查找自己有没有被需要</span>
    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> <span class="token operator">-</span>a<span class="token operator">-</span>b<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">-</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span> <span class="token comment">// 放需要的</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token operator">-</span>a <span class="token operator">-</span> b <span class="token comment">// b 是自己， c是需要的</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 查找需要的</span>
    result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> c<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 放自己</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),gs=t("strong",null,"解2",-1),ks={class:"katex"},xs={class:"katex-mathml"},ys=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">Nl</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),vs={class:"katex"},ws={class:"katex-mathml"},bs=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span>',1),Ms={href:"https://leetcode.cn/problems/4sum/",target:"_blank",rel:"noopener noreferrer"};function Os(Ns,Ls){const d=r("router-link"),l=r("mi"),_=r("msup"),o=r("mrow"),c=r("annotation"),i=r("semantics"),u=r("math"),e=r("mo"),m=r("mn"),h=r("ExternalLinkIcon");return g(),k("div",null,[w,t("nav",b,[t("ul",null,[t("li",null,[s(d,{to:"#哈希表-哈希函数-碰撞"},{default:a(()=>[n("哈希表，哈希函数，碰撞")]),_:1})]),t("li",null,[s(d,{to:"#哈希函数"},{default:a(()=>[n("哈希函数")]),_:1}),t("ul",null,[t("li",null,[s(d,{to:"#碰撞"},{default:a(()=>[n("碰撞")]),_:1})])])]),t("li",null,[s(d,{to:"#list-vs-map-vs-set"},{default:a(()=>[n("list vs map vs set")]),_:1})]),t("li",null,[s(d,{to:"#hashmap-hashset-treemap-treeset"},{default:a(()=>[n("HashMap, HashSet, TreeMap, TreeSet")]),_:1})]),t("li",null,[s(d,{to:"#题目"},{default:a(()=>[n("题目")]),_:1})])])]),M,t("ul",null,[t("li",null,[O,t("ul",null,[N,t("li",null,[n("二次探测法，占用了放"),t("span",L,[t("span",S,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(_,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("n^n")]),_:1})]),_:1})]),_:1})]),z]),n("的位置中")])])]),H,T]),j,V,t("ul",null,[t("li",null,[n("list 数组/链表实现，元素可重复，查找"),t("span",B,[t("span",E,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(N)")]),_:1})]),_:1})]),_:1})]),C]),n(", 插入"),t("span",I,[t("span",q,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[n("1")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(1)")]),_:1})]),_:1})]),_:1})]),A]),n("。")]),D,t("li",null,[n("set 不可重复， 哈希表或二叉搜索树实现, HashSet, TreeSet，查找"),t("span",F,[t("span",G,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[n("1")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(1)")]),_:1})]),_:1})]),_:1})]),J])])]),K,t("ul",null,[t("li",null,[n("Hash 实现查找"),t("span",P,[t("span",Q,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(m,null,{default:a(()=>[n("1")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(1)")]),_:1})]),_:1})]),_:1})]),R]),n(" hash中乱序， 但是时间块")]),t("li",null,[n("Tree 二叉树实现的"),t("span",U,[t("span",W,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("g")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(logN)")]),_:1})]),_:1})]),_:1})]),X]),n(" tree的元素排序好了， 相对有序的排列， 但是时间复杂")])]),Y,t("ul",null,[t("li",null,[t("a",Z,[n("字母异位"),s(h)])])]),t("p",null,[$,n("：排序，快排 "),t("span",ss,[t("span",as,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("g")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(NlogN)")]),_:1})]),_:1})]),_:1})]),ns])]),t("p",null,[ts,n("：计数，利用map "),t("span",ls,[t("span",es,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(N)")]),_:1})]),_:1})]),_:1})]),ps])]),t("ul",null,[t("li",null,[t("p",null,[t("a",os,[n("two sum"),s(h)]),n(" 利用map 或set")])]),t("li",null,[t("p",null,[t("a",cs,[n("three sum"),s(h)])])])]),t("p",null,[is,n(": 前两个树嵌套循环， 最后一个数用set查找, set 中放自己，查找就找我需要的， set 中放需要的， 查找就找自己（被需要）， "),t("span",us,[t("span",rs,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(_,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(m,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(n^2)")]),_:1})]),_:1})]),_:1})]),ds]),n("， 空间"),t("span",ms,[t("span",hs,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(N)")]),_:1})]),_:1})]),_:1})]),_s])]),fs,t("p",null,[gs,n(": sort & find, 先排序"),t("span",ks,[t("span",xs,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("g")]),_:1}),s(l,null,{default:a(()=>[n("N")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(NlogN)")]),_:1})]),_:1})]),_:1})]),ys]),n("，遍历一个数， 后两个数双指针， 大于目标右指针左移， 小于目标左指针右移 "),t("span",vs,[t("span",ws,[s(u,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(o,null,{default:a(()=>[s(l,null,{default:a(()=>[n("O")]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(_,null,{default:a(()=>[s(l,null,{default:a(()=>[n("n")]),_:1}),s(m,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(e,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(c,{encoding:"application/x-tex"},{default:a(()=>[n("O(n^2)")]),_:1})]),_:1})]),_:1})]),bs]),n("， 空间不需要set， 空间复杂度小")]),t("ul",null,[t("li",null,[t("a",Ms,[n("four sum"),s(h)])])])])}const zs=f(v,[["render",Os],["__file","映射-集合.html.vue"]]);export{zs as default};

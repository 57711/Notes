import{_ as e,o as a,c as l,e as i}from"./app-7D7ZZLlA.js";const r={},t=i('<h1 id="跨域" tabindex="-1"><a class="header-anchor" href="#跨域" aria-hidden="true">#</a> 跨域</h1><h2 id="cors" tabindex="-1"><a class="header-anchor" href="#cors" aria-hidden="true">#</a> cors</h2><p>无论是否同源，后端服务器都会接到请求，所以才会对非简单请求做预校验的优化。</p><p>服务器添加响应头<code>Access-Control-Allow-Origin</code>, 浏览器根据响应头中的值来判断是否拦截。</p><h3 id="简单请求" tabindex="-1"><a class="header-anchor" href="#简单请求" aria-hidden="true">#</a> 简单请求</h3><ul><li>请求方法必须是以下之一：GET、HEAD、POST，也就是说 PUT、PATCH 等方法必然会触发预检。</li><li>只有以下 header 字段允许被修改或被设置，否则必然触发预检。 <ul><li>Accept、Accept-Language、Content-language、Content-Type（但有限定值）、DPR、Downlink、Save-Data、Viewport-Width、Width</li><li>Content-Type 的值只被允许设置为以下三个之一： <ul><li>application/x-www-form-urlencoded、</li><li>multipart/form-data、</li><li>text/plain。 也就是说，如果请求的 Content-Type 被设置为 application/json;charset=utf-8 时也必然会触发预检。</li></ul></li><li>添加任何额外的自定义的 header 都会触发预检，例如 x-request-id，但服务端可以设置缓存这一个请求的OPTIONS 响应。</li></ul></li><li>如果是XMLHttpRequestUpload发出的，在请求中使用的任何对象上都没有注册事件侦听器。也就是说，给定一个 XMLHttpRequest 实例 xhr，没有调用 xhr.upload.addEventListener()，以监听该上传请求。</li><li>请求中未使用ReadableStream对象。</li></ul><h3 id="非简单请求" tabindex="-1"><a class="header-anchor" href="#非简单请求" aria-hidden="true">#</a> 非简单请求</h3><p>有预检（OPTIONS）</p><h4 id="预检请求头" tabindex="-1"><a class="header-anchor" href="#预检请求头" aria-hidden="true">#</a> 预检请求头</h4><ul><li>Access-Control-Request-Method</li><li>Access-Control-Request-Headers：非简单的 header 字段</li></ul><h4 id="预检响应头" tabindex="-1"><a class="header-anchor" href="#预检响应头" aria-hidden="true">#</a> 预检响应头</h4><ul><li>Access-Control-Allow-Origin: 允许哪些域被允许跨域</li><li>Access-Control-Allow-Credentials: 是否携带票据访问（对应 fetch 方法中 credentials），当该值为 true 时，- Access-Control-Allow-Origin 不允许设置为 *</li><li>Access-Control-Allow-Methods: 标识该资源支持哪些方法，例如：POST, GET, PUT, DELETE</li><li>Access-Control-Allow-Headers: 标识允许哪些额外的自定义 header 字段和非简单值的字段（这个后面会解释）</li><li>Access-Control-Max-Age: 表示可以缓存 Access-Control-Allow-Methods 和 Access-Control-Allow-Headers 提供的信息多长时间，单位秒，一般为10分钟。</li><li>Access-Control-Expose-Headers: 通过该字段指出哪些额外的 header 可以被支持。</li></ul><h4 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存" aria-hidden="true">#</a> 缓存</h4><p>Access-Control-Max-Age， 在缓存有效期内，该资源的请求（URL和header字段都相同的情况下）不会再触发预检。</p>',14),o=[t];function s(c,n){return a(),l("div",null,o)}const h=e(r,[["render",s],["__file","跨域.html.vue"]]);export{h as default};

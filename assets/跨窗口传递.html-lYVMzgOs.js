import{_ as e,r as p,o,c,a as n,d as s,b as t,e as i}from"./app-7D7ZZLlA.js";const l={},u=n("h1",{id:"跨窗口传递",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#跨窗口传递","aria-hidden":"true"},"#"),s(" 跨窗口传递")],-1),r={href:"/frontend/%E5%AE%9E%E7%8E%B0tab%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="window-open-打开的子窗口" tabindex="-1"><a class="header-anchor" href="#window-open-打开的子窗口" aria-hidden="true">#</a> window.open() 打开的子窗口</h2><p><code>window.open</code> 返回打开窗口的 window</p><p><code>window.opener</code> 获取打开的 window</p><p><code>window.close()</code> 关闭这个 window</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 发送端,父</span>
<span class="token keyword">const</span> childWin <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;/child&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
childWin<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;msg from parent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送端,子</span>
window<span class="token punctuation">.</span>opener<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;msg from child&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 接收端</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
  <span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 此 if 作为来源检查。
     * 因为此监听可以接收任意来源的 postmessage
     * */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin <span class="token operator">!==</span> e<span class="token punctuation">.</span>origin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//打印结果：我是父窗口传递的参数</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iframe-打开的子窗口" tabindex="-1"><a class="header-anchor" href="#iframe-打开的子窗口" aria-hidden="true">#</a> iframe 打开的子窗口</h2><p><code>window.parent</code> 返回父 window，iframe。没有父的话父就是自己<code>window.parent === window</code></p><p><code>window.frames</code> 返回当前 window 的子 frames</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/child<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>childIframe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 父传子</span>
<span class="token keyword">const</span> childIframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;childIframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
childIframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;msg from parent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
window<span class="token punctuation">.</span>frames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;msg from parent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 子传父</span>
window<span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;我是子窗口传递的参数&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="没有关系的窗口" tabindex="-1"><a class="header-anchor" href="#没有关系的窗口" aria-hidden="true">#</a> 没有关系的窗口</h2>`,11),k={href:"/frontend/%E5%AE%9E%E7%8E%B0tab%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",target:"_blank",rel:"noopener noreferrer"},m=n("ul",null,[n("li",null,[n("p",null,"BroadcastChannel，MessageChannel（需要通过 postmessage 将其中一个 port 先发送过去）")]),n("li",null,[n("p",null,"借助第三方存储，localstorage，IndexedDB，cookie")]),n("li",null,[n("p",null,"借助第三方中转，service worker，shared worker")])],-1);function v(h,g){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[s("实现 tab 之间通信"),t(a)])]),d,n("p",null,[n("a",k,[s("实现 tab 之间通信"),t(a)])]),m])}const b=e(l,[["render",v],["__file","跨窗口传递.html.vue"]]);export{b as default};

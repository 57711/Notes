import{_ as k,r as u,o as g,c as f,a as t,d as n,b as s,w as a,e as p}from"./app-7D7ZZLlA.js";const v={},b=p(`<h1 id="递归-recursion-分治-divide-conquer" tabindex="-1"><a class="header-anchor" href="#递归-recursion-分治-divide-conquer" aria-hidden="true">#</a> 递归 recursion &amp; 分治 divide &amp; conquer</h1><h2 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h2><ul><li>阶乘（函数内调用一次自己）</li><li>斐波那契数列(会有大量重复计算，函数内调用两次自己)</li></ul><p><strong>递归可能会出现重复计算</strong>，斐波那契数列</p><h3 id="递归模版" tabindex="-1"><a class="header-anchor" href="#递归模版" aria-hidden="true">#</a> 递归模版</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">recursion</span> <span class="token punctuation">(</span><span class="token parameter">level<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 递归终止条件</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>level <span class="token operator">&gt;</span> <span class="token constant">MAX_LEVEL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// 单次递归处理逻辑</span>
    <span class="token function">process_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// 递归调用</span>
    <span class="token function">recursion</span><span class="token punctuation">(</span>level <span class="token operator">++</span><span class="token punctuation">,</span> <span class="token operator">...</span>new_args<span class="token punctuation">)</span>

    <span class="token comment">// 调用后的处理</span>
    <span class="token function">reverse_state</span><span class="token punctuation">(</span>level<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分治" tabindex="-1"><a class="header-anchor" href="#分治" aria-hidden="true">#</a> 分治</h2>`,7),y={class:"katex"},x={class:"katex-mathml"},w=t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.4306em"}}),t("span",{class:"mord mathnormal"},"n")])],-1),M={class:"katex"},N={class:"katex-mathml"},z=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span>',1),L={class:"katex"},O={class:"katex-mathml"},j=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span>',1),P=p(`<h3 id="分治模版" tabindex="-1"><a class="header-anchor" href="#分治模版" aria-hidden="true">#</a> 分治模版</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">divisionConquer</span> <span class="token punctuation">(</span><span class="token parameter">problem<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 递归终止条件</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>problem<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// 拆分子问题</span>
    <span class="token keyword">let</span> subProblems <span class="token operator">=</span> <span class="token function">splitProblem</span><span class="token punctuation">(</span>problem<span class="token punctuation">)</span>

    <span class="token comment">// 对子问题递归</span>
    <span class="token keyword">let</span> subResult0 <span class="token operator">=</span> <span class="token function">divisionConquer</span><span class="token punctuation">(</span>subProblems<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token keyword">let</span> subResult1 <span class="token operator">=</span> <span class="token function">divisionConquer</span><span class="token punctuation">(</span>subProblems<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token keyword">let</span> subResult2 <span class="token operator">=</span> <span class="token function">divisionConquer</span><span class="token punctuation">(</span>subProblems<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>

    <span class="token comment">// 对结果进行处理</span>
    <span class="token keyword">return</span> <span class="token function">processResult</span><span class="token punctuation">(</span>subResult0<span class="token punctuation">,</span> subResult1<span class="token punctuation">,</span> subResult2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h3>`,3),q={href:"https://leetcode.cn/problems/powx-n/description/",target:"_blank",rel:"noopener noreferrer"},R={class:"katex"},C={class:"katex-mathml"},E=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8471em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8471em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span>',1),V={class:"katex"},B={class:"katex-mathml"},I=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span>',1),A={class:"katex"},S={class:"katex-mathml"},T=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span>',1),X={class:"katex"},D={class:"katex-mathml"},F=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span>',1),G={class:"katex"},H={class:"katex-mathml"},J=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),K=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">myPow</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token function">myPow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token operator">-</span>n<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x <span class="token operator">*</span> <span class="token function">myPow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">myPow</span><span class="token punctuation">(</span>x <span class="token operator">*</span> x<span class="token punctuation">,</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Q={href:"https://leetcode.cn/problems/majority-element/",target:"_blank",rel:"noopener noreferrer"},U=t("strong",null,"解1",-1),W={class:"katex"},Y={class:"katex-mathml"},Z=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),$=t("strong",null,"解2",-1),ss={class:"katex"},as={class:"katex-mathml"},ns=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">Nl</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1),ts=t("strong",null,"解3",-1),es={class:"katex"},ls={class:"katex-mathml"},ps=p('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">Nl</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span>',1);function cs(os,is){const e=u("mi"),c=u("mrow"),o=u("annotation"),i=u("semantics"),r=u("math"),l=u("mo"),m=u("mn"),d=u("ExternalLinkIcon"),_=u("mfrac"),h=u("msup");return g(),f("div",null,[b,t("p",null,[n("递归可以用于实现分治， 大化小 斐波那契问题， 计算"),t("span",y,[t("span",x,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),w]),n("拆分成"),t("span",M,[t("span",N,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(m,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n-1")]),_:1})]),_:1})]),_:1})]),z]),n("和"),t("span",L,[t("span",O,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(m,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n-2")]),_:1})]),_:1})]),_:1})]),j]),n(".")]),P,t("ul",null,[t("li",null,[t("a",q,[n("n次幂"),s(d)])])]),t("p",null,[n("中间一半分开，"),t("span",R,[t("span",C,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("y")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(h,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(_,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(m,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("y = x^\\frac{n}{2}")]),_:1})]),_:1})]),_:1})]),E]),n(", n分奇偶, 偶结果"),t("span",V,[t("span",B,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("y")]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(e,null,{default:a(()=>[n("y")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("y*y")]),_:1})]),_:1})]),_:1})]),I]),n(", 奇结果"),t("span",A,[t("span",S,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("y")]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(e,null,{default:a(()=>[n("y")]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(e,null,{default:a(()=>[n("x")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("y*y*x")]),_:1})]),_:1})]),_:1})]),T]),n(", 分治一直到"),t("span",X,[t("span",D,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(h,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(m,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("x^1")]),_:1})]),_:1})]),_:1})]),F]),n(", 复杂度"),t("span",G,[t("span",H,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(logN)")]),_:1})]),_:1})]),_:1})]),J])]),K,t("ul",null,[t("li",null,[t("a",Q,[n("求众数"),s(d)])])]),t("p",null,[U,n("：用Map "),t("span",W,[t("span",Y,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(N)")]),_:1})]),_:1})]),_:1})]),Z])]),t("p",null,[$,n("：排序， 计数 "),t("span",ss,[t("span",as,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(NlogN + N)")]),_:1})]),_:1})]),_:1})]),ns])]),t("p",null,[ts,n(": 分治， 左右两边各找个数最大值，再比较返回较大的值."),t("span",es,[t("span",ls,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(NlogN)")]),_:1})]),_:1})]),_:1})]),ps])])])}const us=k(v,[["render",cs],["__file","递归-分治.html.vue"]]);export{us as default};

const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":552,\"nextId\":552,\"documentIds\":{\"0\":\"v-2d0a8eae\",\"1\":\"v-2850c420\",\"2\":\"v-483e5bd4\",\"3\":\"v-483e5bd4#bfs\",\"4\":\"v-483e5bd4#代码模版\",\"5\":\"v-483e5bd4#dfs\",\"6\":\"v-483e5bd4#代码\",\"7\":\"v-483e5bd4#题目\",\"8\":\"v-b26e2920\",\"9\":\"v-b26e2920#数据结构\",\"10\":\"v-b26e2920#算法\",\"11\":\"v-b26e2920#复杂度\",\"12\":\"v-b26e2920#master-thoren\",\"13\":\"v-06b9199b\",\"14\":\"v-06b9199b#条件\",\"15\":\"v-06b9199b#模版\",\"16\":\"v-76035f25\",\"17\":\"v-76035f25#异或\",\"18\":\"v-76035f25#与\",\"19\":\"v-76035f25#非\",\"20\":\"v-76035f25#题目\",\"21\":\"v-28a2cb48\",\"22\":\"v-28a2cb48#题目\",\"23\":\"v-34a33ec5\",\"24\":\"v-34a33ec5#斐波那契\",\"25\":\"v-f96eb8b0\",\"26\":\"v-f96eb8b0#数据结构\",\"27\":\"v-f96eb8b0#核心思想\",\"28\":\"v-f96eb8b0#基本性质\",\"29\":\"v-f96eb8b0#题目\",\"30\":\"v-b6e2892e\",\"31\":\"v-b6e2892e#哈希表-哈希函数-碰撞\",\"32\":\"v-b6e2892e#哈希函数\",\"33\":\"v-b6e2892e#碰撞\",\"34\":\"v-b6e2892e#list-vs-map-vs-set\",\"35\":\"v-b6e2892e#hashmap-hashset-treemap-treeset\",\"36\":\"v-b6e2892e#题目\",\"37\":\"v-188299a8\",\"38\":\"v-188299a8#二叉树-二叉搜索树\",\"39\":\"v-188299a8#堆-完全二叉树\",\"40\":\"v-188299a8#完全二叉树\",\"41\":\"v-188299a8#堆的实现\",\"42\":\"v-188299a8#堆的操作\",\"43\":\"v-188299a8#建堆\",\"44\":\"v-188299a8#堆的应用\",\"45\":\"v-188299a8#二叉搜索树\",\"46\":\"v-188299a8#二叉树遍历\",\"47\":\"v-188299a8#题目\",\"48\":\"v-188299a8#图\",\"49\":\"v-6e1cd494\",\"50\":\"v-6e1cd494#array-数组\",\"51\":\"v-6e1cd494#linked-list-链表\",\"52\":\"v-6e1cd494#例子\",\"53\":\"v-6e1cd494#栈-队列\",\"54\":\"v-6e1cd494#例子-1\",\"55\":\"v-6e1cd494#优先队列\",\"56\":\"v-6e1cd494#实现\",\"57\":\"v-6e1cd494#例子-2\",\"58\":\"v-6e1cd494#堆的时间复杂度\",\"59\":\"v-30bc4a6e\",\"60\":\"v-30bc4a6e#单一职责原则\",\"61\":\"v-30bc4a6e#最少知识原则-迪米特法则\",\"62\":\"v-30bc4a6e#开放封闭原则\",\"63\":\"v-30bc4a6e#发布订阅-观察者\",\"64\":\"v-30bc4a6e#观察者模式\",\"65\":\"v-30bc4a6e#发布订阅\",\"66\":\"v-30bc4a6e#代码重构原则\",\"67\":\"v-7aea4773\",\"68\":\"v-7aea4773#题目\",\"69\":\"v-1889394a\",\"70\":\"v-1889394a#递归\",\"71\":\"v-1889394a#递归模版\",\"72\":\"v-1889394a#分治\",\"73\":\"v-1889394a#分治模版\",\"74\":\"v-1889394a#题目\",\"75\":\"v-ddfbee86\",\"76\":\"v-ddfbee86#location\",\"77\":\"v-ddfbee86#history-hash-路由\",\"78\":\"v-ddfbee86#url-处理\",\"79\":\"v-ddfbee86#history\",\"80\":\"v-ddfbee86#navigator\",\"81\":\"v-ddfbee86#screen\",\"82\":\"v-ddfbee86#事件\",\"83\":\"v-ddfbee86#ajax\",\"84\":\"v-ddfbee86#xmlhttprequest\",\"85\":\"v-ddfbee86#fetch\",\"86\":\"v-528d934c\",\"87\":\"v-528d934c#各种距离\",\"88\":\"v-528d934c#盒模型\",\"89\":\"v-528d934c#inline-之间的空格\",\"90\":\"v-528d934c#外边距合并\",\"91\":\"v-94b354fa\",\"92\":\"v-94b354fa#svg\",\"93\":\"v-94b354fa#canvas\",\"94\":\"v-94b354fa#webgl\",\"95\":\"v-94b354fa#渲染管线\",\"96\":\"v-94b354fa#bvh-优化-raycaster\",\"97\":\"v-94b354fa#webgpu\",\"98\":\"v-94b354fa#可视化\",\"99\":\"v-06198984\",\"100\":\"v-1db6e4d2\",\"101\":\"v-1db6e4d2#响应式不同\",\"102\":\"v-1db6e4d2#更新流程\",\"103\":\"v-1db6e4d2#数据流向\",\"104\":\"v-1db6e4d2#功能组合\",\"105\":\"v-1db6e4d2#模版\",\"106\":\"v-1db6e4d2#vuex-redux\",\"107\":\"v-1db6e4d2#都是基于虚拟-dom\",\"108\":\"v-012a5d10\",\"109\":\"v-012a5d10#config-结构\",\"110\":\"v-012a5d10#hash\",\"111\":\"v-012a5d10#微内核架构\",\"112\":\"v-012a5d10#webpack-require-代码\",\"113\":\"v-bd94efd2\",\"114\":\"v-bd94efd2#利用-blob-开启-worker\",\"115\":\"v-bd94efd2#功能\",\"116\":\"v-bd94efd2#特点\",\"117\":\"v-bd94efd2#应用场景\",\"118\":\"v-6db3cf80\",\"119\":\"v-6db3cf80#dns-查询优化\",\"120\":\"v-6db3cf80#tcp-连接\",\"121\":\"v-6db3cf80#避免重定向\",\"122\":\"v-6db3cf80#缓存策略\",\"123\":\"v-6db3cf80#http-缓存\",\"124\":\"v-6db3cf80#强缓存\",\"125\":\"v-6db3cf80#协商缓存\",\"126\":\"v-6db3cf80#启发式缓存\",\"127\":\"v-6db3cf80#请求响应过程\",\"128\":\"v-6db3cf80#大包个数及大小优化\",\"129\":\"v-6db3cf80#基于构建工具的优化-webpack\",\"130\":\"v-6db3cf80#http2\",\"131\":\"v-6db3cf80#帧\",\"132\":\"v-6db3cf80#流\",\"133\":\"v-6db3cf80#服务器推送\",\"134\":\"v-6db3cf80#http2-的坑\",\"135\":\"v-6db3cf80#http2-带来的修改\",\"136\":\"v-6db3cf80#http3\",\"137\":\"v-6db3cf80#解析-html\",\"138\":\"v-6db3cf80#css\",\"139\":\"v-6db3cf80#defer-async\",\"140\":\"v-6db3cf80#其他\",\"141\":\"v-6db3cf80#webpack-打包时优化\",\"142\":\"v-215b8b5e\",\"143\":\"v-215b8b5e#选型\",\"144\":\"v-215b8b5e#整体运行结构与架构设计\",\"145\":\"v-215b8b5e#渲染引擎设计\",\"146\":\"v-215b8b5e#编辑器渲染\",\"147\":\"v-215b8b5e#组件渲染\",\"148\":\"v-215b8b5e#组件组装与数据导入\",\"149\":\"v-215b8b5e#组件物料仓库设计\",\"150\":\"v-215b8b5e#加载数据源配置\",\"151\":\"v-215b8b5e#配置面板\",\"152\":\"v-215b8b5e#拖拽布局系统-画布\",\"153\":\"v-215b8b5e#组件配置-配置面板\",\"154\":\"v-1f3bf18a\",\"155\":\"v-1f3bf18a#硬连接-软连接\",\"156\":\"v-1f3bf18a#硬连接\",\"157\":\"v-1f3bf18a#软连接-符号连接\",\"158\":\"v-1f3bf18a#区别\",\"159\":\"v-1f3bf18a#pnpm\",\"160\":\"v-1f3bf18a#npm\",\"161\":\"v-5b482826\",\"162\":\"v-5b482826#直接交换\",\"163\":\"v-5b482826#第三方存储\",\"164\":\"v-5b482826#第三方中转\",\"165\":\"v-3846ceee\",\"166\":\"v-3846ceee#lcp-可能被这四个因素影响\",\"167\":\"v-3846ceee#解决\",\"168\":\"v-3846ceee#fid-first-input-delay-可能被这四个因素影响-被-inp-替代\",\"169\":\"v-3846ceee#如何优化-cls-我们可以根据这些原则来避免非预期布局移动\",\"170\":\"v-3846ceee#inp-interaction-to-next-paint-替代-fid\",\"171\":\"v-3846ceee#解决目的就是释放主线程\",\"172\":\"v-3846ceee#大厂监控体系\",\"173\":\"v-3846ceee#bigpipe\",\"174\":\"v-01861d3e\",\"175\":\"v-01861d3e#tcp\",\"176\":\"v-01861d3e#连接过程\",\"177\":\"v-01861d3e#三次握手的原因\",\"178\":\"v-01861d3e#tls\",\"179\":\"v-01861d3e#tls1-3\",\"180\":\"v-01861d3e#椭圆曲线离散对数-tls1-2\",\"181\":\"v-01861d3e#tcp-udp-区别\",\"182\":\"v-01861d3e#http-请求头\",\"183\":\"v-01861d3e#host\",\"184\":\"v-01861d3e#origin-表明请求来源\",\"185\":\"v-01861d3e#referer\",\"186\":\"v-01861d3e#http-1-0-1-1-2\",\"187\":\"v-01861d3e#状态码\",\"188\":\"v-01861d3e#_3xx\",\"189\":\"v-01861d3e#_301-moved-permanently-永久\",\"190\":\"v-01861d3e#_302-found-临时\",\"191\":\"v-01861d3e#_303-see-other\",\"192\":\"v-01861d3e#_304-not-modified\",\"193\":\"v-01861d3e#_307-temporary-redirect\",\"194\":\"v-01861d3e#_308-permanent-redirect\",\"195\":\"v-01861d3e#_4xx\",\"196\":\"v-01861d3e#_401-unauthorized\",\"197\":\"v-01861d3e#_403-forbidden\",\"198\":\"v-01861d3e#_404-not-found\",\"199\":\"v-01861d3e#websocket\",\"200\":\"v-01861d3e#headers\",\"201\":\"v-01861d3e#sse-server-sent-events\",\"202\":\"v-01861d3e#安全\",\"203\":\"v-01861d3e#csrf-跨站请求伪造\",\"204\":\"v-01861d3e#xss-跨站脚本攻击\",\"205\":\"v-01861d3e#noreferer-noopener\",\"206\":\"v-01861d3e#noreferer\",\"207\":\"v-01861d3e#noopener\",\"208\":\"v-01861d3e#三方-cookie\",\"209\":\"v-01861d3e#chips\",\"210\":\"v-01861d3e#first-party-sets-第一方集\",\"211\":\"v-196ac998\",\"212\":\"v-4234431a\",\"213\":\"v-4234431a#cors\",\"214\":\"v-4234431a#简单请求\",\"215\":\"v-4234431a#非简单请求\",\"216\":\"v-4234431a#预检请求头\",\"217\":\"v-4234431a#预检响应头\",\"218\":\"v-4234431a#缓存\",\"219\":\"v-5ca6b9e1\",\"220\":\"v-5ca6b9e1#前端\",\"221\":\"v-5ca6b9e1#浏览器\",\"222\":\"v-5ca6b9e1#crossorigin\",\"223\":\"v-5ca6b9e1#vue\",\"224\":\"v-5ca6b9e1#react\",\"225\":\"v-5ca6b9e1#nodejs\",\"226\":\"v-5ca6b9e1#express\",\"227\":\"v-5ca6b9e1#修饰器添加-try-catch-捕获异步\",\"228\":\"v-ac8975f2\",\"229\":\"v-ac8975f2#输入-url-发生什么-浏览器进程\",\"230\":\"v-ac8975f2#reflow-重排\",\"231\":\"v-ac8975f2#repaint-重绘-发生在-style\",\"232\":\"v-ac8975f2#transform-效率高\",\"233\":\"v-ac8975f2#从文本解析-html\",\"234\":\"v-ac8975f2#事件\",\"235\":\"v-ac8975f2#渲染过程\",\"236\":\"v-ac8975f2#几种-tree\",\"237\":\"v-ac8975f2#dom-tree\",\"238\":\"v-ac8975f2#renderobject-tree\",\"239\":\"v-ac8975f2#renderlayers-tree\",\"240\":\"v-ac8975f2#graphicslayers-compositelayer-对-renderlayer-提供后端存储\",\"241\":\"v-ac8975f2#进程线程\",\"242\":\"v-f6193b3a\",\"243\":\"v-f6193b3a#项目本质\",\"244\":\"v-f6193b3a#亮点\",\"245\":\"v-f6193b3a#monorepo\",\"246\":\"v-f6193b3a#优缺点\",\"247\":\"v-f6193b3a#实现\",\"248\":\"v-f6193b3a#lerna\",\"249\":\"v-f6193b3a#independent-模式\",\"250\":\"v-f6193b3a#fixed-locked-模式\",\"251\":\"v-f6193b3a#pnppm-yarn\",\"252\":\"v-f6193b3a#测试\",\"253\":\"v-f6193b3a#ts\",\"254\":\"v-f6193b3a#webpack-相关\",\"255\":\"v-f6193b3a#react\",\"256\":\"v-f6193b3a#前端构建\",\"257\":\"v-f6193b3a#boundled\",\"258\":\"v-f6193b3a#boundleless-noboundle\",\"259\":\"v-f6193b3a#css-隔离方案\",\"260\":\"v-f6193b3a#css-in-js\",\"261\":\"v-f6193b3a#css-module\",\"262\":\"v-f6193b3a#utility-css\",\"263\":\"v-f6193b3a#shadowdom\",\"264\":\"v-f6193b3a#组件方案\",\"265\":\"v-f6193b3a#微前端方案\",\"266\":\"v-f6193b3a#js-隔离\",\"267\":\"v-f6193b3a#消息推送\",\"268\":\"v-f6193b3a#特色项目\",\"269\":\"v-6ba496b8\",\"270\":\"v-6ba496b8#获取上下文的问题\",\"271\":\"v-6ba496b8#asynclocalstoragel-使用\",\"272\":\"v-f2ca203e\",\"273\":\"v-f2ca203e#信令服务器\",\"274\":\"v-f2ca203e#stun\",\"275\":\"v-f2ca203e#turn\",\"276\":\"v-f2ca203e#ice\",\"277\":\"v-f2ca203e#webrtc-api\",\"278\":\"v-f2ca203e#连接过程\",\"279\":\"v-1c7c8556\",\"280\":\"v-1c7c8556#buffer\",\"281\":\"v-1c7c8556#node中的buffer模块\",\"282\":\"v-1c7c8556#proto-buffer-二进制协议编码库\",\"283\":\"v-1c7c8556#_8kb\",\"284\":\"v-6ec62394\",\"285\":\"v-6ec62394#_1-platforminit\",\"286\":\"v-6ec62394#_2-argv-uv-setup-args-argc-grgv\",\"287\":\"v-6ec62394#_3-init-argc-const-cast-argv-exec-argc-exec-argv\",\"288\":\"v-6ec62394#_4-v8-initialize\",\"289\":\"v-6ec62394#_5-start-uv-default-loop-argc-argv-exec-argc-exec-argv\",\"290\":\"v-2fe4ecaa\",\"291\":\"v-2fe4ecaa#process-对象\",\"292\":\"v-2fe4ecaa#rpc\",\"293\":\"v-2fe4ecaa#net-模块\",\"294\":\"v-2fe4ecaa#restful-api\",\"295\":\"v-2fe4ecaa#graphql\",\"296\":\"v-2fe4ecaa#前后端同构\",\"297\":\"v-2fe4ecaa#压测\",\"298\":\"v-2fe4ecaa#nodejs-性能分析工具\",\"299\":\"v-2fe4ecaa#优化的方法\",\"300\":\"v-2fe4ecaa#垃圾回收-gc\",\"301\":\"v-2fe4ecaa#减少内存使用\",\"302\":\"v-2fe4ecaa#检查内存泄漏\",\"303\":\"v-2fe4ecaa#编写-c-插件加速运行\",\"304\":\"v-67002cb2\",\"305\":\"v-67002cb2#基本结构\",\"306\":\"v-67002cb2#注意\",\"307\":\"v-67002cb2#跨请求状态污染\",\"308\":\"v-67002cb2#两种获取数据方式\",\"309\":\"v-1145eece\",\"310\":\"v-34d3e130\",\"311\":\"v-34d3e130#event-loop-流程\",\"312\":\"v-34d3e130#本质\",\"313\":\"v-34d3e130#浏览器中-event-loop\",\"314\":\"v-34d3e130#node\",\"315\":\"v-34d3e130#队列优先级\",\"316\":\"v-0506d90e\",\"317\":\"v-0506d90e#rail模型衡量前端性能\",\"318\":\"v-0506d90e#缓存\",\"319\":\"v-0506d90e#nginx\",\"320\":\"v-936a38fe\",\"321\":\"v-936a38fe#第一范式-1nf-列的原子性\",\"322\":\"v-936a38fe#第二范式-2nf-消除部分依赖\",\"323\":\"v-936a38fe#第三范式-3nf-消除传递依赖\",\"324\":\"v-137cb854\",\"325\":\"v-137cb854#configure-命令\",\"326\":\"v-137cb854#make\",\"327\":\"v-137cb854#make-install\",\"328\":\"v-2d0a9a6d\",\"329\":\"v-6e267ee7\",\"330\":\"v-6e267ee7#var-let-区别\",\"331\":\"v-6e267ee7#let-编译为-var\",\"332\":\"v-6e267ee7#同时用-let-var\",\"333\":\"v-14235f8b\",\"334\":\"v-14235f8b#方法\",\"335\":\"v-14235f8b#promise-race\",\"336\":\"v-14235f8b#可以用于请求的超时\",\"337\":\"v-14235f8b#用于查看-promise-状态\",\"338\":\"v-14235f8b#用于限制同时执行-promise-个数\",\"339\":\"v-14235f8b#promise-多级嵌套-eventloop-执行\",\"340\":\"v-14235f8b#promise-内同时-resolve-reject\",\"341\":\"v-14235f8b#then\",\"342\":\"v-14235f8b#finally\",\"343\":\"v-14235f8b#async-function\",\"344\":\"v-14235f8b#await-执行顺序\",\"345\":\"v-14235f8b#async-generator\",\"346\":\"v-367619b4\",\"347\":\"v-225c23a4\",\"348\":\"v-225c23a4#实现原理\",\"349\":\"v-225c23a4#下面我们看下es-module的特性\",\"350\":\"v-62ddaaad\",\"351\":\"v-62ddaaad#类型-type\",\"352\":\"v-62ddaaad#类型注释-annotation-推断-inference\",\"353\":\"v-62ddaaad#tuple\",\"354\":\"v-62ddaaad#interface\",\"355\":\"v-62ddaaad#clases\",\"356\":\"v-62ddaaad#主动推断函数的类型\",\"357\":\"v-0307e0cf\",\"358\":\"v-0307e0cf#上下文\",\"359\":\"v-0307e0cf#预编译\",\"360\":\"v-0307e0cf#全局预编译\",\"361\":\"v-0307e0cf#函数预编译\",\"362\":\"v-0307e0cf#总结\",\"363\":\"v-0307e0cf#iife\",\"364\":\"v-0307e0cf#针对作用域优化\",\"365\":\"v-5be367c1\",\"366\":\"v-74b922e2\",\"367\":\"v-74b922e2#v8-中对象的结构\",\"368\":\"v-74b922e2#隐藏类\",\"369\":\"v-74b922e2#例子\",\"370\":\"v-74b922e2#命名属性的不同存储方式\",\"371\":\"v-74b922e2#例子-1\",\"372\":\"v-74b922e2#可索引属性和命名属性\",\"373\":\"v-74b922e2#property-存储模式-对象内-快属性-慢属性\",\"374\":\"v-74b922e2#delete\",\"375\":\"v-74b922e2#console-log\",\"376\":\"v-74b922e2#垃圾回收\",\"377\":\"v-74b922e2#新生代与老生代\",\"378\":\"v-74b922e2#新声代\",\"379\":\"v-74b922e2#scavenge\",\"380\":\"v-74b922e2#scavenge-的缺点\",\"381\":\"v-74b922e2#scavenge-的优点\",\"382\":\"v-74b922e2#晋升\",\"383\":\"v-74b922e2#老生代\",\"384\":\"v-74b922e2#mark-sweep\",\"385\":\"v-74b922e2#mark-compact\",\"386\":\"v-74b922e2#增量式标记回收-incremental-marking\",\"387\":\"v-74b922e2#总结\",\"388\":\"v-219820dc\",\"389\":\"v-219820dc#箭头函数编译\",\"390\":\"v-219820dc#函数的上下文\",\"391\":\"v-219820dc#类\",\"392\":\"v-219820dc#只读属性-利用-getter\",\"393\":\"v-219820dc#私有属性-利用闭包\",\"394\":\"v-219820dc#封装-适配器模式\",\"395\":\"v-219820dc#继承\",\"396\":\"v-219820dc#手写一个继承逻辑\",\"397\":\"v-219820dc#手写一个-new-逻辑\",\"398\":\"v-c97d4a10\",\"399\":\"v-c97d4a10#-1\",\"400\":\"v-c97d4a10#object-is\",\"401\":\"v-450e0182\",\"402\":\"v-eee84198\",\"403\":\"v-eee84198#js数据类型\",\"404\":\"v-eee84198#js是动态类型\",\"405\":\"v-eee84198#js是弱类型\",\"406\":\"v-eee84198#原始值\",\"407\":\"v-eee84198#引用\",\"408\":\"v-eee84198#数据属性\",\"409\":\"v-eee84198#访问器属性\",\"410\":\"v-eee84198#数组-类型化数组\",\"411\":\"v-eee84198#set-map-weakmap-weakset\",\"412\":\"v-eee84198#强制类型转换\",\"413\":\"v-266965da\",\"414\":\"v-266965da#对象循环遍历方法\",\"415\":\"v-266965da#for-in\",\"416\":\"v-266965da#object-keys-object-values-object-ectries\",\"417\":\"v-266965da#object-getownpropertynames-object-getownpropertysymbols\",\"418\":\"v-266965da#reflect-ownkeys\",\"419\":\"v-266965da#for-of\",\"420\":\"v-266965da#array-的-length\",\"421\":\"v-266965da#总结\",\"422\":\"v-266965da#对象指针\",\"423\":\"v-266965da#判断-object-还是-array\",\"424\":\"v-266965da#两层循环跳出\",\"425\":\"v-751f5990\",\"426\":\"v-751f5990#为什么模块化\",\"427\":\"v-751f5990#commonjs\",\"428\":\"v-751f5990#循环引用\",\"429\":\"v-751f5990#webpack-实现代码\",\"430\":\"v-751f5990#esmodule\",\"431\":\"v-751f5990#html-中\",\"432\":\"v-751f5990#node-中\",\"433\":\"v-751f5990#循环引用-1\",\"434\":\"v-751f5990#cjs-esm-区别\",\"435\":\"v-0e85ffcb\",\"436\":\"v-9f1cea60\",\"437\":\"v-9f1cea60#window-open-打开的子窗口\",\"438\":\"v-9f1cea60#iframe-打开的子窗口\",\"439\":\"v-9f1cea60#没有关系的窗口\",\"440\":\"v-2e4c22b2\",\"441\":\"v-2e4c22b2#更多-hooks-使用\",\"442\":\"v-2e4c22b2#hooks-运行原理\",\"443\":\"v-2e4c22b2#mountstate-mount-阶段的-usestate\",\"444\":\"v-2e4c22b2#updatestate-update-阶段\",\"445\":\"v-2e4c22b2#总结\",\"446\":\"v-2e4c22b2#useref-使用\",\"447\":\"v-2e4c22b2#ref-callback\",\"448\":\"v-2e4c22b2#forwardref\",\"449\":\"v-2e4c22b2#expose-useimperativehandle\",\"450\":\"v-2e4c22b2#context-使用\",\"451\":\"v-2e4c22b2#useeffect\",\"452\":\"v-2e4c22b2#usememo-使用\",\"453\":\"v-2e4c22b2#usecallback\",\"454\":\"v-2e4c22b2#hoc\",\"455\":\"v-2e4c22b2#属性代理\",\"456\":\"v-2e4c22b2#反向继承\",\"457\":\"v-2e4c22b2#利用-suspence-的异步变同步\",\"458\":\"v-2e4c22b2#suspence-模拟实现\",\"459\":\"v-dc3b2a6e\",\"460\":\"v-5eeb88fe\",\"461\":\"v-5eeb88fe#vue-中\",\"462\":\"v-5c51d439\",\"463\":\"v-5c51d439#用法\",\"464\":\"v-5c51d439#懒加载\",\"465\":\"v-5c51d439#原理\",\"466\":\"v-2b12f88c\",\"467\":\"v-2b12f88c#react-相关概念\",\"468\":\"v-2b12f88c#异步可中断-fiber\",\"469\":\"v-2b12f88c#双缓存\",\"470\":\"v-2b12f88c#react-中数据结构-vdom-fiber-真实-dom\",\"471\":\"v-2b12f88c#vdom-element\",\"472\":\"v-2b12f88c#fiber-链表形式\",\"473\":\"v-2b12f88c#react-包\",\"474\":\"v-2b12f88c#渲染流程\",\"475\":\"v-2b12f88c#render-开始\",\"476\":\"v-2b12f88c#beginwork\",\"477\":\"v-2b12f88c#completework\",\"478\":\"v-2b12f88c#commitwork\",\"479\":\"v-2b12f88c#可中断更新\",\"480\":\"v-2b12f88c#模拟实现\",\"481\":\"v-dd505424\",\"482\":\"v-dd505424#状态管理\",\"483\":\"v-dd505424#compose\",\"484\":\"v-dd505424#redux-1\",\"485\":\"v-dd505424#dispatch\",\"486\":\"v-dd505424#store\",\"487\":\"v-dd505424#更新-middleware\",\"488\":\"v-dd505424#subscribe\",\"489\":\"v-dd505424#combinereducer\",\"490\":\"v-dd505424#react-redux\",\"491\":\"v-dd505424#hooks\",\"492\":\"v-dd505424#redux-thunk\",\"493\":\"v-dd505424#redux-saga\",\"494\":\"v-6b508c26\",\"495\":\"v-6b508c26#类和函数组件\",\"496\":\"v-6b508c26#函数组件优势\",\"497\":\"v-6b508c26#函数组件问题\",\"498\":\"v-6b508c26#总结\",\"499\":\"v-6b508c26#函数式编程\",\"500\":\"v-03fe2f75\",\"501\":\"v-03fe2f75#请求瀑布问题\",\"502\":\"v-03fe2f75#解决-将请求数据的逻辑收敛到路由方案中\",\"503\":\"v-03fe2f75#类组件声明周期\",\"504\":\"v-03fe2f75#初始化阶段\",\"505\":\"v-03fe2f75#constructor\",\"506\":\"v-03fe2f75#static-getderivedstatefromprops-静态函数\",\"507\":\"v-03fe2f75#unsafe-componentwillmount\",\"508\":\"v-03fe2f75#render\",\"509\":\"v-03fe2f75#componentdidmount\",\"510\":\"v-03fe2f75#更新阶段\",\"511\":\"v-03fe2f75#unsafe-componentwillreceiveprops\",\"512\":\"v-03fe2f75#getderivedstatefromprops\",\"513\":\"v-03fe2f75#shouldcomponentupdate\",\"514\":\"v-03fe2f75#unsafe-componentwillupdate\",\"515\":\"v-03fe2f75#render-1\",\"516\":\"v-03fe2f75#getsnapshotbeforeupdate\",\"517\":\"v-03fe2f75#componentdidupdate\",\"518\":\"v-03fe2f75#销毁阶段\",\"519\":\"v-03fe2f75#componentwillunmount\",\"520\":\"v-03fe2f75#其他\",\"521\":\"v-03fe2f75#componentdidcatch\",\"522\":\"v-03fe2f75#react-16-之前的生命周期\",\"523\":\"v-03fe2f75#react-16-之后的生命周期\",\"524\":\"v-03fe2f75#函数组件-声明周期\",\"525\":\"v-9b2c90e4\",\"526\":\"v-9b2c90e4#渲染控制\",\"527\":\"v-9b2c90e4#父组件直接隔离子组件渲染\",\"528\":\"v-9b2c90e4#类组件\",\"529\":\"v-9b2c90e4#手动在-render-中判断-props-的改变-是否需要更新子组件\",\"530\":\"v-9b2c90e4#利用-react-memo\",\"531\":\"v-9b2c90e4#函数组件\",\"532\":\"v-9b2c90e4#usememo\",\"533\":\"v-9b2c90e4#组件本身控制要不要额外渲染\",\"534\":\"v-9b2c90e4#purecomponent\",\"535\":\"v-58040b0c\",\"536\":\"v-58040b0c#usestate\",\"537\":\"v-58040b0c#useeffect\",\"538\":\"v-a9658f5c\",\"539\":\"v-744e35e2\",\"540\":\"v-f9c6f01a\",\"541\":\"v-3d028907\",\"542\":\"v-6faec972\",\"543\":\"v-6faec972#路由的本质\",\"544\":\"v-6faec972#hash-和-history\",\"545\":\"v-6faec972#popstate\",\"546\":\"v-6faec972#简易-router\",\"547\":\"v-1cbcca63\",\"548\":\"v-785fefa1\",\"549\":\"v-785fefa1#initprop\",\"550\":\"v-785fefa1#派发更新\",\"551\":\"v-8daa1a0e\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,1],\"1\":[1,29],\"2\":[2],\"3\":[1,4],\"4\":[1,20],\"5\":[1],\"6\":[1,28],\"7\":[1,46],\"8\":[2],\"9\":[1,33],\"10\":[1,31],\"11\":[1,17],\"12\":[2,57],\"13\":[1],\"14\":[1,4],\"15\":[1,32],\"16\":[1],\"17\":[1,21],\"18\":[1,14],\"19\":[1,6],\"20\":[1,65],\"21\":[1,4],\"22\":[1,12],\"23\":[1,22],\"24\":[1,19],\"25\":[1,5],\"26\":[1,4],\"27\":[1,2],\"28\":[1,7],\"29\":[1,4],\"30\":[2,4],\"31\":[3,6],\"32\":[1,5],\"33\":[1,19],\"34\":[4,17],\"35\":[4,11],\"36\":[1,51],\"37\":[2],\"38\":[2,5],\"39\":[2],\"40\":[1,3],\"41\":[1,8],\"42\":[8,20],\"43\":[1,26],\"44\":[1,3],\"45\":[1,5],\"46\":[1,6],\"47\":[1,75],\"48\":[1],\"49\":[1],\"50\":[2,10],\"51\":[3,17],\"52\":[1,3],\"53\":[2,2],\"54\":[1,5],\"55\":[1,5],\"56\":[1,14],\"57\":[1,54],\"58\":[1],\"59\":[1,1],\"60\":[1,24],\"61\":[3,19],\"62\":[1,15],\"63\":[2],\"64\":[1,3],\"65\":[1,11],\"66\":[1,26],\"67\":[1,11],\"68\":[1,16],\"69\":[2],\"70\":[1,6],\"71\":[1,21],\"72\":[1,5],\"73\":[1,23],\"74\":[1,38],\"75\":[1],\"76\":[1,25],\"77\":[3,8],\"78\":[2,4],\"79\":[1,19],\"80\":[1,10],\"81\":[1,27],\"82\":[1,21],\"83\":[1],\"84\":[1,26],\"85\":[1],\"86\":[1],\"87\":[1,7],\"88\":[1,35],\"89\":[2,13],\"90\":[1,29],\"91\":[2],\"92\":[1,5],\"93\":[1,18],\"94\":[1,83],\"95\":[1,23],\"96\":[3,7],\"97\":[1,42],\"98\":[1,24],\"99\":[1,19],\"100\":[3],\"101\":[1,12],\"102\":[1,39],\"103\":[1,14],\"104\":[1,12],\"105\":[1,5],\"106\":[2,23],\"107\":[2,13],\"108\":[1],\"109\":[2,78],\"110\":[1,7],\"111\":[1,42],\"112\":[3,2],\"113\":[1],\"114\":[4,17],\"115\":[1],\"116\":[1,7],\"117\":[1,13],\"118\":[1],\"119\":[2,15],\"120\":[2,12],\"121\":[1,10],\"122\":[1,19],\"123\":[2,8],\"124\":[1,31],\"125\":[1,24],\"126\":[1,10],\"127\":[1],\"128\":[1,35],\"129\":[2,31],\"130\":[1,3],\"131\":[1,37],\"132\":[1,29],\"133\":[1,10],\"134\":[2,26],\"135\":[2,30],\"136\":[1,8],\"137\":[2],\"138\":[1,5],\"139\":[2,23],\"140\":[1,16],\"141\":[2,15],\"142\":[1],\"143\":[1,50],\"144\":[1,20],\"145\":[1,8],\"146\":[1],\"147\":[1],\"148\":[1],\"149\":[1,3],\"150\":[1,6],\"151\":[1],\"152\":[2,4],\"153\":[2,11],\"154\":[1],\"155\":[2,2],\"156\":[1,4],\"157\":[2,4],\"158\":[1,18],\"159\":[1,36],\"160\":[1,11],\"161\":[1],\"162\":[1,10],\"163\":[1,7],\"164\":[1,3],\"165\":[1,53],\"166\":[2,11],\"167\":[1,33],\"168\":[8,35],\"169\":[3,69],\"170\":[7,14],\"171\":[1,27],\"172\":[1,24],\"173\":[1,6],\"174\":[1],\"175\":[1],\"176\":[1,42],\"177\":[1,7],\"178\":[1],\"179\":[2,37],\"180\":[3,56],\"181\":[3,7],\"182\":[2,27],\"183\":[1,32],\"184\":[2,41],\"185\":[1,52],\"186\":[4,29],\"187\":[1],\"188\":[1],\"189\":[4,12],\"190\":[3,15],\"191\":[3,6],\"192\":[3,9],\"193\":[3,1],\"194\":[3,1],\"195\":[1],\"196\":[2,1],\"197\":[2,3],\"198\":[3],\"199\":[1,12],\"200\":[1,44],\"201\":[4,88],\"202\":[1],\"203\":[2,24],\"204\":[2,41],\"205\":[2],\"206\":[1,12],\"207\":[1,24],\"208\":[2],\"209\":[1,45],\"210\":[4,16],\"211\":[3,3],\"212\":[1],\"213\":[1,9],\"214\":[1,59],\"215\":[1,3],\"216\":[1,8],\"217\":[1,38],\"218\":[1,9],\"219\":[1],\"220\":[1,34],\"221\":[1,100],\"222\":[1,8],\"223\":[1,6],\"224\":[1,9],\"225\":[1,29],\"226\":[1,8],\"227\":[4,46],\"228\":[1],\"229\":[4,135],\"230\":[2,23],\"231\":[5,10],\"232\":[2,18],\"233\":[2],\"234\":[1,15],\"235\":[1,29],\"236\":[2],\"237\":[2],\"238\":[2,8],\"239\":[2,8],\"240\":[5,28],\"241\":[1,59],\"242\":[1],\"243\":[1,15],\"244\":[1,20],\"245\":[1,4],\"246\":[1,20],\"247\":[1],\"248\":[1,4],\"249\":[2,5],\"250\":[3,4],\"251\":[2,16],\"252\":[1,17],\"253\":[1,17],\"254\":[2,31],\"255\":[1,6],\"256\":[1],\"257\":[1,13],\"258\":[2,16],\"259\":[2],\"260\":[3,5],\"261\":[2,30],\"262\":[2,4],\"263\":[1],\"264\":[1,10],\"265\":[1,15],\"266\":[2,13],\"267\":[1,11],\"268\":[1,8],\"269\":[1,4],\"270\":[1,19],\"271\":[2,33],\"272\":[1,7],\"273\":[1,16],\"274\":[1,7],\"275\":[1,10],\"276\":[1,7],\"277\":[2,2],\"278\":[1,84],\"279\":[2],\"280\":[1,55],\"281\":[1,19],\"282\":[3,16],\"283\":[1,18],\"284\":[2],\"285\":[3,8],\"286\":[9,11],\"287\":[8,16],\"288\":[4,9],\"289\":[9,19],\"290\":[2,15],\"291\":[2,34],\"292\":[1,15],\"293\":[2,41],\"294\":[2,5],\"295\":[1,29],\"296\":[1,13],\"297\":[1,47],\"298\":[2,30],\"299\":[1,24],\"300\":[2,21],\"301\":[1,15],\"302\":[1,18],\"303\":[2,17],\"304\":[1],\"305\":[1,67],\"306\":[1,8],\"307\":[1,27],\"308\":[1,11],\"309\":[1,60],\"310\":[2,15],\"311\":[3,28],\"312\":[1,51],\"313\":[3,20],\"314\":[1],\"315\":[1,53],\"316\":[1],\"317\":[1,16],\"318\":[1,3],\"319\":[1,32],\"320\":[1],\"321\":[3,15],\"322\":[3,16],\"323\":[3,13],\"324\":[1,4],\"325\":[2,31],\"326\":[1,25],\"327\":[2,6],\"328\":[1,18],\"329\":[2],\"330\":[3,28],\"331\":[3,8],\"332\":[3,11],\"333\":[1],\"334\":[1,22],\"335\":[3],\"336\":[1,33],\"337\":[3,19],\"338\":[3,35],\"339\":[4,47],\"340\":[4,42],\"341\":[2,27],\"342\":[2,31],\"343\":[2,44],\"344\":[2,25],\"345\":[2,50],\"346\":[1,21],\"347\":[2],\"348\":[1,42],\"349\":[2,8],\"350\":[1],\"351\":[2,30],\"352\":[4,26],\"353\":[1,15],\"354\":[1,5],\"355\":[1,69],\"356\":[1,36],\"357\":[2],\"358\":[1,32],\"359\":[1],\"360\":[1,22],\"361\":[1,56],\"362\":[1,6],\"363\":[1,43],\"364\":[1,35],\"365\":[1,93],\"366\":[1,2],\"367\":[2,18],\"368\":[1,25],\"369\":[1,29],\"370\":[1,19],\"371\":[1],\"372\":[1,27],\"373\":[5,35],\"374\":[1,33],\"375\":[2,36],\"376\":[1,9],\"377\":[1,12],\"378\":[1],\"379\":[1,25],\"380\":[2,3],\"381\":[2,11],\"382\":[1,9],\"383\":[1,12],\"384\":[2,19],\"385\":[2,13],\"386\":[4,22],\"387\":[1,5],\"388\":[1],\"389\":[1,16],\"390\":[1,19],\"391\":[1],\"392\":[3,15],\"393\":[2,13],\"394\":[2,28],\"395\":[1],\"396\":[1,26],\"397\":[3,22],\"398\":[5,39],\"399\":[1,4],\"400\":[3,16],\"401\":[1,29],\"402\":[1],\"403\":[1],\"404\":[1,11],\"405\":[1,8],\"406\":[1,72],\"407\":[1,8],\"408\":[1,4],\"409\":[1,4],\"410\":[2,4],\"411\":[4,20],\"412\":[1,26],\"413\":[1],\"414\":[1],\"415\":[2,3],\"416\":[5,6],\"417\":[4,3],\"418\":[3,4],\"419\":[2,48],\"420\":[3,5],\"421\":[1,26],\"422\":[1,7],\"423\":[4,18],\"424\":[1,33],\"425\":[1],\"426\":[1,16],\"427\":[1,32],\"428\":[1,5],\"429\":[2,21],\"430\":[1,31],\"431\":[2,18],\"432\":[2,11],\"433\":[1,10],\"434\":[3,29],\"435\":[1,23],\"436\":[1,3],\"437\":[3,40],\"438\":[2,33],\"439\":[1,18],\"440\":[1],\"441\":[3,8],\"442\":[2,31],\"443\":[4,90],\"444\":[3,50],\"445\":[1,21],\"446\":[2],\"447\":[2,23],\"448\":[1,17],\"449\":[3,36],\"450\":[2,40],\"451\":[1,13],\"452\":[2,3],\"453\":[1,1],\"454\":[1],\"455\":[1,3],\"456\":[1,15],\"457\":[3,56],\"458\":[2,43],\"459\":[1,10],\"460\":[3,54],\"461\":[2,16],\"462\":[2],\"463\":[1,63],\"464\":[1,26],\"465\":[1,105],\"466\":[2],\"467\":[2],\"468\":[2,30],\"469\":[1,8],\"470\":[6],\"471\":[2,21],\"472\":[2,60],\"473\":[2,12],\"474\":[1],\"475\":[2,58],\"476\":[1,40],\"477\":[1,12],\"478\":[1,40],\"479\":[1,17],\"480\":[1,80],\"481\":[1,2],\"482\":[1,31],\"483\":[1,41],\"484\":[1],\"485\":[1,9],\"486\":[1,19],\"487\":[2,54],\"488\":[1,30],\"489\":[1,17],\"490\":[2,62],\"491\":[1,10],\"492\":[2,19],\"493\":[2,83],\"494\":[1],\"495\":[1,19],\"496\":[1,53],\"497\":[1,2],\"498\":[1,22],\"499\":[1,10],\"500\":[2],\"501\":[1,26],\"502\":[2,7],\"503\":[1],\"504\":[1],\"505\":[1,6],\"506\":[3,18],\"507\":[2,7],\"508\":[1,4],\"509\":[1],\"510\":[1],\"511\":[2,9],\"512\":[1],\"513\":[1,5],\"514\":[2,9],\"515\":[1,5],\"516\":[1,7],\"517\":[1,2],\"518\":[1],\"519\":[1],\"520\":[1],\"521\":[1,6],\"522\":[3,6],\"523\":[3,13],\"524\":[3,15],\"525\":[1],\"526\":[1],\"527\":[1,1],\"528\":[1],\"529\":[6,37],\"530\":[4,28],\"531\":[1],\"532\":[2,19],\"533\":[1,5],\"534\":[1,28],\"535\":[1,15],\"536\":[2,25],\"537\":[2,36],\"538\":[1],\"539\":[1,7],\"540\":[2,16],\"541\":[1,75],\"542\":[2,6],\"543\":[2,17],\"544\":[3,13],\"545\":[1,15],\"546\":[2,67],\"547\":[1,25],\"548\":[1,82],\"549\":[1],\"550\":[1],\"551\":[2,7]},\"averageFieldLength\":[1.641304347826086,21.683302056488426],\"storedFields\":{\"0\":{\"h\":\"Go\",\"t\":[\"类型\"]},\"1\":{\"h\":\"类型\",\"t\":[\"byte： uint8\",\"rune： int32\",\"uint/int： 32 位或 64 位，与 os 有关\",\"uintptr：无符号整型指针，一个指针的长度\",\"int8, int16, int32, int64\",\"uint8, uint16, uint32, uint64\",\"float32, float64,\",\"complex64, complex\",\"unsafe.Sizeof() 查看长度\"]},\"2\":{\"h\":\"BFS & DFS\"},\"3\":{\"h\":\"BFS\",\"t\":[\"很大集合中找特定节点，依次把子节点加入队列中来实现。 对于图需要判重的操作。\"]},\"4\":{\"h\":\"代码模版\",\"t\":[\"利用queue\",\"function BFS (graph, start, end){ const queue = [] queue.push(start) const visited = [start] while (queue.length){ const node = queue.pop() visited.push(node) process(node) const childrenWOVisited = process_children(node.chilren) queue.push(childrenWOVisited) } } \"]},\"5\":{\"h\":\"DFS\"},\"6\":{\"h\":\"代码\",\"t\":[\"利用递归\",\"const visited = [] function DFS (node, visited){ visited.push(node) for(let nextNode of node.chilren){ if(!nextNode in visited){ DFS(nextNode, visited) } } } \",\"循环写法， 利用stack\",\"function DFS (graph, start, end){ const stack = [start] const visited = [] while (stack.length){ const node = stack.pop() visited.push(node) process(node) const childrenWOVisited = process_children(node.chilren) stack.push(childrenWOVisited) } } \"]},\"7\":{\"h\":\"题目\",\"t\":[\"二叉树的层序遍历\",\"解1： BFS，需要记录每一层结束的节点。O(N)\",\"记录level，level信息同节点一样加入queue中，或者每个节点带上level 信息\",\"每一层单独扫描， batch process, 记录这一层一共需要多少次遍历。BFS的步长为每一层元素的个数。不需要加任何标识，\",\"解2： DFS, 需要记录level 信息， 按level放入对应位置数组中。 O(N)\",\"最小深度\",\"最大深度\",\"解1： DFS, O(N)\",\"解2： BFS, O(N)\",\"解3：分治，\",\"算最大，算左边和右边， 取最大值加1，为该层的最大，并返回。\",\"算最小， 算左边和右边。 如果左边null， 右边直接加1。 如果右边null， 左边直接加1. 如果左右都不为null， 分别算，取最小值并且加1。\",\"n括号\",\"解1： 递归/深度优先/剪枝 O(2N)\",\"剪枝判断\",\"局部不合法，不再递归\",\"左右括号用尽，不再递归\"]},\"8\":{\"h\":\"数据结构 & 算法\"},\"9\":{\"h\":\"数据结构\",\"t\":[\"线性数据结构\",\"Array\",\"Stack / Queue\",\"PriorityOqueue (Heap)\",\"LinkedList(single / double)\",\"树形结构\",\"Tree / Binary Tree\",\"Binary Search Tree\",\"HashTable\",\"Disjoint Set 并查集\",\"Trie 单词查找树\",\"BloomFilter 布隆过滤器\",\"LRU Cache (least recently used)(最近最少使用，使用链表)\",\"LFU Cache (least frequency used)(最不经常使用，维护计数器)\"]},\"10\":{\"h\":\"算法\",\"t\":[\"经典题目\",\"In-order/Pre-order/Post-order traversal 针对树的遍历\",\"Greedy 贪心\",\"Recursion/Backtrace 回溯/递归\",\"Breadth-first search 广度优先\",\"Depth-first search 深度优先\",\"Divide and Conquer 分治\",\"Dynamic Programming 动态规划\",\"Binary Search 二分查找\",\"Graph 图\"]},\"11\":{\"h\":\"复杂度\",\"t\":[\"O(1)<O(logN)<O(N)<O(NlogN)<O(N2)<O(2N)\",\"O(logN) 步长为两倍的，迭代次数为logN\",\"while (i < 10) { i = i * 2; } \"]},\"12\":{\"h\":\"Master Thoren\",\"t\":[\"常见递归算法事件复杂度\",\"Algorithem\",\"Recurrence relationship\",\"Run time\",\"Comment\",\"Binary search 二分查找\",\"T(n)=T(n/2)+O(1)\",\"O(logn)\",\"Apply Master theorem case c=logb​a, where a=1,b=2,c=0,k=0\",\"Binary tree traversal 二叉树每个节点仅遍历一次\",\"T(n)=2T(n/2)+O(1)\",\"O(n)\",\"Apply Master theorem case c<logb​a where a=2,b=2,c=0\",\"Optimal sorted matrix search 二维矩阵排序\",\"T(n)=2T(n/2)+O(1ogn)\",\"O(n)\",\"Apply the Akra-Bazzi theorem for p=1 and g(u)=log(u) to get O(2n−logn)\",\"Merge sort 快排 归并排序\",\"T(n)=2T(n/2)+O(n)\",\"O(nlogn)\",\"Apply Master theorem case c=logb​a, where a=2,b=2,c=1,k=0\"]},\"13\":{\"h\":\"二分查找\"},\"14\":{\"h\":\"条件\",\"t\":[\"必须是有序的\",\"可以通过索引找到元素， 链表不可以\",\"存在上下边界\"]},\"15\":{\"h\":\"模版\",\"t\":[\"function BS(sortedArray, target) { let left = 0 let right = sortedArray.length - 1 while (left <= right) { const mid = (right - left) / 2 if (sortedArray[mid] === target) { return mid } else if (sortedArray[mid] < target) { left = mid + 1 } else { right = mid - 1 } } } \",\"x 的平方根\",\"解1：因为平方根是单调递增的， 是有序的， 可以用二分法\",\"解2： 牛顿迭代法\",\"xn+1​=21​xn​+2xn​1​y0​\",\"有效的完全平方数\"]},\"16\":{\"h\":\"位运算\"},\"17\":{\"h\":\"异或\",\"t\":[\"任意一个变量X与其自身进行异或运算，结果为0，即X^X=0\",\"任意一个变量X与0进行异或运算，结果不变，即X^0=X\",\"异或运算具有可结合性，即a^b^c=（a^b）^c=a^（b^c）\",\"异或运算具有可交换性，即a^b=b^a\",\"交换两个变量\",\"function exchange(a, b){ a = a^b b = b^a a = a^b } \"]},\"18\":{\"h\":\"与\",\"t\":[\"判断奇偶, x & 1 == 1 , 1 为奇， 0 为偶\",\"将最后一个1的位变0, x & (x - 1)10100 => 10000\",\"取最后一个1的位， x & -x10100 => 100\"]},\"19\":{\"h\":\"非\",\"t\":[\"小数舍弃小数部分，转为整数\",\"～～4.9 \\\\\\\\ 4 \"]},\"20\":{\"h\":\"题目\",\"t\":[\"位1的个数\",\"解1： 模2判断, 或者x & 1 判断奇偶， 再右移O(N)\",\"解2： x & (x - 1) 消掉x中的最后的1，循环\",\"2 的幂\",\"解1：模2循环\",\"解2：算对数\",\"解3：二进制数只有一个1， x & (x - 1) && x !== 0\",\"比特位计数\",\"解1: 遍历n， count[i] = count[i & (i - 1)] + 1\",\"n 皇后\",\"解1: 位运算来判重。DFS不变\",\"const N = 4 // 4 皇后 let count // 一共有几种放置方法 function DFS (row, col, pie, na){ // 结束条件 if(row >= N){ count ++ return } // 得到N位的空的位置， 空位为1 // ((1 << N) - 1 得到n个1，消除~(col | pie | na)冗余的1 let bits = ~(col | pie | na) & ((1 << N) - 1) while (bits > 0){ // 获取最后的一个1位 const p = bits & -bits // col | p 把这一位置1，占位 // (pie | p) << 1 撇的位置要左移 DFS(row + 1, col | p, (pie | p) << 1, (na | p) >> 1) // 更新bits， 每次消除一个1 bits = bits & (bits - 1) } } DFS(0,0,0,0) \"]},\"21\":{\"h\":\"剪枝\",\"t\":[\"遍历树的时候可以剪枝，每个节点选择最优的优先遍历， 不好的节点舍弃不遍历。\"]},\"22\":{\"h\":\"题目\",\"t\":[\"N皇后\",\"按照行来遍历DFS，记录已经放的位置，需要记录列，撇m=i+j，捺n=i−j, 每一行中遍历列的时候剪枝，递归之后需要恢复现场， 当前列撇捺需要移除O(2N)\",\"数独\",\"解数独\"]},\"23\":{\"h\":\"动态规划\",\"t\":[\"递归+记忆化 一＞递推， 斐波那契+memo， 递推就返过来，从 n=2 开始增加\",\"状态的定义：opt［n］， dpin］， fib［n］， 需要求的结果为每一步的状态\",\"状态转移方程：optinl = best_of（opt［n-1］， opt［n-2］，.）\",\"最优子结构， 每一步递推的递推公式\"]},\"24\":{\"h\":\"斐波那契\",\"t\":[\"function fib(n) { getFib(1, 1, n); } function getFib(a, b, n) { if (n === 1) return b; return getFib(b, a + b, n - 1); } \",\"回溯（递归）：重复计算\",\"贪心：永远局部最优\",\"DP：记录局部最优子结构/多种记录值\"]},\"25\":{\"h\":\"字典树\",\"t\":[\"用于统计排序大量字符串，它的优点是：最大限度地減少无谓的字符串比较，查询效率比哈希表高。经常被搜索引擎系统用于文本词频统计\"]},\"26\":{\"h\":\"数据结构\",\"t\":[\"每个节点是一个数组， 元素指向下一个节点, isEndOfWord 第几层存第几位字母\"]},\"27\":{\"h\":\"核心思想\",\"t\":[\"Trie的核心思想是空间换时间。利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的\"]},\"28\":{\"h\":\"基本性质\",\"t\":[\"根节点不包含字符，除根节点外每一个节点都只包含一个字符。\",\"从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串。\",\"每个节点的所有子节点包含的字符都不相同。\"]},\"29\":{\"h\":\"题目\",\"t\":[\"字典搜索\",\"需要搜索的放入Trie， DFS 遍历表格\"]},\"30\":{\"h\":\"映射 & 集合\",\"t\":[\"Map 和 set 多用于查询和计数\"]},\"31\":{\"h\":\"哈希表，哈希函数，碰撞\",\"t\":[\"哈希Hash，hashing就是无限的字符转换为有限的过程。哈希之后不可逆\",\"哈希表就是键值对，数组中的索引对应于数据的内存地址，而哈希表中的键进行哈希函数运算才能得到内存地址\"]},\"32\":{\"h\":\"哈希函数\",\"t\":[\"一个对象通过函数生成一个数组的下标\",\"哈希需要不可逆，所以需要模运算，每个字母ascii 16进制相加求余\"]},\"33\":{\"h\":\"碰撞\",\"t\":[\"不同对象可能生成同一个下标\",\"两种方法:\",\"开放寻址法\",\"线性探测法，占用了就放下一个位置中，会出现集群现象\",\"二次探测法，占用了放nn的位置中\",\"封闭寻址法\",\"链表，集群现象，数据可能聚集在某几个键里\",\"哈希算法，数据运算为固定长度的值\",\"md5 （128bits）\",\"sha-256，sha-512\"]},\"34\":{\"h\":\"list vs map vs set\",\"t\":[\"list 数组/链表实现，元素可重复，查找O(N), 插入O(1)。\",\"map 实现HashMap， TreeMap\",\"set 不可重复， 哈希表或二叉搜索树实现, HashSet, TreeSet，查找O(1)\"]},\"35\":{\"h\":\"HashMap, HashSet, TreeMap, TreeSet\",\"t\":[\"Hash 实现查找O(1) hash中乱序， 但是时间块\",\"Tree 二叉树实现的O(logN) tree的元素排序好了， 相对有序的排列， 但是时间复杂\"]},\"36\":{\"h\":\"题目\",\"t\":[\"字母异位\",\"解1：排序，快排 O(NlogN)\",\"解2：计数，利用map O(N)\",\"two sum 利用map 或set\",\"three sum\",\"解1: 前两个树嵌套循环， 最后一个数用set查找, set 中放自己，查找就找我需要的， set 中放需要的， 查找就找自己（被需要）， O(n2)， 空间O(N)\",\"if(set.has(b)){ // b 是自己， 查找自己有没有被需要 result.add([a, -a-b, b].toString()) } else { set.add(-a-b) // 放需要的 } \",\"const c = -a - b // b 是自己， c是需要的 if(set.has(c)){ // 查找需要的 result.add([a, c, b].toString()) } else { set.add(b) // 放自己 } \",\"解2: sort & find, 先排序O(NlogN)，遍历一个数， 后两个数双指针， 大于目标右指针左移， 小于目标左指针右移 O(n2)， 空间不需要set， 空间复杂度小\",\"four sum\"]},\"37\":{\"h\":\"数&图\"},\"38\":{\"h\":\"二叉树/二叉搜索树\",\"t\":[\"元素排列有序，查找块，每次查找一半O(logN)\"]},\"39\":{\"h\":\"堆/完全二叉树\"},\"40\":{\"h\":\"完全二叉树\",\"t\":[\"只允许最后一行不满\",\"且最后一行必须从左到右排序\",\"最后一行元素之间不能有间隔\"]},\"41\":{\"h\":\"堆的实现\",\"t\":[\"一个堆可以用一个一维数组来描述\",\"若节点为 i, 左子节点为2i+1, 右子节点为2i+2，父节点为(i−1)>>1\"]},\"42\":{\"h\":\"堆的操作 O ( l o g N ) O(logN) O ( l o g N )\",\"t\":[\"上滤 bubbleUp，用于插入新元素到堆中\",\"下滤 bubbleDown\",\"上滤过程：根电节点向下调整。节点跟父节点比较，\",\"大顶堆：大于则交换。直到无法上移为止为止。\",\"小顶堆：小于则交换。直到无法上移为止为止。\",\"下滤过程：根电节点向下调整。\",\"大顶堆：节点跟自己最大的子节点比较，小于则交换。直到大于其子节点，或者移动到底部为止。\",\"小顶堆：节点跟自己最小的子节点比较，大于则交换。直到小于其子节点，或者移动到底部为止。\"]},\"43\":{\"h\":\"建堆\",\"t\":[\"自顶向下建堆，插入堆，上滤， 形成大顶堆 O(NlogN)\",\"[3,4,5,6,1,7,8]\",\"先插入 3\",\"再插入 4，上滤，4 为堆顶\",\"再插入 5，上滤，5 为堆顶\",\"...\",\"[8,5,7,3,1,4,6]\",\"自下而上建堆，对每个父节点下滤，直到跟节点操作完毕，形成大顶堆 O(N)\",\"[3,4,5,6,1,7,8]\",\"从倒数第二排开始，下滤 5, [3,4,8,6,1,7,5]\",\"第二排下滤 4， [3,6,8,1,4,7,5]\",\"下滤第一排 3，3 下到最底层，[8,6,7,4,1,3,5]\"]},\"44\":{\"h\":\"堆的应用\",\"t\":[\"优先队列, 正常插入队列，按优先级弹出\"]},\"45\":{\"h\":\"二叉搜索树\",\"t\":[\"空树，或者若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值\"]},\"46\":{\"h\":\"二叉树遍历\",\"t\":[\"前序 / 中序 / 后序 / 深度优先 / 广度优先\",\"二叉搜索树用中序遍历会遍历出有序数组\"]},\"47\":{\"h\":\"题目\",\"t\":[\"验证二叉搜索树\",\"解 1： 中序遍历 in-order, 左 + 中 + 右，得到 Array，需要时是升序的，同排序后结果比较。 每个节点只遍历一次，O(N)， 比较占空间，每次递归数组需要存储\",\"解 2： 中序遍历， 但是不保存所有数组， 只记录前继节点， 当前子节点树与前继父节点比较\",\"prev 节点的遍历顺序 中序\",\"var isValidBST = function (root) { let prev = null; function inOrder(root) { if (!root) return true; if (!inOrder(root.left)) return false; if (prev && root.val <= prev.val) return false; // 当前节点需要比上次一节点大 prev = root; return inOrder(root.right); } return inOrder(root); }; \",\"解 3： 递归， 每次递归得到左子树最大值maxleft​， 右子树最小值minright​, 要求maxleft​<root<minright​. 每个节点只遍历一次，O(N)\",\"function isValid(root, floor, ceil) { if (root === null) return true; if (root.val <= floor || root.val >= ceil) return false; return ( isValid(root.left, floor, root.val) && isValid(root.right, root.val, ceil) ); } isValid(root, -Infinity, Infinity); \",\"最近公共祖先\",\"任意二叉树\",\"当前节点没有返回 null， 当前节点等于 p 或 q 返回当前节点。 左节点为空返回右节点， 右节点为空返回左节点，都不为空返回当前节点 O(N)\",\"二叉搜索树\",\"可以通过值来判断左右子树， 如果 root 大于 pq， 都在左子树， root 小于 pq， 都在右子树，否则就直接是 root\"]},\"48\":{\"h\":\"图\"},\"49\":{\"h\":\"线性数据结构\"},\"50\":{\"h\":\"Array 数组\",\"t\":[\"内存中连续的一段区域\",\"查找O(1)\",\"插入 后面的元素需要向后挪动 O(n)\",\"删除 后面的元素也需要向前移动 O(n)\"]},\"51\":{\"h\":\"linked list 链表\",\"t\":[\"单链表 双链表: 有前驱，后继，可以双向走\",\"优点\",\"改善插入和删除操作 O(1)\",\"不知道一共有多少个元素\",\"缺点\",\"查找需要 O(n)\",\"应用\",\"区块链 链表/二叉树\"]},\"52\":{\"h\":\"例子\",\"t\":[\"反转链表\",\"两辆交换节点\",\"判断有环\"]},\"53\":{\"h\":\"栈 / 队列\",\"t\":[\"可以用数组或链表实现，或双链表\"]},\"54\":{\"h\":\"例子\",\"t\":[\"判断括号问题 用栈或者字符串replace\",\"用栈实现队列 一个输入栈， 一个输出栈\"]},\"55\":{\"h\":\"优先队列\",\"t\":[\"正常入，按照优先级出。 优先级大小，次数，或者某个属性\"]},\"56\":{\"h\":\"实现\",\"t\":[\"堆（binary 二叉堆， binominal多项式堆， fibonacci斐波那契堆） 详见完全二叉树\",\"小顶二叉堆，每个父节点元素小于左右子节点元素，越小越排前面，最小元素永远在堆顶\",\"大顶堆， 每个父节点元素大于左右子节点元素，最大元素永远在堆顶，\",\"二叉搜索树\"]},\"57\":{\"h\":\"例子\",\"t\":[\"队列弹出最小元素 （小顶堆）\",\"弹出堆顶，再更新剩下的元素成堆\",\"最后一个元素放到堆顶，再下滤 O(logN)\",\"队列插入\",\"插入到尾部，上滤 O(logN)\",\"堆排序\",\"大根堆，根元素与最后元素交换，下滤，重复过程，得到从小到大排序 O(NlogN)\",\"实时判断第K大元素\",\"思路1: 记录前k大元素， 并且排序，每次进来元素都需要排序 O(N∗KlogK)\",\"思路2: 不用排序， 利用优先队列， 前K大元素放到小顶堆中， 堆顶为第k大的元素(堆中最小值)， 每次进来元素调整堆， 把原来堆中小的剔除， 返回堆顶元素 O(N∗(1+log2​K)) => O(NlogK)\",\"滑动窗口最大值\",\"思路1: 堆。窗口中k个元素放入大顶堆中， 每次滑动移除或添加新的元素到堆中，堆顶为K中的最大值 O(NlogK)\",\"思路2: 双端队列， 前后都可以进出。每次入元素就维护队列， 保持最左边的为队列中最大值， 从窗口的右侧开始遍历，比入数小的都pop出去。维护的复杂度为1。 适用于K大小恒定，且只关心最大值， 不需要维护第K大的值。 O(N)\"]},\"58\":{\"h\":\"堆的时间复杂度\"},\"59\":{\"h\":\"设计模式\",\"t\":[\"可重用的面相对向的准则\"]},\"60\":{\"h\":\"单一职责原则\",\"t\":[\"一个对象或方法只做一件事情， 每个模块专注于自己的职责\",\"微服务\",\"单例模式 保证一个类只有一个模式\",\"例子： 只 new 一次， 已经有实例就返回实例\",\"代理模式\",\"为其他对象提供一种代理以控制对这个对象的访问\",\"例子： 返回一个方法可以修改 img 标签的 src\",\"迭代器模式 提供方法能顺序访问一个聚合对象中的各个元素， 又不需要暴露该对象内部表示\",\"例子： 不需要考虑 forEach 内部如何实现 给对象添加迭代器\",\"装饰者模式\"]},\"61\":{\"h\":\"最少知识原则（迪米特法则）\",\"t\":[\"高内聚 低耦合\",\"一个对象应当尽可能少的与其他对象发生相互作用\",\"中介者模式 定义一个对象（中介者）， 该对象封装了系统中对象间的交互方式\",\"例子： 不同的事件监听用相同的回调函数\",\"外观模式 不同的实现隐藏起来\",\"jquery 的元素事件, elem.on('event', callback), 封装了方法，内部兼容各种浏览器的实现\"]},\"62\":{\"h\":\"开放封闭原则\",\"t\":[\"软件实体（类，模块，函数）都应该可以扩展， 而不应该修改\",\"对扩展开放，对修改关闭\",\"webpack loader\",\"发布订阅模式\",\"模版方法模式\",\"策略模式\",\"代理模式\",\"职责链模式\"]},\"63\":{\"h\":\"发布订阅 观察者\"},\"64\":{\"h\":\"观察者模式\",\"t\":[\"每个观察者实现相同接口，供被观察者调用，两者松耦合\"]},\"65\":{\"h\":\"发布订阅\",\"t\":[\"在发布订阅模式里，发布者，并不会直接通知订阅者，换句话说，发布者和订阅者，彼此互不相识。 需要 broker\",\"两者完全解耦，多用于跨应用，比如消息中间件\"]},\"66\":{\"h\":\"代码重构原则\",\"t\":[\"重构必然会发生， 早晚的问题而已， 要尽量拖慢重构发生时间\",\"提炼函数 => 更易于单一原则\",\"合并重复代码片段\",\"条件分支语句提炼成函数 => 判断表达提取为函数\",\"合理使用循环 => try catch 嵌套改为用循环实现一次 try\",\"用提前 return 代替嵌套条件分支 => 用多个 if 代替 if else 多层嵌套\",\"传递对象参数代理过长的参数列表 => 参数封装成 对象\",\"尽量减少参数数量\",\"合理使用链式调用\"]},\"67\":{\"h\":\"贪心算法\",\"t\":[\"作出当前看来最好的选择\",\"简单地说，问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解。这种子问题最优解成为最优子结构。\",\"贪心算法与动态规划的不同在于它对每个子问题的解决方案都做出选择，不能回退。动态规划则会保存以前的运算结果，并根据以前的结果对当前进行选择，有回退功能。\"]},\"68\":{\"h\":\"题目\",\"t\":[\"股票持股\",\"最多持有1股， 每天可以买卖无数次，贪心最好（仅针对这个条件）\",\"解1： DFS， 相当于所有的情况遍历一遍。O(2N)\",\"解2：Greedy, O(N)\",\"解2：DP, 更通用 O(N)\"]},\"69\":{\"h\":\"递归 & 分治\"},\"70\":{\"h\":\"递归\",\"t\":[\"阶乘（函数内调用一次自己）\",\"斐波那契数列(会有大量重复计算，函数内调用两次自己)\",\"递归可能会出现重复计算，斐波那契数列\"]},\"71\":{\"h\":\"递归模版\",\"t\":[\"function recursion (level, ...args){ // 递归终止条件 if(level > MAX_LEVEL){ return result } // 单次递归处理逻辑 process_code() // 递归调用 recursion(level ++, ...new_args) // 调用后的处理 reverse_state(level) } \"]},\"72\":{\"h\":\"分治\",\"t\":[\"递归可以用于实现分治， 大化小 斐波那契问题， 计算n拆分成n−1和n−2.\"]},\"73\":{\"h\":\"分治模版\",\"t\":[\"function divisionConquer (problem, ...args){ // 递归终止条件 if(!problem){ return result } // 拆分子问题 let subProblems = splitProblem(problem) // 对子问题递归 let subResult0 = divisionConquer(subProblems[0], ...args) let subResult1 = divisionConquer(subProblems[1], ...args) let subResult2 = divisionConquer(subProblems[2], ...args) // 对结果进行处理 return processResult(subResult0, subResult1, subResult2) } \"]},\"74\":{\"h\":\"题目\",\"t\":[\"n次幂\",\"中间一半分开，y=x2n​, n分奇偶, 偶结果y∗y, 奇结果y∗y∗x, 分治一直到x1, 复杂度O(logN)\",\"var myPow = function (x, n) { if (n == 0) return 1 if (n < 0) { return 1 / myPow(x, -n) } else if (n % 2) { return x * myPow(x, n - 1) } else { return myPow(x * x, n / 2) } }; \",\"求众数\",\"解1：用Map O(N)\",\"解2：排序， 计数 O(NlogN+N)\",\"解3: 分治， 左右两边各找个数最大值，再比较返回较大的值.O(NlogN)\"]},\"75\":{\"h\":\"BOM\"},\"76\":{\"h\":\"location\",\"t\":[\"属性\",\"location.href 完整路径\",\"location.origin https://www.baidu.com\",\"location.host\",\"location.port\",\"location.protocol\",\"location.pathname\",\"location.search\",\"location.hash\",\"方法\",\"location.assign() 会跳转过去，可以用返回按钮跳到之前页面\",\"location.replace() 会替换当前浏览历史并且跳转, 不能再用返回按钮\",\"location.reload()\",\"location.toString()\"]},\"77\":{\"h\":\"history / hash 路由\",\"t\":[\"history 做 SPA 需要服务器将所有地址都代理到一个页面\",\"hash history.pushState() 会话历史栈增加了一个条目。\"]},\"78\":{\"h\":\"url 处理\",\"t\":[\"正则\",\"利用 api 处理\"]},\"79\":{\"h\":\"history\",\"t\":[\"会话历史栈\",\"属性\",\"history.state 获取栈顶到值，\",\"方法\",\"history.replaceState() 替换当前状态\",\"history.pushState() 增加条目，触发 popstate\",\"事件\",\"onpopstate，会被 history.back(), history.forward 和返回前进按钮触发。\"]},\"80\":{\"h\":\"navigator\",\"t\":[\"浏览器系统信息,硬件操作。做数据采集埋点\",\"navigator.userAgent 读取 UA，兼容性\",\"navigator.clipboard 剪切板\"]},\"81\":{\"h\":\"screen\",\"t\":[\"兼容性不同大小屏幕。\",\"获取区域大小\",\"window.innerHeight/innerWidth\",\"document.documentElement.clientWidth/clientHeight\",\"offsetWidth 外框 = clientWidth 内框 + 滚动条 + 边框\",\"scrolTop/scrollLeft 滚动绝对距离,offsetLeft/offsetTop 滚动相对距离\",\"el.getBoundingClientRect() IE 会多出 2px\"]},\"82\":{\"h\":\"事件\",\"t\":[\"捕获，冒泡，addEventListener 默认冒泡，true 为捕获\",\"event.stopPropergation() 阻止继续冒泡或捕获\",\"event.preventDefault()\",\"event.stopImmediatePropagation() 一个 el 上挂了多个监听器监听同一个事件，会阻止之后的回调触发\",\"attachEvent IE 非标准，可以直接在 el.[on${event}]\"]},\"83\":{\"h\":\"ajax\"},\"84\":{\"h\":\"XMLHttpRequest\",\"t\":[\"const xhr = new XMLHttpRequest(); xhr.open(method, url, async); xhr.send(data); // data 需要encodeURIComponent转码 xhr.readyStatus; // 4为完成请求 xhr.onreadystatuschange= () => { if(xhr.readyStatus === 4 && xhr.status === 200){ xhr.responseText } } xhr.timeout = 1000; xhr.ontimeout = () => { ... } \"]},\"85\":{\"h\":\"fetch\"},\"86\":{\"h\":\"CSS\"},\"87\":{\"h\":\"各种距离\",\"t\":[\"client-xxx 内边距\",\"offset-xxx 外边距\",\"scroll-xxx 可滚动的\"]},\"88\":{\"h\":\"盒模型\",\"t\":[\"元素都是盒模型，包括 content, padding, border, margin。可以设置宽高，内外边距，border，display，box-sizing，背景色。\",\"height/width\",\"padding\",\"border\",\"margin\",\"line-height\",\"block\",\"有效\",\"有效\",\"有效\",\"有效\",\"有效\",\"inline-block\",\"有效\",\"有效\",\"有效\",\"有效\",\"有效\",\"inline\",\"无效\",\"水平有效垂直不占用空间\",\"水平有效垂直不占用空间\",\"水平有效垂直不占用空间\",\"有效但不影响背景\",\"box-sizing:\",\"border-box, 包含 border 和 padding 的宽高，不受内部内容影响，可以优化页面重排，提高 CLS。\",\"content-box，只设置 content 的宽高\",\"display:\",\"flex 弹性盒\",\"float 浮动盒\",\"grid\",\"inline-block, block, inline,\"]},\"89\":{\"h\":\"inline 之间的空格\",\"t\":[\"换行符会合并成一个空格，导致 inline 元素之间有空隙。\",\"这个空隙实际上是一个空格字符，可以设置父元素字体大小font-size: 0，再恢复子元素（inline）字体大小font-size: initial。子元素再通过设置水平外边距调节间距。\"]},\"90\":{\"h\":\"外边距合并\",\"t\":[\"block 子元素之间外边距可以合并取较大值。inline-block 之间不会合并\",\"父子元素之间也可以合并。父元素margin-top: 0且没有 padding，子元素margin-top: 10px，合并后父元素距上一个元素距离为 10px。父元素设置 padding，或 border 就不会合并了。\",\"不合并的方法：\",\"子元素间设置为 inline-block\",\"父子元素，设置父元素的 padding 或 border\",\"设置父元素 float，grid，flex，position:absolute\",\"设置父元素 overflow 为非 visible\"]},\"91\":{\"h\":\"Canvas & WebGL\"},\"92\":{\"h\":\"svg\",\"t\":[\"类 xml，元素作为 dom，矢量图\"]},\"93\":{\"h\":\"canvas\",\"t\":[\"2D 图形渲染: 主要用于二维图形的渲染。\",\"简单易用: Canvas API 相对简单，上手快。\",\"适用场景: 适用于图表、简单游戏、图像编辑等场景。\",\"性能: 对于不需要复杂 3D 效果的应用，性能足够好。\"]},\"94\":{\"h\":\"WebGL\",\"t\":[\"WebGL 提供了更底层的图形 API，可以用来创建复杂的 3D 图形和效果。\",\"3D 图形渲染: 专注于 3D 图形的渲染。\",\"复杂和强大: 提供底层图形渲染能力，可以创建复杂的 3D 图形和动画。\",\"适用场景: 适用于 3D 游戏、可视化模拟、复杂动画等场景。\",\"性能: 利用 GPU 加速，能够处理更复杂和资源密集的图形任务。\",\"场景（Scene）：一个场景包含所有你想渲染的物体，可以理解为一个容器，用于设置和存放渲染的世界。\",\"相机（Camera）：相机决定了哪部分的场景会被渲染。Three.js 提供多种相机，其中最常用的是透视相机（PerspectiveCamera），它模仿人眼所看到的视角。\",\"渲染器（Renderer）：渲染器用于计算并绘制最终的图像到屏幕上。WebGLRenderer 是最常用的渲染器。3d 渲染到 2d 屏幕上。\",\"几何体（Geometry）：定义了物体的形状。Three.js 提供了多种预定义的几何体，如立方体、球体等。\",\"材质（Material）：定义了物体的外观（颜色、纹理等）。Three.js 支持多种材质，如 MeshBasicMaterial、MeshLambertMaterial 等。\",\"光源（Light）：光源影响场景中物体的渲染效果。Three.js 提供了多种光源，如环境光（AmbientLight）、点光源（PointLight）等。\",\"纹理（Texture）：纹理是映射到几何体表面的图像，用于增加物体的细节和真实感。\",\"动画（Animation）：Three.js 支持通过关键帧（Keyframe）和骨骼动画（Skeletal Animation）来实现复杂的动画效果。\",\"几何体和材质共同组成 mesh\"]},\"95\":{\"h\":\"渲染管线\",\"t\":[\"梳理渲染管线流程\",\"将 3d 空间转换为 2D 的空间数组，以显示在屏幕上，两步骤：\",\"将 3D 空间坐标转换和投影为 2D 坐标。\",\"将 2D 坐标转换为实际有颜色的像素输出到屏幕上面。\",\"渲染管线类似于流水线，顶点着色器 vertex shader，片元着色器 fragment shader 就是管线上的自定义步骤，在 GPU 并行执行。\"]},\"96\":{\"h\":\"bvh 优化 raycaster\",\"t\":[\"ThreeJs 中的 BVH 解析\",\"本质是二叉树深度遍历，每个节点是包围盒。\"]},\"97\":{\"h\":\"webGPU\",\"t\":[\"渲染管线用于渲染图形，通常渲染到 <canvas> 元素中，但它也可以在画面之外的地方渲染图形。它有两个主要阶段：\",\"顶点着色阶段：在该阶段中，顶点着色器（vertex shader）接受 GPU 输入的位置数据并使用像旋转、平移或透视等特定的效果将顶点在 3D 空间中定位。然后，这些顶点会被组装成基本的渲染图元，例如三角形等，然后通过 GPU 进行光栅化，计算出每个顶点应该覆盖在 canvas 上的哪些像素。\",\"片元着色阶段：在该阶段中，片元着色器（fragment shader）计算由顶点着色器生成的基本图元所覆盖的每个像素的颜色。这些计算通常使用输入，如图像（以纹理的方式）提供表面细节以及虚拟化光源的位置和颜色。\",\"计算管线用于通用计算。计算管线包含单独的计算阶段，在该阶段中，计算着色器（compute shader）接受通用的数据，在指定数量的工作组之间并行处理数据，然后将结果返回到一个或者多个缓冲区。这些缓冲区可以包含任意类型的数据。\"]},\"98\":{\"h\":\"可视化\",\"t\":[\"可视化三个具有前后顺序的动作：数据分组、数据计算和可视化。这也是本文的重点，我将详细说明。\",\"数据分组是确定从什么视⻆看什么数据，比如，我们想要看不同班级学生的中考分数，这时候「不同班级」就是我们的切分视⻆，「班级」这个字段，就成了我们的维度。\",\"数据计算，就是给指标附上一个具有统计意义的值。这个值是从指标字段的明细数据中计算得来的，也可以说是聚合得来的，所以我们一般叫做聚合函数。如果我想看大家的平均分，那就是对班级中的分数明细数据求平均，如果我想看每个班学生的最高分呢，用的就是求最大值函数。\"]},\"99\":{\"h\":\"前端\",\"t\":[\"BOM\",\"CSS\",\"canvas&webGL\",\"vue&react\",\"webpack\",\"worker\",\"优化\",\"低代码项目\",\"包管理\",\"实现tab之间通信\",\"性能指标\",\"网络\",\"自定义vite插件\",\"跨域\",\"错误捕获\",\"页面加载流程\",\"项目\"]},\"100\":{\"h\":\"vue & react 区别\"},\"101\":{\"h\":\"响应式不同\",\"t\":[\"vue 拦截监听 getter， setter， 做数据劫持，强调数据可变\",\"react 通过对比引用，props，setState，强调数据不可变。\"]},\"102\":{\"h\":\"更新流程\",\"t\":[\"vue:\",\"@click -> this.count ++ -> get/set -> notify -> watcher -> 调用 cb -> 更新 dom\",\"react：\",\"onClick -> setState/dispatch -> enqueueSetState -> scheduleUpdateOnFiber -> 层层判断组件发生了什么变化 -> 标记 -> 更新 dom\",\"scheduleUpdateOnFiber 在 fiber 上调度更新，调度意味着从根节点开始。\",\"TIP\",\"react jsx 语法比 vue template 更灵活，不容易像 vue 一样监听具体改变. 所以 react 需要从头完全跑一次，再跟旧的对比，异步可中断更新，双缓存。\"]},\"103\":{\"h\":\"数据流向\",\"t\":[\"vue 支持双向绑定， v-model，父子组件间用 props，event，或者 provie，inject\",\"react 单项流，父子组件间用 props， callback，或者 context\"]},\"104\":{\"h\":\"功能组合\",\"t\":[\"react 函数式编程，HOC, 创建自定义 hook\",\"vue2 通过 mixin, vue3 创建 use 函数\"]},\"105\":{\"h\":\"模版\",\"t\":[\"vue 通过 template\",\"react 通过 jsx\"]},\"106\":{\"h\":\"vuex， redux\",\"t\":[\"vue 基于可变数据，数据拦截\",\"vuex 直接将 store 注册到组件实例上 this.$store\",\"redux 基于不可变数据，state 每次都是新的对象\",\"redux 需要 subscribe，或者 react-redux 利用 connect 将 mapStateToProps，mapDispatchToProps 传入组件\"]},\"107\":{\"h\":\"都是基于虚拟 dom\",\"t\":[\"vdom 简化 dom 结构，方便更新时 reconcile。方便跨端，可以在不同平台渲染为需要的元素\",\"vue 是虚拟 dom\",\"react 是 fiber\"]},\"108\":{\"h\":\"Webpack\"},\"109\":{\"h\":\"config 结构\",\"t\":[\"{ entry: path.resolve(__dirname, './src/index.tsx'), output: { path: path.resolve(__dirname, './dist'), filename: \\\"[name].[hash:10].js\\\", clean: true, publicPath: '/', // 打包后文件的公共前缀路径 } // resolve 是路径相关 resolve:{ // 可以省略的文件后缀，优先级有关性能 extension: ['.tsx', '.ts', '.jsx', '.js'] }, plugins:{ new HTMLWebpackPlugin(); } module: { rules: [] }, // 以下在mode: development配置 devtools: \\\"eval-cheap-module-source-map\\\", // source-map devServer: { conpress: false, // 不压缩，热更新更快 hot: true, // 热更新 static: { directory: path.resolve(__dirname, '/public') }, // 静态资源托管 }, // 以下可以在mode: production配置 optimization: { minimize: true, minimizer: { new CssMinimizerPlugin(), new TerserPlugin({ parallel: true, terserOptions: { compress: { pure_func: [ 'console.log', 'console.warn', ] } }, }), }, splitChunk: { chunks: true, cacheGroups: { vendor: { name: 'vendors', test: /node_module/, // minChunk: 使用次数 // minSize: 多大的文件才提取 // chunks: 'initial' 不管异步文件 }, commons: { name: 'commons', } }, }, }, // 优化 } \"]},\"110\":{\"h\":\"hash\",\"t\":[\"hash 全局，牵一发动全身\",\"chunkhash， 根据入口\",\"contenthash，根据文件自身内容\"]},\"111\":{\"h\":\"微内核架构\",\"t\":[\"微内核架构包含核心系统和插件系统，核心系统是最小可运行的模块，它提供的是通用逻辑（比如 Tapable），插件系统这是些具体的逻辑（比如 HtmlWebpackPlugin 插件）。插件之间可以相互独立，也可以互相依赖。\",\"抽象不依赖于实现，每次扩展，内核不需要修改。意味着内核又很强的扩展性。微内核依赖扩展（plugin），内核驱动 plugin 执行\",\"通过 webpack.config.js 注册表，核心系统可以知道哪些插件可用。读取注册表可以订阅事件，注册回调。\",\"核心系统和插件系统通过 tapable 的 hooks，类似于生命周期，进行通信。核心系统需要提供一个上下文对象（Context），插件通过 context 与外部交互。\",\"核心系统的生命周期顺序执行的过程，也就伴随这对应时期的插件的生命周期交替执行，生命周期走完了，整个程序流程也就结束了。\"]},\"112\":{\"h\":\"webpack require 代码\",\"t\":[\"webpack-实现代码\"]},\"113\":{\"h\":\"worker\"},\"114\":{\"h\":\"利用 blob 开启 worker\",\"t\":[\"const getWorker = (worker) => { const code = worker.toString(); const blob = new Blob([`(${code})()`]); return new Worker(URL.createObjectURL(blob)); }; \"]},\"115\":{\"h\":\"功能\"},\"116\":{\"h\":\"特点\",\"t\":[\"并行，独立线程，有独立上下文，不共享内存\",\"不能访问 window，\",\"通过序列化消息通信\"]},\"117\":{\"h\":\"应用场景\",\"t\":[\"缓存 service worker\",\"跨窗口 postMessage\",\"大计算\",\"网络请求，轮询\",\"计时，不受 showpage 影响\",\"文件操作\"]},\"118\":{\"h\":\"优化\"},\"119\":{\"h\":\"DNS 查询优化\",\"t\":[\"使用 dns-prefetch，在解析主体 HTML 的同时，就会解析制定域名。\",\"<link rel=\\\"dns-prefetch\\\" href=\\\"//www.xxx.com\\\" /> \"]},\"120\":{\"h\":\"TCP 连接\",\"t\":[\"使用 preconnect 指令，让连接在使用之前就已经建立好。\",\"<link rel=\\\"preconnect\\\" href=\\\"//www.xxx.com\\\" /> \"]},\"121\":{\"h\":\"避免重定向\",\"t\":[\"利用 CDN 云端重定向。\",\"统一域名使用 Web 服务器上的 rewrite 规则，避免重定向。\"]},\"122\":{\"h\":\"缓存策略\",\"t\":[\"缓存方式按照优先级高到低\",\"Memory Cache 预加载 \",\"<link rel=\\\"prefetch\\\">\",\"<link rel=\\\"preload\\\">\",\"Service Worker / Cache\",\"HTTP Cache，强缓存。协商缓存\",\"Push “Cache”, HTTP/2\",\"本地 localstorage\",\"CacheStorage\"]},\"123\":{\"h\":\"http 缓存\",\"t\":[\"入口 html 文件设置协商缓存， cache-control： no-cache\",\"其余文件设置强缓存 etag\"]},\"124\":{\"h\":\"强缓存\",\"t\":[\"不向服务器发请求\",\"cache-control: public , max-age=10 过期时长秒，优先级高 \",\"public, 可存于中间服务器，代理的缓存，shared cache\",\"private， 只能被浏览器缓存，private cache\",\"max-age 表示资源会缓存的具体时间。\",\"no-cache 不使用本地缓存。需要使用缓存协商。\",\"no-store 直接禁止游览器缓存数据, 每次请求都会下载完整资源\",\"expires: <过期时间>\",\"Cache-Control 优先级高于 Expires，http1.1 优先级更高 `\"]},\"125\":{\"h\":\"协商缓存\",\"t\":[\"返回 304\",\"etag / if-none-match：<etag> 优先级高 \",\"etag 优点， 解决 1 秒内多个修改\",\"last-modified: <最后修改时间>/if-modified-since\",\"如果 if-modified-since >= last-modified 返回 304\",\"ETag 的优先级高于 Last-Modified， http1.1 优先级更高\"]},\"126\":{\"h\":\"启发式缓存\",\"t\":[\"头没有设置强缓存， 但是 Last-Modified，设置缓存时间为 (Date - Last-Modified)*0.1\",\"只有在服务端没有返回明确的缓存策略时才会激活浏览器的启发式缓存策略。\"]},\"127\":{\"h\":\"请求响应过程\"},\"128\":{\"h\":\"大包个数及大小优化\",\"t\":[\"Gzip \",\"compressionPlugin\",\"包的个数 \",\"MiniCssExtractPlugin\",\"多入口 dependsOn 公共打包\",\"动态导入 import（）\",\"codesplit / runtimeChunk/ vendor\",\"包的大小 \",\"htmlWebpackPlugin minify\",\"concatenateMode: true // 作用域提升\",\"tree shacking // usedExports/ sideEffects\",\"terser / css-minimizer-webpack-plugin\",\"打包， minify， tree shaking， runtime 按需加载， 分割，其他资源\",\"hash / contentHash\"]},\"129\":{\"h\":\"基于构建工具的优化 webpack\",\"t\":[\"包大小 \",\"压缩 js / css/ html / 资源文件： terser， uglifyJS， CSSNano，css-minimizer-webpack-plugin\",\"资源优化：字体子集化，图片 base64\",\"Gzip\",\"TreeShaking ： usedExports / sideEffects\",\"concatenateMode 作用域提升\",\"包个数 \",\"代码分割策略：多入口/动态加载/ runtime\",\"动态加载 import（）\",\"首屏资源与其他资源分离\",\"缓存 \",\"哈希文件名\"]},\"130\":{\"h\":\"http2\",\"t\":[\"tls 握手后会决定是否使用 http2\"]},\"131\":{\"h\":\"帧\",\"t\":[\"HTTP2 是基于帧的协议, HTTP1 是以文本来分隔，服务器只能根据文本换行符来拆分请求数据。\",\"分帧会来来如下好处：\",\"二进制协议：HTTP2 的分帧层是基于帧的二进制协议，方便机器解析。\",\"首部压缩：仅仅使用二进制协议还不够，HTTP2 的首部还会被深度压缩。 HTTP2 使用 HPACK 压缩\",\"多路复用：当你在使用 HTTP2 传输链接的时候，不必等待上一个请求结束后才进行下一个请求，请求和响应可以交织在一起。\",\"GZIP 压缩有泄漏加密信息的风险\",\"CRIME 原理：攻击者在请求中添加数据，观察压缩加密后的数据量，如果变小了，就证明注入的数据和请求中的其他内容有重复，进而搞清楚所有的加密数据内容。\",\"HPACK 原理\",\"请求发送时根据首部创建一张表，服务器接收到数据也会创建对应的表。在之后的请求中，如果首部是相同的，只用发送表中对应的索引，而不用发送整个头。服务端根据索引还原对应首部。\"]},\"132\":{\"h\":\"流\",\"t\":[\"流是 HTTP2 链接上独立的，双向的帧序列交换。可以将流看作在连接上的一系列帧，他们构成了单独的 HTTP 请求和响应。\",\"消息：泛指 HTTP 中一个请求或一个响应。\",\"流量控制：当一段接收并消费被发送的数据时，它将发出一个 WINDOW_UPDATE 帧，用来表示其更新后的处理字节的能力。确保一个流不会影响到其他的流。\",\"优先级：首先请求网页上最重要的元素，以最优的顺序获取资源，由此来优化页面性能。\",\"通过 HEADERS 帧可以指明某些对象和其他对象的依赖关系。\",\"通过 PRIORITY 帧，可以告诉服务器如何确定具有共同依赖关系的对象的优先级。\"]},\"133\":{\"h\":\"服务器推送\",\"t\":[\"提升单个资源性能的最佳方式，就是在它被用到之前就放到了浏览器的缓存里，服务器端可以主动将资源发给客户端，这可能是因为它知道客户端不久后将会用到该资源。\",\"如果服务器决定推送一个对象，会通过 PUSH_PROMISE 帧去传递将会被推送的资源。\"]},\"134\":{\"h\":\"http2 的坑\",\"t\":[\"关于丢包。之前说到，HTTP2 采用多路复用，可以让多个请求在同一个 TCP 连接中进行传输，但是由于 HTTP2 是单链接架构，如果唯一的连接发生了丢包，所有的工作都会受到影响，这其实是 HTTP2 中比较大的坑。HTTP1 在请求时建立了多个连接（6 个），当有一个连接发生丢包时，不会影响到其他请求。\",\"关于服务器端推送。服务器端推送可以主动给客户端推送资源，用来减少客户端发起请求数量。如果推送的资源在客户端已经缓存过，那就是多此一举了，所以在做服务器端渲染时，一定要和客户端的缓存策略结合起来\"]},\"135\":{\"h\":\"http2 带来的修改\",\"t\":[\"不需要拆分域名，多个 DNS 域名服务器。\",\"内联资源，雪碧图之类的没有必要。\",\"禁用带 cookie 的域名。在 HTTP1 中，由于无法压缩首部，会启动一个无 cookie 的服务器专门用来存放某些静态资源，用来减少不必要的 cookie 传输。在 HTTP2 中，首部信息会被 HPACK 算法优化，大大减少了首部字节，而且不用心增一个无 cookie 的服务器，所以建议取消掉禁用 cookie 域名的方式。\",\"资源预取，prefetch，preload。\"]},\"136\":{\"h\":\"HTTP3\",\"t\":[\"QUIC， 利用 UDP\",\"TLS1.3 建立连接只需要一次往返，恢复连接不需要往返。\"]},\"137\":{\"h\":\"解析 html\"},\"138\":{\"h\":\"css\",\"t\":[\"css 在头部请求，防止阻塞 dom 渲染\"]},\"139\":{\"h\":\"defer / async\",\"t\":[\"内联 script 和 script 前的 style 阻塞 html 解析， 同步下载\",\"外联 defer script 并行下载， 在 html 解析完成后顺序执行， 之后发 DOMContentLoaded\",\"外联 async script 并行下载， 一旦下载完就执行， 与 DOMContentLoaded 无关\",\"Async 比 defer 优先级高\"]},\"140\":{\"h\":\"其他\",\"t\":[\"html/css 渲染\",\"阻塞性代码\",\"回流 几何属性 与重绘 外观属性\",\"CSS 变换 使用 transform ， 不增加重排\",\"transition\",\"css gpu\",\"SSR\"]},\"141\":{\"h\":\"webpack 打包时优化\",\"t\":[\"缓存 配置 cache 属性\",\"并行/多线程 terserWebpackPlugin / thread-loader\",\"减少打包范围， 配置 exclude， 不产生 sourcemap\",\"使用高效编译器 esBuild\"]},\"142\":{\"h\":\"低代码\"},\"143\":{\"h\":\"选型\",\"t\":[\"渲染器 dom（iframe）， canvas 选择\",\"dom\",\"pros \",\"如果最终渲染成 html，可以真实呈现，\",\"页面调优 debug\",\"处理事件容易。\",\"cons \",\"屏幕尺寸兼容性需要处理。\",\"浏览器渲染慢\",\"canvas\",\"props \",\"可以统一缩放，能实现微调，\",\"可以进行图形操作，\",\"画幅稳定\",\"cons \",\"事件处理麻烦一点，需要转换\",\"融合 dom 和 canvas\",\"渲染器 canvas，产出 dom，缺点就是编辑时和产出会不一致（dom 样式和 canvas），增加开发。导出 html 可以作为其中一个功能。\",\"渲染器 canvas，产出 svg，svg 本身也是 dom 结构。\",\"利用 dom 方案，CSS 隔离方案选择\",\"用内联样式，\",\"用 iframe（样式隔离，数据隔离，可以跨域），\",\"独立哈希名（需要编译时处理）。\",\"利用现有前端框架\",\"vue 有模版语法，渲染 dom 更方便。\"]},\"144\":{\"h\":\"整体运行结构与架构设计\",\"t\":[\"基础数据概念：datasource dataview dimensions metrics columns\",\"基础分片概念：组件、模版、模块、事件、网络\",\"基础数据源配置设置\",\"低代码系统整体架构设计：数据源配置 + 物料仓库搭建 + 渲染引擎设计 + 配置面板搭建\",\"统一协议串联\"]},\"145\":{\"h\":\"渲染引擎设计\",\"t\":[\"渲染引擎框架设计\",\"渲染引擎模块分类：网络 + 数据 + 结构 + 组件加载\",\"渲染引擎实现\"]},\"146\":{\"h\":\"编辑器渲染\"},\"147\":{\"h\":\"组件渲染\"},\"148\":{\"h\":\"组件组装与数据导入\"},\"149\":{\"h\":\"组件物料仓库设计\",\"t\":[\"解耦组件加载和搭建\",\"组件仓库物料堆设计\",\"组件接口设计与暴露\"]},\"150\":{\"h\":\"加载数据源配置\",\"t\":[\"数据源配置开发\",\"数据源加载 + 页面传参 + 计算变量\",\"数据协议以及导入\"]},\"151\":{\"h\":\"配置面板\"},\"152\":{\"h\":\"拖拽布局系统 画布\",\"t\":[\"拖拽布局与内容提取\",\"拖拽布局模式设计\",\"实现多层级数据流 & 逻辑流画布\"]},\"153\":{\"h\":\"组件配置 配置面板\",\"t\":[\"基于 json-schema 驱动的模式配置\",\"用“配置”来“配置”“配置系统”\",\"微内核架构中的“双内核”实现\"]},\"154\":{\"h\":\"包管理\"},\"155\":{\"h\":\"硬连接 & 软连接\",\"t\":[\"文件就是指针， 指向外部存储地址\"]},\"156\":{\"h\":\"硬连接\",\"t\":[\"不会产生额外的磁盘占用，并且，两个文件都能找到相同的磁盘内容。\"]},\"157\":{\"h\":\"软连接/符号连接\",\"t\":[\"b 软连接指向 a，a 指向外部存储\"]},\"158\":{\"h\":\"区别\",\"t\":[\"硬链接仅能链接文件，而符号链接可以链接目录\",\"硬链接是一个实实在在的文件，node 不对其做任何特殊处理，也无法区别对待，实际上，node 根本无从知晓该文件是不是一个硬链接\",\"硬链接在链接完成后仅和文件内容关联，和之前链接的文件没有任何关系。而符号链接始终和之前链接的文件关联，和文件内容不直接相关。\",\"符号链接指向的是另一个文件或目录，当 node 执行符号链接下的 JS 文件时，会使用原始路径\"]},\"159\":{\"h\":\"pnpm\",\"t\":[\"pnpm 使用硬连接和软连接,非扁平化，处理流程\",\"通过 package.json查询依赖关系，得到最终要安装的包：a 和 b \",\"已经解析的标记，未解析的查找 lockfile 或者 registry， 获取版本信息\",\"在工程 proj 根目录中查看 a 和 b 是否已经有缓存，如果没有，下载到缓存中，如果有，则进入下一步\",\"在 proj 中创建 node_modules 目录，并对目录进行结构初始化 \",\"代码目录中用硬连接放入源码\",\"每个代码直接依赖用软连接放入代码目录\",\"间接依赖的包用软连接放入.pnpm/node_modules\",\"工程的proj/node_modules中用软连接放置项目直接依赖\"]},\"160\":{\"h\":\"npm\",\"t\":[\"扁平化，npm 安装 axios 的时候,axios 的依赖会放在和 axios 同一级，但是项目中也能直接去应用 axios 的依赖包，造成幽灵依赖。\"]},\"161\":{\"h\":\"实现tab之间通信\"},\"162\":{\"h\":\"直接交换\",\"t\":[\"父页面window.open 和 子页面Window.postMessage\",\"同源 BroadcastChannel， bc.onmessage(), bc.postMessage()\"]},\"163\":{\"h\":\"第三方存储\",\"t\":[\"同域共享localstorage ， 监听window.onstorage\",\"IndexedDB\",\"同域共享cookie， 脏轮询脏检查， 如果是httpOnly不能获取cookie\"]},\"164\":{\"h\":\"第三方中转\",\"t\":[\"serviceWorker/shared worker\"]},\"165\":{\"h\":\"性能指标\",\"t\":[\"First Paint 首次绘制（FP）这个指标用于记录页面第一次绘制像素的时间，如显示页面背景色。FP 不包含默认背景绘制，但包含非默认的背景绘制。\",\"First contentful paint 首次内容绘制 (FCP)LCP 是指页面开始加载到最大文本块内容或图片显示在页面中的时间。如果 FP 及 FCP 两指标在 2 秒内完成的话我们的页面就算体验优秀。\",\"Largest contentful paint 最大内容绘制 (LCP)用于记录视窗内最大的元素绘制的时间，该时间会随着页面渲染变化而变化，因为页面中的最大元素在渲染过程中可能会发生改变，另外该指标会在用户第一次交互后停止记录。官方推荐的时间区间，在 2.5 秒内表示体验优秀\",\"First input delay 首次输入延迟 (FID)首次输入延迟，FID（First Input Delay），记录在 FCP 和 TTI 之间用户首次与页面交互时响应的延迟。\",\"FID 测量浏览器能够处理用户交互所需的时间，仅限于单击、按键、鼠标按下和指针按下。\",\"网页响应能力\",\"Time to Interactive 可交互时间 (TTI)首次可交互时间，TTI（Time to Interactive）。这个指标计算过程略微复杂.\",\"CLS 视觉稳定性，页面结构\"]},\"166\":{\"h\":\"LCP 可能被这四个因素影响\",\"t\":[\"LCP < 2.5s\",\"服务端响应时间\",\"Javascript 和 CSS 引起的渲染卡顿\",\"资源加载时间\",\"客户端渲染\"]},\"167\":{\"h\":\"解决\",\"t\":[\"服务器优化\",\"缓存\",\"资源/图片优化\",\"文件大小/webpack chunkSplit\",\"CDN， 缩小 TIme to First Byte 时间\",\"渲染优化\",\"js css 阻塞解析渲染\",\"资源是否能被 HTML 预解析发现， 背景图或利用 js 加载的图片解析不到\",\"首屏优化 => 懒加载、异步加载\",\"fetchpriority 属性\",\"CSS 模块优化\",\"SSR 服务端渲染\"]},\"168\":{\"h\":\"FID （First input delay） 可能被这四个因素影响 / 被 INP 替代\",\"t\":[\"FID < 100ms\",\"减少第三方代码的影响\",\"减少 Javascript 的执行时间\",\"最小化主线程工作\",\"减小请求数量和请求文件大小\",\"a. 减少 JS 的执行时间\",\"缩小压缩 JS 文件\",\"延迟加载不需要的 JS => 模块懒加载 ｜ tree shaking\",\"尽量减少未使用的 polyfill\",\"b. 分解耗时任务\",\"减少长逻辑 long task\",\"异步化\",\"c. worker\",\"web worker | service worker\",\"worker 处理竞争，可以加锁，或者用事件与回调来控制\"]},\"169\":{\"h\":\"如何优化 CLS 我们可以根据这些原则来避免非预期布局移动\",\"t\":[\"图片或视屏元素有大小属性，或者给他们保留一个空间大小，设置 width、height，或者使用 unsized-media feature policy, aspect-ratio，box-sizing:border-box\",\"不要在一个已存在的元素上面插入内容，除了相应用户输入。\",\"多个插入改为整体化内容插入 ，减少重排重绘\",\"使用 animation 或 transition 而不是直接触发布局改变。\",\"BF Cache Backward/Forward Cache， 内存中存储 CLS 页面快照\",\"动态字体控制\",\" // 加载完默认字体再显示 => 先用默认字体渲染，下载完成之后，再替换成后续字体 @font-face { src: local('xxx Regular'), url(http:// fonts.xxxx.com/xxx.woff2) } \",\"<img srcset=\\\"aa-320w.jpg 320w, yy-480w.jpg 480w\\\" sizes=\\\"(max-widtth: 320p) 280px (max-widtth: 480p) 440px 800px\\\" src=\\\"yy.jpg\\\" alt=\\\"yy pic\\\" /> /> \"]},\"170\":{\"h\":\"INP （interaction to next paint） 替代 FID\",\"t\":[\"FID 仅测量延迟，即交互元素变得响应之前所需的时间。 点击的处理时间\",\"FID 没有测量网站对这些交互做出反应所需的时间。\",\"INP 衡量页面的整体响应能力，而不仅仅是延迟。而是整个页面生命周期中\",\"当页面响应交互时，结果是视觉反馈，由浏览器在浏览器呈现的下一帧中呈现。\",\"小于 200ms\"]},\"171\":{\"h\":\"解决目的就是释放主线程\",\"t\":[\"避免或分解长任务、50ms 以上的长任务 \",\"isInputPending、scheduler.postTask 和 scheduler.yield\",\"避免不必要的 JavaScript \",\"一开始就不要发送太大的 JavaScript。\",\"避免大量渲染更新。 \",\"保持较小的 Dom 结构\",\"css Containment \",\"利用 css contain 创建新的包含块，BFC，layer\",\"利用 css content-visibility 控制元素是否渲染其内容\",\"rAF 中只安排渲染有关逻辑\"]},\"172\":{\"h\":\"大厂监控体系\",\"t\":[\"从数据采集 => 汇总展示 => 定位问题分派\",\"埋点上报 => 点到点 + 信息采集（通过 api）\",\"数据处理（数据清洗， 处理成需要的指标） => 阈值设置 + 数据分类（按端/按类型） + 数据重组（按需求重组）\",\"可视化展示 \",\"grafana\",\"根据指标要求进行数据圈层\",\"定位问题\",\"告警\"]},\"173\":{\"h\":\"bigpipe\",\"t\":[\"页面分为多个 Pagelets，然后通过在服务器和浏览器上进行不同的执行方法来组合。这使得前端页面可以按进度进行内容的渲染，提升了前端的速度。\"]},\"174\":{\"h\":\"网络\"},\"175\":{\"h\":\"TCP\"},\"176\":{\"h\":\"连接过程\",\"t\":[\"LISTEN：等待从任何远端 TCP 和端口的连接请求。\",\"SYN_SENT：发送完一个连接请求后等待一个匹配的连接请求。\",\"SYN_RECEIVED：发送连接请求并且接收到匹配的连接请求以后等待连接请求确认。\",\"ESTABLISHED：表示一个打开的连接，接收到的数据可以被投递给用户。连接的数据传输阶段的正常状态。\",\"FIN_WAIT_1：等待远端 TCP 的连接终止请求，或者等待之前发送的连接终止请求的确认。\",\"FIN_WAIT_2：等待远端 TCP 的连接终止请求。\",\"CLOSE_WAIT：等待本地用户的连接终止请求。\",\"CLOSING：等待远端 TCP 的连接终止请求确认。\",\"LAST_ACK：等待先前发送给远端 TCP 的连接终止请求的确认（包括它字节的连接终止请求的确认）\",\"TIME_WAIT：等待足够的时间过去以确保远端 TCP 接收到它的连接终止请求的确认。\",\"TIME_WAIT 两个存在的理由： 1.可靠的实现 tcp 全双工连接的终止； 2.允许老的重复分节在网络中消逝。\",\"CLOSED：不在连接状态（这是为方便描述假想的状态，实际不存在）\"]},\"177\":{\"h\":\"三次握手的原因\",\"t\":[\"（首要原因）防止旧的重复连接初始化造成混乱。旧请求先到 如果是两次握手客户端没办法告诉服务端是不是旧的\",\"同步双方的初始序列号\",\"避免资源浪费\"]},\"178\":{\"h\":\"TLS\"},\"179\":{\"h\":\"TLS1.3\",\"t\":[\"// 原 DH 握手 -1.浏览器向服务器发送 client_random，TLS 版本和供筛选的加密套件列表。 // TLS1.3 优化 +1.浏览器向服务器发送 client_params，client_random，TLS 版本和供筛选的加密套件列表。 // 原 DH 握手 -2... // TLS1.3 优化 +2.服务器返回：server_random、server_params、TLS 版本、确定的加密套件方法以及证书。 +浏览器接收，先验证数字证书和签名。 +现在双方都有 client_params、server_params，可以根据 ECDHE 计算出 pre_random 了。非对称 (Elliptic Curve Diffie-Hellman Ephemeral)临时椭圆曲线迪菲-赫尔曼交换 \"]},\"180\":{\"h\":\"椭圆曲线离散对数 TLS1.2\",\"t\":[\" ￼\",\"1.浏览器向服务器发送随机数 client_random，TLS 版本和供筛选的加密套件列表。 // RSA -2.服务器接收到，立即返回 server_random，确认好双方都支持的加密套件 -以及数字证书 (证书中附带公钥)。 // DH +2.服务器接收到，立即返回 server_random，确认好双方都支持的加密套件 +以及数字证书 (证书中附带公钥)。 +同时服务器利用私钥将 client_random,server_random，server_params 签名， +生成服务器签名。然后将签名和 server_params 也发送给客户端。 +这里的 server_params 为 DH 算法所需参数。 // RSA -3.浏览器接收，先验证数字证书。 -若通过，接着使用加密套件的密钥协商算法 RSA 算法 -生成另一个随机数 pre_random，并且用证书里的公钥加密，传给服务器。 // DH +3.浏览器接收，先验证数字证书和 _签名_。 +若通过，将 client_params 传递给服务器。 +这里的 client_params 为 DH 算法所需参数。 -4.服务器用私钥解密这个被加密后的 pre_random，参考 “非对称加密”。 +4.现在客户端和服务器都有 client_params、server_params 两个参数， +因 ECDHE 计算基于 “椭圆曲线离散对数”，通过这两个 DH 参数就能计算出 pre_random。 \",\"￼\"]},\"181\":{\"h\":\"TCP/ UDP 区别\",\"t\":[\"Tcp 需要链接， 有重传机制， 点对点\",\"UDP 效率高， 多对多\"]},\"182\":{\"h\":\"HTTP 请求头\",\"t\":[\"Origin：协议+域名+端口，主要用于跨域。\",\"Host：域名+端口，HTTP2 对应字段为 :authority，主要用于服务器区分服务。\",\"Referer：去掉 fragment（锚点）和 userinfo（用户信息）的 url，用于确认请求的来源页面。 \",\"通过设置 noreferer, 来避免携带 referer<a href=\\\"\\\" rel=\\\"noreferer\\\">link</a>\"]},\"183\":{\"h\":\"host\",\"t\":[\"多个 host 指向同一个 ip，一个服务器 host 多个服务，此时仅仅通过 IP 无法访问到对应的服务，可通过 Host 来进行定位。\",\"仅包括域名和端口号，如 test.pay.com:8090。\",\"Host 是唯一客户端必须携带的请求头，如果缺失了该请求头则会返回 400 状态码。在 HTTP/2 以及 HTTP/3 中，以一个伪头 :authority 代替。\"]},\"184\":{\"h\":\"origin 表明请求来源\",\"t\":[\"当前请求资源所在页面的协议，主机，端口，用来说明请求从哪里发起的，如http://test.my.com:8081\",\"这个参数一般只存在于 CORS 跨域请求中，服务端据此判断是否允许跨域,普通请求没有这个 header！ 如果有 Origin 参数，我们可以看到 response 有对应的 header：Access-Control-Allow-Origin\",\"从广义上讲，用户代理会在以下情况中添加 Origin 请求标头：\",\"跨源请求。\",\"除 GET 和 HEAD 以外的同源请求（即它会被添加到同源的 POST、OPTIONS、PUT、PATCH 和 DELETE 请求中）。\"]},\"185\":{\"h\":\"referer\",\"t\":[\"当前请求页面的来源页面的完整路径：协议+域名+查询参数（注意不包含锚点信息）,即表示当前页面是通过此来源页面里的链接进入的，如http://test.my.com/p/GHB2021081702-001/index.html?a=1&b=2，所有类型的请求都包含此 header。\",\"服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。\",\"在以下两种情况下，Referer 不会被发送：\",\"来源页面采用的协议为表示本地文件的 \\\"file\\\" 或者 \\\"data\\\" URI；\",\"当前请求页面采用的是非安全协议，而来源页面采用的是安全协议（HTTPS）。\",\"nginx 对不同域名的配置\",\"server { # 博客页面 server_name blog.fstars.wang; location / { proxy_pass http://localhost:3000; proxy_cache } } server { # 图片等资源 server_name static.fstars.wang; location / { root /www/static/; } } \"]},\"186\":{\"h\":\"http 1.0/1.1/2\",\"t\":[\"http1.0 建立一个 tcp 连接，进行一次 http 请求，然后会断开 tcp 连接。\",\"http1.1, 有 keep-alive，默认不断开连接 \",\"http1.1 请求一般一次进行一个 http 请求。\",\"http1.1 的 pipeline 可以一次发送多个 http 请求，但是响应需要按顺序，有堆头阻塞。\",\"http2 用帧和流实现多路复用，多个 http 可以在一个 tcp 中进行\",\"浏览器限制 tcp 连接数 6 个\"]},\"187\":{\"h\":\"状态码\"},\"188\":{\"h\":\"3xx\"},\"189\":{\"h\":\"301 moved permanently 永久\",\"t\":[\"不可预测重定向方法 一般转为 get 推荐响应 get/head\",\"缓存\",\"搜索引擎会抓取网址 B 的内容，同时将网址保存为 B 网址。\"]},\"190\":{\"h\":\"302 found 临时\",\"t\":[\"不可预测重定向方法 一般转为 get 推荐响应 get/head\",\"不缓存\",\"时搜索引擎会抓取 B 网址内容，但是会将网址保存为 A 的。\",\"因为保存为 a 的， 会有网址劫持风险\"]},\"191\":{\"h\":\"303 see other\",\"t\":[\"重定向方法改为 Get（put -> get）\"]},\"192\":{\"h\":\"304 not modified\",\"t\":[\"缓存 协商缓存 etag/if-none-match. last-modified/if-modified-since\"]},\"193\":{\"h\":\"307 temporary redirect\",\"t\":[\"重用原始方法和消息主体\"]},\"194\":{\"h\":\"308 permanent redirect\",\"t\":[\"重用原始方法和消息主体\"]},\"195\":{\"h\":\"4xx\"},\"196\":{\"h\":\"401 unauthorized\",\"t\":[\"没有身份验证凭证\"]},\"197\":{\"h\":\"403 forbidden\",\"t\":[\"进入 403，即使重新验证也不会改变该状态\"]},\"198\":{\"h\":\"404 not found\"},\"199\":{\"h\":\"websocket\",\"t\":[\"同时、双向、实时通信的技术，客户端通过 Http 协议请求，在握手阶段升级为 WebSocket 协议。基于 tcp。\"]},\"200\":{\"h\":\"headers\",\"t\":[\"connection: upgrade, upgrade: websocket,\",\"Websocket 通过 HTTP/1.1 协议的 101 状态码进行握手\",\"请求\",\"GET / HTTP/1.1 Host: localhost:8080 # 类似Host、Origin、Cookie等请求首部会照常发送 Origin: [url=http://127.0.0.1:3000]http://127.0.0.1:3000[/url] Connection: Upgrade Upgrade: websocket Sec-WebSocket-Version: 13 #websocket 版本 Sec-WebSocket-Key: w4v7O6xFTi36lq3RNcgctw== Sec-WebSocket-Protocol: chat, superchat \",\"响应\",\"HTTP/1.1 101 Switching Protocols Connection:Upgrade Upgrade: websocket Sec-WebSocket-Accept: Oy4NRAQ13jhfONC7bP8dTKb4PTU= \",\"传输使用数据帧，支持二进制，或文本\"]},\"201\":{\"h\":\"SSE server-sent events\",\"t\":[\"服务器向客户端发送文本消息的技术，SSE 基于 HTTP 协议中的持久连接，具有由 W3C 标准化的网络协议和 EventSource 客户端 api。\",\"缺点：\",\"它是单向的，只能由服务端发送给客户端\",\"只发送文本消息；尽管可以使用 Base64 编码和 gzip 压缩来发送二进制消息，但效率很低。\",\"许多浏览器允许打开数量非常有限的 SSE 连接（Chrome、Firefox 每个浏览器最多 6 个连接）\",\"客户端发出 GET 请求，和 header，来订阅服务器事件\",\"GET /sse HTTP/1.1 Accept: text/event-stream 表示可接收事件流类型 Cache-Control: no-cache 禁用任何的事件缓存 Connection: keep-alive 表示正在使用持久连接 \",\"服务器确认订阅\",\"HTTP/1.1 200 Content-Type: text/event-stream;charset=UTF-8 表示标准要求的事件的媒体类型和编码 Transfer-Encoding: chunked 表示服务器流式传输动态生成的内容，因此内容大小事先未知 \",\"EentSource API\",\"var eventSource = new EventSource('/sse?event=type1&event=type2'); eventSource.onopen = () => console.log('connection is established'); eventSource.onmessage = (event) => console.log('id: ' + event.lastEventId + ', data: ' + event.data); eventSource.onerror = (event) => console.log( 'connection state: ' + eventSource.readyState + ', error: ' + event ); eventSource.close(); eventSource = new EventSource('/sse?event=type1&event=type2'); \"]},\"202\":{\"h\":\"安全\"},\"203\":{\"h\":\"csrf 跨站请求伪造\",\"t\":[\"已登录用户访问攻击者网站，攻击网站向被攻击网站服务器发起恶意请求（利用浏览器会自动携带 cookie）。\",\"在业界目前防御 CSRF 攻击主要有三种策略：\",\"验证 HTTP Referer / origin 字段；依赖于浏览器的实现\",\"在请求地址中添加 token 并验证；\",\"在 HTTP 头中自定义属性并验证。下面就分别对这三种策略进行详细介绍。\",\"添加验证码 CAPTCHA\",\"CORS，\",\"cookie，set-cookie： SameSite\"]},\"204\":{\"h\":\"xss 跨站脚本攻击\",\"t\":[\"攻击者脚本 嵌入 被攻击网站，获取用户 cookie 等隐私信息。\",\"存储型：注入恶意的代码到服务器， 通过 input 提交代码\",\"反射型：点击恶意链接， 注入脚本进入被攻击者的网站， 服务端不存储恶意代码\",\"劫持：传输过程中劫持， 修改 html dom\",\"防御策略：\",\"对输入脚本进行过滤或转码， 白名单过滤标签属性\",\"输出口编码\",\"CSP 保护前端网站\",\"HttpOnly， 不让 js 获取 cookie\",\"非标准。HTTP 响应中设置安全头部，如 X-XSS-Protection 和 X-Content-Type-Options\"]},\"205\":{\"h\":\"noreferer/noopener\"},\"206\":{\"h\":\"noreferer\",\"t\":[\"<a href=\\\"\\\" rel=\\\"noreferer\\\">link</a>\",\"一般跳转会携带 referer 头表明来源。noreferer 可以不携带，避免服务器根据 referer 返回钓鱼网页\"]},\"207\":{\"h\":\"noopener\",\"t\":[\"<a href=\\\"http://other.site\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">LINK</a>\",\"配置了_blank会打开新的标签页，新标签页可以获取到原标签页的属性 window.opener，可以访问原标签页的 location。保护原标签页 url location 不被篡改，noopner 不对传递原标签页的文档对象。\"]},\"208\":{\"h\":\"三方 cookie\"},\"209\":{\"h\":\"CHIPS\",\"t\":[\"具有独立分区状态的 Cookie (CHIPS) ，它允许开发者将 Cookie 选择到“分区”存储中，每个顶级站点都有单独的 Cookie jar。\",\"在 A 站访问 C 站，C 站将会在 A 站种 cookie，禁用三方 cookie，C 将访问不到 cookie。\",\"引入 Partitioned 概念，C 站在 A 站种的 cookie，C 只能在访问 A 站时访问到这个 cookie。\",\"Set-Cookie: name=ConardLi; SameSite=None; Secure; Path=/; Partitioned;\",\"C 在它的 Cookie 上指定了 Partitioned 属性，这个 Cookie 将保存在一个特殊的分区 jar 中。它只会在站点 A 中通过 iframe 嵌入站点 C 时才会生效，浏览器会判定只会在顶级站点为 A 时才发送该 Cookie。\",\"CHIPSCHIPS\"]},\"210\":{\"h\":\"First-Party Sets 第一方集\",\"t\":[\"douyin.com、bytedance.com 这两个域名虽然是属于同一个组织，但是 Chrome 不知道，你可以通过把它们放到一个集合里来告诉 Chrome 这些不同的域名属于同一个组织。\",\"把想要共享 Cookie 的不同域名放到一个集合里，然后提交给 Chrome；\",\"使用 Chrome 提供的特殊的方式来读取这些域名集合下共享的 Cookie；\"]},\"211\":{\"h\":\"自定义 vite 插件\",\"t\":[\"开发一个 Vite 插件\"]},\"212\":{\"h\":\"跨域\"},\"213\":{\"h\":\"cors\",\"t\":[\"无论是否同源，后端服务器都会接到请求，所以才会对非简单请求做预校验的优化。\",\"服务器添加响应头Access-Control-Allow-Origin, 浏览器根据响应头中的值来判断是否拦截。\"]},\"214\":{\"h\":\"简单请求\",\"t\":[\"请求方法必须是以下之一：GET、HEAD、POST，也就是说 PUT、PATCH 等方法必然会触发预检。\",\"只有以下 header 字段允许被修改或被设置，否则必然触发预检。 \",\"Accept、Accept-Language、Content-language、Content-Type（但有限定值）、DPR、Downlink、Save-Data、Viewport-Width、Width\",\"Content-Type 的值只被允许设置为以下三个之一： \",\"application/x-www-form-urlencoded、\",\"multipart/form-data、\",\"text/plain。 也就是说，如果请求的 Content-Type 被设置为 application/json;charset=utf-8 时也必然会触发预检。\",\"添加任何额外的自定义的 header 都会触发预检，例如 x-request-id，但服务端可以设置缓存这一个请求的OPTIONS 响应。\",\"如果是XMLHttpRequestUpload发出的，在请求中使用的任何对象上都没有注册事件侦听器。也就是说，给定一个 XMLHttpRequest 实例 xhr，没有调用 xhr.upload.addEventListener()，以监听该上传请求。\",\"请求中未使用ReadableStream对象。\"]},\"215\":{\"h\":\"非简单请求\",\"t\":[\"有预检（OPTIONS）\"]},\"216\":{\"h\":\"预检请求头\",\"t\":[\"Access-Control-Request-Method\",\"Access-Control-Request-Headers：非简单的 header 字段\"]},\"217\":{\"h\":\"预检响应头\",\"t\":[\"Access-Control-Allow-Origin: 允许哪些域被允许跨域\",\"Access-Control-Allow-Credentials: 是否携带票据访问（对应 fetch 方法中 credentials），当该值为 true 时，- Access-Control-Allow-Origin 不允许设置为 *\",\"Access-Control-Allow-Methods: 标识该资源支持哪些方法，例如：POST, GET, PUT, DELETE\",\"Access-Control-Allow-Headers: 标识允许哪些额外的自定义 header 字段和非简单值的字段（这个后面会解释）\",\"Access-Control-Max-Age: 表示可以缓存 Access-Control-Allow-Methods 和 Access-Control-Allow-Headers 提供的信息多长时间，单位秒，一般为10分钟。\",\"Access-Control-Expose-Headers: 通过该字段指出哪些额外的 header 可以被支持。\"]},\"218\":{\"h\":\"缓存\",\"t\":[\"Access-Control-Max-Age， 在缓存有效期内，该资源的请求（URL和header字段都相同的情况下）不会再触发预检。\"]},\"219\":{\"h\":\"全局错误捕获\"},\"220\":{\"h\":\"前端\",\"t\":[\"可疑区域增加 try...catch\",\"全局监控 JS 异常： window.onerror\",\"全局监控静态资源异常： window.addEventListener（‘error’， true）\",\"全局捕获没有 catch 的 promise 异常：window.addEventListener（‘unhandledrejection’）\",\"iframe 异常：window.onerror\",\"VUE errorHandler 和 React componentDidCatch suspence\",\"监控网页崩溃：window 对象的 load 和 beforeunload 配合 localstorage\",\"Script Error 跨域 crossOrigin 解决\"]},\"221\":{\"h\":\"浏览器\",\"t\":[\"window.onerror = function (message, source, lineno, colno, error){} 不能显示其他域错误具体信息 需要允许跨域\",\"Access-Control-Allow-Origin: *\",\"<script crossorigin src=\\\"\\\"></script> 捕获不到语法 及 资源加载错误（接口/静态资源）\",\"给所有的函数添加 try catch， 利用 ast （uglifyJs）\",\"只能捕获到同步的运行时错误，对于语法和异步错误无能为力\",\"window.addEventListener('error', (error) => {}， true) 事件捕获\",\"加载资源失败的元素会触发一个 Event 接口的 error 事件，并执行该元素上的 onerror 处理函数。这些 error 事件不会向上冒泡到 window， 不过（至少在 Chrome 中）能被单一的 window.addEventListener 捕获\",\"由于网络请求异常不会事件冒泡，因此必须在捕获阶段将其捕捉到才行，但是这种方式虽然可以捕捉到网络请求的异常，但是无法判断 HTTP 的状态是 404 还是其他比如 500 等等，所以还需要配合服务端日志才进行排查分析才可以。\",\"window.addEventListener('unhandledrejection')\",\"全局捕获 Promise 的异常， 可以不单独写 catch\",\"window.addEventListener('rejectionhandled')\",\"没有被捕获的异常之后调用了 catch 触发。配合 unhandledrejection 将没有处理异常的 promise 放到队列中，在之后的时间遍历队列处理添加 catch 处理，rejectionhandled 中可以监听处理过了的 promise，并从队列中剔除。\",\"崩溃或卡顿， 不能上报\",\"利用 window 对象的 load 和 beforeunload 事件实现了网页崩溃的监控。\",\"正常退出设置 flag 为正常退出状态， 崩溃不会 beforeunload， 检查 flag\",\"利用 service worker\",\"新的 ReportingObserver API\",\"const reportingObserver=new ReportingObserver(callback, options?)\"]},\"222\":{\"h\":\"crossOrigin\",\"t\":[\"crossOrigin=\\\"anonymous\\\" 不携带 cookie，crossOrigin=\\\"use-credentials\\\", 会携带 cookie 和客户端证书等票据\"]},\"223\":{\"h\":\"Vue\",\"t\":[\"vue.config.errorHandler = () => {} 全局\"]},\"224\":{\"h\":\"React\",\"t\":[\"ErrorBoundary 组建，配合 componentDidCatch 声明周期\",\"利用 <suspence /> 包裹\"]},\"225\":{\"h\":\"Nodejs\",\"t\":[\"错误异常有两种场景的出现，一种是代码运行中 throw new error 没有被捕获，另一种是 Promise 的失败回调函数，没有对应的 reject 回调函数处理，针对这两种情况 Nodejs 都有默认的统一处理方式，就是给整个进程 process 对象监听相应的错误事件。\",\"//监听未捕获的异常 通用异常 try catch process.on('uncaughtException', function (err) {}); //监听Promise未捕获的异常 process.on('unhandledRejection', function (err) {}); \"]},\"226\":{\"h\":\"Express\",\"t\":[\"app.use((err, req, res, next) => {})\"]},\"227\":{\"h\":\"修饰器添加 try catch 捕获异步\",\"t\":[\"class 修饰器和方法修饰器\",\"// 类修饰器 const asyncClass = (errorHandler?: (error?: Error) => void) => (target: any) => { Object.getOwnPropertyNames(target.prototype).forEach((key) => { // 遍历每一个属性，重写添加try catch const func = target.prototype[key]; target.prototype[key] = async (...args: any[]) => { try { await func.apply(this, args); } catch (error) { errorHandler && errorHandler(error); } }; }); return target; }; // 方法修饰器 const asyncMethod = (errorHandler?: (error?: Error) => void) => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => { const func = descriptor.value; return { get() { return (...args: any[]) => { return Promise.resolve(func.apply(this, args)).catch((error) => { errorHandler && errorHandler(error); }); }; }, set(newValue: any) { return newValue; }, }; }; const action = asyncMethod(sendError); class Parent { @action method1() {} // ... } \"]},\"228\":{\"h\":\"页面加载流程\"},\"229\":{\"h\":\"输入 url 发生什么 /浏览器进程\",\"t\":[\"DNS 寻址，如果直接用 ip 访问也会寻址\",\"http 服务器将 html 以 response 返回给浏览器\",\"网络进程中的线程获取 html， 生成渲染任务传递给渲染进城中的主线程， 根据 event loop， 渲染线程执行渲染任务\",\"渲染主线程\",\"html 解析 dom \",\"有预编译过程, 预解析线程, css，js 开始统一发出去\",\"defer async\",\"遇到 js 代码， 暂停 html， 解析 js 或等待 js 加载\",\"遇到 css， 给到 css 线程，不阻塞 html 解析\",\"css 解析 \",\"css 解析和 html 解析互不干扰， 有单独线程\",\"css 不会阻塞 html 解析\",\"Css 会阻塞 dom 渲染， 因为无法构建 render 树\",\"样式计算 \",\"结合 DOM 和 CSSOM 树\",\"css 开始属性计算，每个属性都有值， auto, px，%\",\"级联 （判断优先级）\",\"继承\",\"生成带有样式的 dom 树， 更新 document.stylesheet\",\"用 getComputedStyle 获取\",\"布局 layout \",\"生成布局树, render tree, 和 dom 树是不对应的\",\"算每个节点的几何信息: 尺寸，位置\",\"浮动规则\",\"区块格式化上下文 BFC (Block formatting context)\",\"包含块 containing block（参照物）\",\"display:none 没有， :after 伪元素有， 匿名块盒/行盒 \",\"文本内容必须在行盒中\",\"行盒和块盒不能相邻\",\"分层 \",\"生成 RenderLayers 树， 考虑重绘\",\"滚动条，堆叠上下文z-index, opacity, transform\",\"css 属性 will-change: transform\",\"绘制 \",\"为每一层生成绘制的指令\",\"交给合成线程\",\"合成线程\",\"分块 tiling \",\"将每一层分为多个小区域， 在 viewport 中的优先画\",\"在合成线程中执行，合成线程还会启动多个工作线程来分块\",\"将块信息给到 GPU 进程\",\"GPU 进程\",\"光栅化\",\"多线程执行光栅化，优先 viewport 区域\",\"生成位图， 交给合成线程\",\"合成线程\",\"画 \",\"根据位图生成 quad 指引信息， 块相对于屏幕的位置\",\"quad 交给 GPU 进程， 要进行系统调用，需要 GPU 进程帮助\",\"transform 发生在这里，而不在渲染主线程上\",\"GPU 进程\",\"GPU 渲染 \",\"利用 GPU\"]},\"230\":{\"h\":\"Reflow 重排\",\"t\":[\"需要重新生成 render tree\",\"例如更新了 dom， 或者更新了 CSS 的几何信息 CSSOM\",\"js 配置样式，产生异步 reflow ， 会合并所有 js 动作，放到 eventloop 中等待更新\",\"js 读取样式，会产生同步 reflow， 立即拿到当前样式\",\"设置不会立刻导致 reflow， 但是读取会\"]},\"231\":{\"h\":\"Repaint 重绘（发生在 style）\",\"t\":[\"需要重新计算绘制指令集， 跳过 layout，layer 步骤\",\"可见样式更改（发生在 style）会引发 repaint\"]},\"232\":{\"h\":\"transform 效率高\",\"t\":[\"只在最后 draw 的步骤\",\"js 修改 transform， cssom 树会变， 会影响 style\",\"animation 属性修改 transform， 只影响最后 draw, 在合成线程中，不会被 js 阻塞\",\"滚动条滚动也在 draw, 合成线程\"]},\"233\":{\"h\":\"从文本解析 html\"},\"234\":{\"h\":\"事件\",\"t\":[\"DOMContentLoad 事件 在同步 js 解析完触发, dom load 完成\",\"load 事件 css js 等资源全部 load 完， 一般更迟出发\",\"domInteractive 开始显示页面 FID\"]},\"235\":{\"h\":\"渲染过程\",\"t\":[\"根据 html 创建 renderLayer 树 z-index， float， position\",\"栅格化， 绘制位图， 利用 gpu 进程绘制\",\"如利用 gpu， 有 GraphicsLayer\",\"第一次绘制， first paint 事件， 只绘制可视区域， 不必等待整个 html 解析完， first paint 和 DOMContentLoad 无关\",\"所有加载项完毕出发 onload\"]},\"236\":{\"h\":\"几种 tree\"},\"237\":{\"h\":\"dom tree\"},\"238\":{\"h\":\"renderObject tree\",\"t\":[\"不包含不可见元素\",\"其上 layout 方法可计算布局信息\",\"某些情况下需要建立匿名的 RenderObject 节点；\"]},\"239\":{\"h\":\"RenderLayers Tree\",\"t\":[\"根节点\",\"css position / transform\",\"overflow / opacity\",\"canvas\",\"video\"]},\"240\":{\"h\":\"GraphicsLayers / compositeLayer 对 RenderLayer 提供后端存储\",\"t\":[\"RenderLayer 具有 CSS 3D 属性或者 CSS 透视效果。\",\"RenderLayer 包含的 RenderObject 节点表示的是使用硬件加速的视频解码技术的 HTML5 video 元素。\",\"RenderLayer 包含的 RenderObject 节点表示的是使用硬件加速的 Canvas2D 元素或者 WebGL 技术。\",\"RenderLayer 使用了 CSS 透明效果的动画或者 CSS 变换的动画。\",\"RenderLayer 使用了硬件加速的 CSSfilters 技术。\",\"RenderLayer 的后代中包括了一个合成层。\",\"合成层上面(z 轴上距离读者更近)的 RenderLayer 也是一个合成层\"]},\"241\":{\"h\":\"进程线程\",\"t\":[\"一般至少 4 个进程：\",\"主进程/浏览器进程\",\"网络进程\",\"Gpu 进程\",\"渲染进程 / 一个标签页一个渲染进程 拥有多个线程 渲染主线程\",\"Blink / v8, 每个 tab 一个渲染进程， 运行在沙箱中\",\"GUI 渲染线程 => 解析 html/css，DOM/CSSOM，重绘重排，与 js 引擎互斥\",\"JS 引擎线程 => 一个 tab 一个 js 引擎\",\"时间触发线程 => event loop， 将任务添加到队列中\",\"定时器触发线程 => setTimeout/setInterval 用来计数，计时完毕添加到事件队列\",\"异步 http 请求线程 => 将回调放入事件队列\",\"合成线程\",\"插件进程 沙箱\",\"Ignition 编译成字节码， 并收集信息优化，扔给 turbofan 编译成机器码，机器码可以 deoptimize 成字节码\"]},\"242\":{\"h\":\"项目\"},\"243\":{\"h\":\"项目本质\",\"t\":[\"管理数据 -> 管理变量 \",\"DB：存储数据\",\"Backend： 数据的增删改查，组织\",\"frontend：runtime 中管理变量的生命周期[modal]，展示数据[view]\"]},\"244\":{\"h\":\"亮点\",\"t\":[\"基于业务，封装公共能力，解决业务中的标准问题，并派生推广\",\"相似的逻辑抽象，推广后能提效，派生推广提效是重点\",\"插件，埋点\",\"使用工程化手段，解决开发逻辑或一类流程性标准的问题。 \",\"规范化工作流程，或者逻辑流程\",\"架构的设计，sdk 分层，隔离，工程架构\",\"行业之前没有的东西。\"]},\"245\":{\"h\":\"monorepo\",\"t\":[\"开发策略，多个项目用一个代码仓库来管理依赖关系。项目间有复用的，可以抽象\"]},\"246\":{\"h\":\"优缺点\",\"t\":[\"优点：\",\"降低基础设施成本，构建，测试，部署逻辑统一。\",\"本地的依赖永远是最新的\",\"跨多个项目的 issue 更容易管理\",\"node_modules 可以复用，加速开发\",\"缺点：\",\"仓库大\",\"版本管理复杂，需要更新解决不兼容问题\",\"仓库不能精细管理，不安全。\"]},\"247\":{\"h\":\"实现\"},\"248\":{\"h\":\"lerna\",\"t\":[\"适合做版本管理 independent 模式\",\"没有库之间的软连接\"]},\"249\":{\"h\":\"Independent 模式\",\"t\":[\"配合 Git，检查文件变动，只发布有改动的包。\"]},\"250\":{\"h\":\"Fixed/Locked 模式\",\"t\":[\"整个项目全量发布，所有包共用一个版本号。lerna 默认模式\"]},\"251\":{\"h\":\"pnppm/yarn\",\"t\":[\"packages: - 'packages/**' \",\"全局,根目录 pnpm add lodash -w\",\"添加到具体项目 pnpm add lodash --filter <package-name>\",\"安装内部包 pnpm add <my-package> --filter <package-name>\",\"类似于npm link\"]},\"252\":{\"h\":\"测试\",\"t\":[\"eslint \",\"eslint --init，会提示安装以下 3 个包\",\"@typescript-eslint/eslint-plugin@latest\",\"eslint-plugin-react@latest\",\"@typescript-eslint/parser@latest\",\"prettier \",\"配置.prettierrc.json, 配合 vscode 插件\"]},\"253\":{\"h\":\"ts\",\"t\":[\"两种方案，一般不直接用 tsc 编译，只用作检查。\",\"@babel/preset-typescript编译 + tsc 类型检查\",\"webpack 上用ts-loader编译 + tsc 类型检查\",\"tsc --init 创建 tsconfig.json\"]},\"254\":{\"h\":\"webpack 相关\",\"t\":[\"webpack react 相关 loader，plugins\",\"pnpm add webpack webpack-cli webpack-dev-server webpack-merge @babel/core @babel/preset-react @babel/reset-env @babel/preset-typescript babel-loader css-loader style-loader less less-loader postcss postcss-loader tailwindcss autoprefixer html-webpack-plugin css-minimizer-plugin mini-css-extract-plugin terser-webpack-plugin cross-env \"]},\"255\":{\"h\":\"react\",\"t\":[\"pnpm add react react-dom @types/react @types/react-dom \"]},\"256\":{\"h\":\"前端构建\"},\"257\":{\"h\":\"boundled\",\"t\":[\"打包成一个 js，webpack，前端工程会用到，本地开发环境也需要构建\",\"HTTP/1.1 各浏览器有并行连接限制\",\"浏览器不支持模块系统（如 CommonJS 包不能直接在浏览器运行）\",\"代码依赖关系与顺序管理\"]},\"258\":{\"h\":\"boundleless / noboundle\",\"t\":[\"保持原本的模块方案，rollup + 多入口，适合组件库\",\"HTTP/2.0 多路并用\",\"各大浏览器逐一支持 ESM\",\"越来越多的 npm 包拥抱 ESM（尽管很多包的依赖并不是）\"]},\"259\":{\"h\":\"css 隔离方案\"},\"260\":{\"h\":\"css in js\",\"t\":[\"css 写成字符串放到组件内，emotion, styled-component\"]},\"261\":{\"h\":\"css module\",\"t\":[\"局部作用域，class 名唯一，bem 规范（block-element__modified），vue 中的 scoped css\",\"模块依赖， compose\",\"配置 css-loader\",\"// 开启局部作用域 // 定制类的哈希字符串的格式 { test: /\\\\.css$/, loader: \\\"style-loader!css-loader?modules&localIdentName=[path][name]---[local]---[hash:base64:5]\\\" }, \"]},\"262\":{\"h\":\"utility css\",\"t\":[\"tailwindcss, 原子化\",\"npx tailwindcss init\"]},\"263\":{\"h\":\"shadowdom\"},\"264\":{\"h\":\"组件方案\",\"t\":[\"自建/三方？\",\"如果 ui 自己写，headless + tailwindcss + css 模块\"]},\"265\":{\"h\":\"微前端方案\",\"t\":[\"iframe，容易实现\",\"module federation\",\"web components\",\"code split 直接代码分割\",\"single-spa qiankun microapp\",\"npm 打成独立包\"]},\"266\":{\"h\":\"js 隔离\",\"t\":[\"消除微应用对全局变量，全局事件的影响。局部 js 对外部访问修改可控\",\"实现沙箱：\",\"with， window.proxy， Map\",\"快照，多实例，单实例\"]},\"267\":{\"h\":\"消息推送\",\"t\":[\"分类：\",\"客户端拉取 \",\"长轮询\",\"短轮询\",\"服务端推送 \",\"websocket\",\"sse（server-sent events）\"]},\"268\":{\"h\":\"特色项目\",\"t\":[\"ai 交互\",\"实时性，webRTC，websocket\",\"低代码，（工具类）\"]},\"269\":{\"h\":\"AsyncLocalStorage\",\"t\":[\"Node 中的 AsyncLocalStorage 的前世今生和未来穿针引线之 AsyncLocalStorage\"]},\"270\":{\"h\":\"获取上下文的问题\",\"t\":[\"深层次调用，参数只能逐级传递。\",\"const http = require('http'); function handler1(req, res) { handler2(req, res); } function handler2(req, res) { console.log(req.url); } http.createServer((req, res) => { handler1(req, res); res.end(); }).listen(); \"]},\"271\":{\"h\":\"AsyncLocalStorageL 使用\",\"t\":[\"const http = require('http'); const { AsyncLocalStorage } = require('async_hooks'); const asyncLocalStorage = new AsyncLocalStorage(); function handler1() { const { req } = asyncLocalStorage.getStore(); // 同步调用 console.log(req.url); } function handler2() { setImmediate(() => { const { req } = asyncLocalStorage.getStore(); // 异步调用 console.log(req.url); }); } http.createServer((req, res) => { // run 里的第一个参数是上下文 asyncLocalStorage.run({ req, res }, () => { handler1(); handler2(); }); res.end(); }).listen(9999, () => { http.get({ port: 9999, path: '/test' }) }); // /test // /test \"]},\"272\":{\"h\":\"WebRTC\",\"t\":[\"基于P2P， UDP\",\"三个服务器：\",\"room服务器，房间管理，\",\"信令服务器，\",\"流媒体中转服务器\"]},\"273\":{\"h\":\"信令服务器\",\"t\":[\"发起端发送 SDP（媒体信息）和candidate（ 网络信息），到信令服务器，\",\"信令服务器 转发到接收端\",\"媒体信息：Session Description Protocol，是数据格式，包含编码器、分辨率之类的信息\",\"网络信息：ip\",\"信令服务器可以用websocket\"]},\"274\":{\"h\":\"STUN\",\"t\":[\"Session Traversal Utilities for NAT,NAT会话穿越应用程序，可以让NAT后的客户端找到公网地址\"]},\"275\":{\"h\":\"TURN\",\"t\":[\"Traversal Using Relays around NAT,是STUN/RFC5389的一个拓展，服务器中转，当打洞失败时，可以作为中继\"]},\"276\":{\"h\":\"ICE\",\"t\":[\"ICE是一组穿透方法而不是协议，它融合了STUN和TURN，ICE使得两个NAT后设备通信更加便捷，ICE使用STUN进行打洞，若失败，则使用TURN进行中转。\"]},\"277\":{\"h\":\"WebRTC api\",\"t\":[\"mediaStream， RTCPeerConnection\"]},\"278\":{\"h\":\"连接过程\",\"t\":[\"媒体协商 + 网络协商\",\"双方都创建PeerConnection， 一方发送offer SDP， 另一方应答answer SDP，最后双方再交换ICE candidate。\",\"发送端请求本地流，MediaDevices.getUserMedia\",\"发送端实例 RTCPeerConnection ，加入本地媒体流 RTCPeerConnection.addTrack() (Since addStream is deprecating)\",\"发送端创建offer， RTCPeeConnection.createOffer()，拿到sdp\",\"发送端配置sdp， RTCPeerConnection.setLocalDescription()，本地端\",\"之后发送端请求STUN 服务器创建 ice candidates， onIceCandidate事件\",\"发送端 请求信令服务器 传输 offer 到 接收端.\",\"接收端 接收 offer，调用 RTCPeerConnection.setR emoteDescription() 记录远端的description\",\"接收端 获取本地流, 将每个media tracks 挂到peer connection，RTCPeerConnection.addTrack()\",\"接收端创建answer，RTCPeerConnection.createAnswer()\",\"接收端 设置本地端description，调用 RTCPeerConnection.setLocalDescription(). 接收端有两端端信息\",\"接收端 通过信令服务器发送answer 到发送端.\",\"发送端 收到answer\",\"发送端 调用 RTCPeerConnection.setRemoteDescription() 设置远端的 description， 发送端也知道两端信息\",\"网络协商\",\"发送端请求STUN服务器，监听onIceCandidate事件获取candidate，\",\"通过信令服务器发送candidate 到接收端\",\"接收端 peerConnection.addIceCandidate 到接收端的ice层\",\"接收端同样请求STUN，发送给发送端\",\"candidate成功连接peerConnection.onTrack收到对方流，开始p2p\",\"无法打通，借助TURN中转\",\"结束通话\",\"结束track， videoElem.srcObject.getTracks().forEach(...stop())\",\"清除peerConnection的事件回调\",\"关闭连接peerConnection.close()\"]},\"279\":{\"h\":\"Buffer 模块\"},\"280\":{\"h\":\"buffer\",\"t\":[\"buffer 用来处理二进制或非 unicode 编码的数据。\",\"buffer 代表一个缓冲区，用于存储二进制数据，俗称字节流，是 i/o 传输时常用的处理方式。相比于字符串，buffer 可以免去编码和解码的过程，节省 cpu 成本，因此在使用 nodejs 进行服务端开发时，http、tcp、udp、io、数据库、处理图片、表文件商户餐等操作，都会用到 buffer。另外 buffer 其实也是 stream 的基础。\",\"应用：\",\"在使用 net 或 http 模块接受网络数据时，可用 buffer 作为数据结构进行传输，即 data 事件的参数。\",\"用于大文件的读取和写入，以前 fs 读取的内容是 string，后来都改用 buffer，在大文件读取上，性能和内存有明显优势。\",\"用于字符转码、进制转换。\",\"用作数据结构，处理二进制数据，也可以处理字符编码。\"]},\"281\":{\"h\":\"node中的buffer模块\",\"t\":[\"二进制数据包\",\"创建 Buffer.from(), Buffer.alloc()\",\"Buffer.from('string')Buffer.from([1,2,3])Buffer.alloc(20)\",\"00 为8位 writeInt8 00 00 为16位 writeInt16BEwriteInt16LE\",\"BE 大端放高位 / LE 大端放低位\"]},\"282\":{\"h\":\"proto buffer 二进制协议编码库\",\"t\":[\"protocal-buffers 先写一个 test.proto 结构化数据格式\",\"schema = protobuf(<proto file>)\",\"schema.structure.encode({key: value})\"]},\"283\":{\"h\":\"8KB\",\"t\":[\"减少内存使用\",\"实例化一个新的 Buffer 类，会根据实例化时的大小去申请内存空间，如果需要的空间小于 8KB，则会多一次判定，判定当前的 8KB 载体剩余容量是否够新的 buffer 实例，如果够用，则将新的 buffer 实例保存在当前的 8KB 载体中，并且更新剩余的空间。\"]},\"284\":{\"h\":\"node 执行流程\"},\"285\":{\"h\":\"1 PlatformInit()\",\"t\":[\"用于对文件进行描述，以及注册两个信号处理函数。\",\"RegisterSignalHander(SIGINT, SignalExit, true); RegisterSignalHander(SIGTERM, SignalExit, true); \"]},\"286\":{\"h\":\"2 argv = uv_setup_args(argc,grgv)\",\"t\":[\"uv_setup_args 是定义在 libuv 中的方法，用于进行 process.title 的设置和读取。\"]},\"287\":{\"h\":\"3 Init(&argc,const_cast(argv),&exec_argc,&exec_argv)\",\"t\":[\"初始化 Uptime 值\",\"对 node 命令行接收的参数和 V8 的 flag 参数进行映射处理。\",\"将 node_is_initialized 标记为 true。\"]},\"288\":{\"h\":\"4 V8::Initialize()\",\"t\":[\"所有的 nodejs 源码（js 文件）都会先由 V8 引擎来解释并运行。\"]},\"289\":{\"h\":\"5 Start(uv_default_loop(),argc,argv,exec_argc,exec_argv)\",\"t\":[\"主要针对于 libuv 进行操作\",\"准备工作\",\"执行 loadEnvironment(&env), 构建 process 对象。\",\"开启 eventloop，无线循环\",\"收尾，内存回收，断开 debug 连接。\"]},\"290\":{\"h\":\"node js\",\"t\":[\"全局环境变量\",\"setTimeout, setInterval, setImmdiate, __filename, __dirname\",\"process: kill, exit, hrtime, cpuUsage, memoryUsage, env, argv,\"]},\"291\":{\"h\":\"process 对象\",\"t\":[\"统计信息，cpu，内存等。 \",\"process.cpuUsage();\",\"memoryUsage()\",\"env\",\"argv\",\"事件循环机制，process.nextTick。 \",\"nodejs 为事件循环位置了一个队列，nextTick 入队列，_tickCallback 出队列。\",\"uncaughtException 事件。 \",\"全局异常捕获。\",\"其他 \",\"进程管理，exit，kill。\",\"i/o 相关，stdout，stderr，stdin。\",\"路径处理，cwd，chdir 等。\",\"执行时间 hrtime\"]},\"292\":{\"h\":\"RPC\",\"t\":[\"RPC vs ajax\",\"RPC 寻址不使用 DNS\",\"协议层不使用 HTTP，而是基于 TCP 或 UDP，半双工或双工\",\"数据包格式使用二进制，不用 JSON\"]},\"293\":{\"h\":\"net 模块\",\"t\":[\"同 http 服务一样需要服务端和客户端\",\"const server = net.creatServer((socket) => { // 写入数据 socket.write(); // 监听数据 socket.on('data', (buffer) => { buffer.toString(); buffer.readInt16BE(); socket.write(Buffer.from('value')); }); }); server.listen(4000); \",\"const socket = new net.Socket({}); socket.connnect({ host: '127.0.0.1', port: '4000', }); socket.write('hello'); socket.on('data', (buffer) => buffer.toString()); \",\"全双工，加包序号标记 粘包， tcp 会把同时发的多个小包合成一个大包一次发送， 需要粘包切分 处理粘包，不完整包需要标记包长 错误处理\"]},\"294\":{\"h\":\"restful api\",\"t\":[\"简单，根据动词 数据聚合不好， 需要更多数据需要拉很多接口， 需要少的数据会有冗余\"]},\"295\":{\"h\":\"GraphQL\",\"t\":[\"专注于数据聚合， 需要什么返回什么，不会冗余。\",\"const { graphql, buildSchema } = require('graphql'); var schema = buildSchema(` type Query { hello: String } `); // 对于每个api接口，root 提供了resolver 函数, 取数据的方式 var root = { hello: () => 'Hello', }; graphql(schema, '{ hello }', root).then((res) => console.log(res)); \",\"结果 {data: {hello: \\\"Hello\\\"}}\"]},\"296\":{\"h\":\"前后端同构\",\"t\":[\"同一个模版/组件 可以在浏览器端渲染， 也可以在 nodejs 端渲染\",\"ReactDomServer.renderToString(component)\",\"VueServerRenderer.renderToString()\",\"注重职责的分离：处理数据逻辑，处理环境逻辑的部分需要代码分割\"]},\"297\":{\"h\":\"压测\",\"t\":[\"apache bench\",\"-c 并发量，同时请求服务器的请求数量。 -n 总共多少请求。-t 压测时间\",\"ab -c200 -n1600 -t15 url\",\"性能指标\",\"request per second, qps每秒能承载的请求量， 并发量\",\"time per reqest, RT每次请求所需时间\",\"time per reqest concurrent, 多久并发量能得到结果\",\"transfer rate, 吞吐量， 每秒数据的流量， 跟带宽差不多\",\"qps 和 rt 最重要\",\"根据性能指标找性能瓶颈\",\"linux 命令\",\"top 查看 cpu, 内存\",\"iostat io 设备，硬盘\",\"js 的运算能力会可能导致 cpu 占用大\"]},\"298\":{\"h\":\"nodejs 性能分析工具\",\"t\":[\"profile， 运行 prof 时做 ab 压测\",\"node --prof index.js\",\"分析得到的 log node --prof-process xxx.log > profile.txt\",\"bottom up / heavy 调用栈， 看占用大头的来源\",\"Chrome devtool\",\"node --inspect-brk index.js\",\"浏览器访问 chrome://inspect, profile 标签开始 cpu profile， 进行 ab\",\"clinic.js\"]},\"299\":{\"h\":\"优化的方法\",\"t\":[\"提前计算，将服务阶段代码移动到启动阶段做。\",\"减少不必要计算，尽量将中间件中的计算移到程序启动时执行，而不在 http 请求响应过程中做\",\"空间换时间，把重复的计算缓存，\",\"例子：\",\"fs.readFileSync 耗时， 可以不在每次请求都调用， 而是放到全局中。\",\"byteLengthUtf8 耗时，readFileSync 第二个参数可以不用'utf-8', 而是返回 buffer 直接给到 body。\"]},\"300\":{\"h\":\"垃圾回收 GC\",\"t\":[\"垃圾回收\",\"js 会记录所有创建过的 js 对象，隔一段时间定时清理没有再被使用的对象。\",\"新生代，容量小，垃圾回收块。\",\"Cheney\",\"所有新创建的都进入新生代，GC 频率高。新生代中经历了几次 GC 都没被清理掉的进入老生代。\",\"老生代， 容量大，垃圾回收慢，GC 频率低\",\"策略：\",\"减少内存使用\",\"避免内存泄漏\"]},\"301\":{\"h\":\"减少内存使用\",\"t\":[\"池，减少分配及销毁的消耗，使内存被复用。\",\"nodejs buffer 是由 nodejs 所定义的，内存分配策略由 nodejs 定义。\",\"nodejs 对于小于 8kb buffer 的内存策略， 共享创建的 8kb 内存复用，而不是每次都新建 8kb\"]},\"302\":{\"h\":\"检查内存泄漏\",\"t\":[\"使用 chrome devtool，memory，进行 ab 过程中截取内存快照。\",\"epipe 报错, ab 的 tcp 已经断开后， 服务器还向这个 tcp 中写数据\",\"gc roots，没有被其他对象所引用的变量都会挂在 gc roots 上\"]},\"303\":{\"h\":\"编写 c++插件加速运行\",\"t\":[\"c++ 文件通过 node-gyp 编译为.node 文件\",\"成本： c++变量和 v8 变量的转换\",\"收益： C++ 运算比 js 快\",\"成本也可能会大过收益。\"]},\"304\":{\"h\":\"ssr\"},\"305\":{\"h\":\"基本结构\",\"t\":[\"// app.js (在服务器和客户端之间共享) import { createSSRApp } from 'vue' export function createApp() { return createSSRApp({ data: () => ({ count: 1 }), template: `<button @click=\\\"count++\\\">{{ count }}</button>` }) } \",\"// client.js import { createApp } from './app.js' createApp().mount('#app') \",\"// server.js (不相关的代码省略) import { createApp } from './app.js' server.use(express.static('.')) // 来托管客户端文件 client.js server.get('/', (req, res) => { const app = createApp() renderToString(app).then(html => { res.send(` <!DOCTYPE html> <html> <head> <title>Vue SSR Example</title> <script type=\\\"importmap\\\"> { \\\"imports\\\": { \\\"vue\\\": \\\"http://.../vue.js\\\", } } </script> <!-- 加载vue --> </head> <body> <div id=\\\"app\\\">${html}</div> <script type=\\\"module\\\" src=\\\"/client.js\\\"></script> <!-- 加载客户端入口文件 --> </body> </html> `) }) }) \"]},\"306\":{\"h\":\"注意\",\"t\":[\"服务端无响应性\",\"只有created， beforeCreate 或者setup 钩子，内部不能有异步或者有副作用代码\",\"不同平台api不同\",\"跨请求状态污染\"]},\"307\":{\"h\":\"跨请求状态污染\",\"t\":[\"在每个请求中为整个应用创建一个全新的实例，包括 router 和全局 store\",\"// app.js （在服务端和客户端间共享） import { createSSRApp } from 'vue' import { createStore } from './store.js' // 每次请求时调用 export function createApp() { const app = createSSRApp(/* ... */) // 对每个请求都创建新的 store 实例 const store = createStore(/* ... */) // 提供应用级别的 store app.provide('store', store) // provide 注入 // 也为激活过程暴露出 store return { app, store } } \"]},\"308\":{\"h\":\"两种获取数据方式\",\"t\":[\"接口内部获取数据，之后用props注入到组件中渲染，返回渲染好的html，数据注入到外部对象\",\"激活的时候从外部对象拿数据\",\"组件内部直接获取数据，vue中serverPrefetch(), 在渲染前的异步生命周期\",\"数据注入到外部对象， 激活的时候从外部对象拿数据, store.replaceState() 替换到store中\"]},\"309\":{\"h\":\"stream\",\"t\":[\"按流的方式处理逐块读取文件内容，而不是全部读取到内存再处理。chunk 块一般是buffer，\",\"分类\",\"Readable ：可以接收数据，但不能向其发送数据。当你将数据推送到可读流中时，它会被缓冲，直到消费者开始读取数据；\",\"writable ：可以发送数据，但不能从中接收；\",\"Duplex ：即可读也可写；\",\"Tranform ：与 Duplex 一样是可写又可读的，但它的输出与输入是相关联的。\",\"const fs = require(\\\"fs\\\"); const rs = fs.createReadStream(\\\"test.md\\\"); let data = \\\"\\\"; // 用事件 rs.on(\\\"data\\\", function(chunk) { data += chunk; }); rs.on(\\\"end\\\", function() { console.log(data); }); // 或者用pipe rs.pipe(data) \",\"优势：\",\"内存效率：处理数据之前，不需要占用大量内存。 \",\"与 fs.readFile 这种会缓冲整个文件相比， 流式传输充分地利用 Buffer （超过 8kb）不受 V8 内存控制的特点，利用堆外内存完成高效地传输。\",\"时间效率：处理数据花费的时间更少，因为流是逐块来处理数据，而不是等到整个数据有效负载才启动。 \",\"与 fs.FileSync 相比，有些优势\"]},\"310\":{\"h\":\"Event Loop\",\"t\":[\"js 是单线程，所以需要实现异步, 非阻塞试 io。\",\"event loop 就是异步回调的实现原理\",\"将异步任务交给其他线程处理， 处理完将回调函数包装成任务放到任务队列等待主线程执行\",\"node 中由 LIBUV c++库提供 event loop,和非阻塞式 io\"]},\"311\":{\"h\":\"event loop 流程\",\"t\":[\"同步代码，一行一行放在 CallStack 执行\",\"遇到异步，会先“记录”下，等待时机（定时、网络请求等）\",\"时机到了，就移动到 Callback Queue\",\"如 Call Stack 为空（即同步代码执行完）Event Loop 开始工作\",\"轮询查找 Callback Queue，如有则移动到 Call Stack 执行\",\"然后继续轮询查找（永动机一样）\"]},\"312\":{\"h\":\"本质\",\"t\":[\"微任务是 ES6 语法规定的（promise、async/await）\",\"ES 语法标准之内，JS 引擎来统一处理。即，不用浏览器有任何干预，即可一次性处理完，更快更及时。\",\"产生微任务直接进入微任务队列\",\"宏任务是由浏览器 W3C 规定的（setTimeout/setInterval、Ajax、DOM）\",\"JS 引擎不处理，浏览器（或 nodejs）干预处理。\",\"产生宏任务先进入第三方模块 ，谁先完成谁在进入队列， 队列按顺序执行\",\"浏览器中：\",\"macro task 宏任务：MessageChannel、postMessage、setImmediate 和 setTimeout，setInterval。\",\"micro task 微任务：Promise.then，queueMicrotask()和 MutationObsever。\",\"requestAnimationFrame 在重绘重排之前执行，所以回调如果是长任务会阻塞渲染。浏览器会根据刷新了计算下一次渲染的时间来判断是否执行 rAF。\",\"同步代码也归为宏任务<script>。中的代码也看作宏任务\"]},\"313\":{\"h\":\"浏览器中 event loop\",\"t\":[\"执行 JS 同步代码（遇到异步函数，分别放在 macroTaskQueue 和 microTaskQueue ）\",\"DOM 对象结构更新（此时还没有在页面显示，但可以获取 DOM 内容了）\",\"执行微任务 microTaskQueue 函数（异步中还可能嵌套异步...）\",\"渲染 DOM 到页面\",\"执行宏任务 macroTaskQueue 函数（异步中还可能嵌套异步...）\",\"...\"]},\"314\":{\"h\":\"Node\"},\"315\":{\"h\":\"队列优先级\",\"t\":[\"process.nextTick —— 微任务，但优先级最高\",\"promise 和 async/await —— 微任务\",\"setTimeout setInterval —— 宏任务\",\"I/O 文件、网络 —— 宏任务\",\"Socket 连接：连接 mysql —— 宏任务\",\"setImmediate —— 宏任务\",\"不同于浏览器， nodejs 中宏任务有优先级， 浏览器中先来后到\",\"timers(计时器) - 执行 setTimeout 以及 setInterval 的回调\",\"I/O callbacks - 处理网络、流、TCP 的错误回调\",\"idle, prepare --- 闲置阶段 - node 内部使用\",\"poll(轮循) - 执行 poll 中的 I/O 队列，检查定时器是否到时间\",\"check(检查) - 存放 setImmediate 回调\",\"close callbacks - 关闭回调，例如 socket.on('close')\"]},\"316\":{\"h\":\"优化\"},\"317\":{\"h\":\"RAIL模型衡量前端性能\",\"t\":[\"RAIL\",\"指标\",\"操作\",\"response\",\"<100ms\",\"用户事件\",\"animation\",\"<16ms\",\"动画/页面滚动\",\"idle\",\"<50ms\",\"保证主线程足够处理下一个用户事件\",\"load\",\"1s\",\"页面加载\"]},\"318\":{\"h\":\"缓存\",\"t\":[\"nginx 缓存 redis 缓存\"]},\"319\":{\"h\":\"nginx\",\"t\":[\"动静分离，nginx 做静态资源，nginx 反响代理，负载均衡做动态数据\",\"# 负载均衡，上位服务器 upstream node.com { server 127.0.0.1: 3000 server 127.0.0.1: 3001 } server { #静态资源 root /root/static/ location ~ /dynamic/path/(\\\\d*) { proxy_pass http://node.com/detail?id=$1 proxy_cache #缓存反向代理 } } \"]},\"320\":{\"h\":\"数据库设计的三范式\"},\"321\":{\"h\":\"第一范式（1NF）：列的原子性\",\"t\":[\"每个字段都是原子， 不可再拆分\",\"例子：所在省县: \\\"广东广州\\\" 拆分为 所在省:\\\"广东\\\",所在县: \\\"广州\\\"\",\"学号\",\"姓名\",\"所在省县\",\"1\",\"张三\",\"广东，广州\",\"拆分后\",\"学号\",\"姓名\",\"所在省\",\"所在县\",\"1\",\"张三\",\"广东\",\"广州\"]},\"322\":{\"h\":\"第二范式（2NF）：消除部分依赖\",\"t\":[\"满足1NF前提下，非主键要完全依赖主键，联合主键不能只依赖一部分\",\"例子：课程名称只依赖课程ID，而不依赖学号，需要拆分为两个表\",\"学号\",\"课程ID\",\"成绩\",\"课程名字\",\"1\",\"1011\",\"A\",\"数学\",\"拆分后\",\"学号\",\"课程ID\",\"成绩\",\"1\",\"1011\",\"A\",\"课程ID\",\"课程名字\",\"1011\",\"数学\"]},\"323\":{\"h\":\"第三范式（3NF）：消除传递依赖\",\"t\":[\"满足2NF前提下，非主键只能依赖主键\",\"例子：班主任依赖了班级这个非主键。\",\"学号\",\"姓名\",\"班级\",\"班主任\",\"1\",\"张三\",\"1班\",\"王老师\",\"拆分为\",\"学号\",\"姓名\",\"班级\",\"1\",\"张三\",\"1班\",\"班级\",\"班主任\",\"1班\",\"王老师\"]},\"324\":{\"h\":\"编译node\",\"t\":[\"./configure\",\"make\",\"make install\"]},\"325\":{\"h\":\"configure 命令\",\"t\":[\"configure 命令一般用来生成 Makefile，为下一步的编译做准备，你可以通过在 configure 后加上参数来对安装进行控制，比如代码./configure –prefix=/usr 意思是将该软件安装在 /usr 下面，执行文件就会安装在 /usr/bin（而不是默认的 /usr/local/bin)，资源文件就会安装在 /usr/share（而不是默认的/usr/local/share）。\",\"同时一些软件的配置文件你可以通过指定 –sys-config= 参数进行设定。有一些软件还可以加上–with、–enable、–without、–disable 等等参数对编译加以控制，你可以通过 ./configure –help 查看详细的说明帮助。\"]},\"326\":{\"h\":\"make\",\"t\":[\"make 表示编译，大多数的源代码包都经过这一步进行编译。如果 在 make 过程中出现 error ，你就要记下错误代码（注意不仅仅是最后一行），然后你可以向开发者提交 bugreport，或者你的系统少了一些依赖库等，这些需要自己仔细研究错误代码。\",\"常见错误\",\"make *** 没有指明目标并且找不到 makefile，停止。\",\"问题很明显，没有 Makefile，原来是要先 ./configure 一下，再 make。\"]},\"327\":{\"h\":\"make install\",\"t\":[\"这条命令来进行安装，这一步一般需要你有 root 权限（因为要向系统写入文件）。\"]},\"328\":{\"h\":\"Js\",\"t\":[\"let var\",\"promise\",\"symbol\",\"tree shaking\",\"ts\",\"上下文\",\"优化方案\",\"内存\",\"函数\",\"判断两个值相等\",\"原型链\",\"基本类型不可变\",\"对象\",\"模块化\",\"编译原理\",\"跨窗口传递\"]},\"329\":{\"h\":\"let var\"},\"330\":{\"h\":\"var let 区别\",\"t\":[\"var 有提升，let 没有提升，(预编译过程中)\",\"var 函数或全局作用域。let 块作用域。\",\"var a; // 1. 声明 // 2. 初始化 // 3. 赋值为undefined { console.log(b); // undefined console.log(a); // ReferenceError: Cannot access 'a' before initialization // let 在块内只是声明了， 但是没有初始化和赋值。暂时性死区 let a = 2; var b = 3; } \"]},\"331\":{\"h\":\"let 编译为 var\",\"t\":[\"let a = 2; { let a = 1; } // 会被编译为 var a = 2; { var _a = 1; } \"]},\"332\":{\"h\":\"同时用 let var\",\"t\":[\"{ var c = 1; // c alrady been declared. let c 的声明提升了 let c = 4; } \"]},\"333\":{\"h\":\"Promise\"},\"334\":{\"h\":\"方法\",\"t\":[\"Promise.all(): 全兑现才兑现，有一个拒绝就拒绝\",\"Promise.any(): 有一个兑现就兑现，全拒绝返回 AggregateError\",\"Promise.race(): 只跟第一个敲定的有关\",\"Promise.allSettled: 所有都敲定，不管有没有拒绝。可以知道每个 promise 结果\",\"Promise.withResolvers(): let { promise, resolve, reject } = Promise.withResolvers()\"]},\"335\":{\"h\":\"Promise.race()\"},\"336\":{\"h\":\"可以用于请求的超时\",\"t\":[\"const data = Promise.race([ fetch('/api'), new Promise((resolve, reject) => { // Reject after 5 seconds setTimeout(() => reject(new Error('Request timed out')), 5000); }), ]) .then((res) => res.json()) .catch((err) => displayError(err)); // -------------------------- let _reject; Promise.race([ new Promise((resolve, reject) => { _reject = reject; }), fetch('./api'), ]); _reject(); // 调用reject来停止 Promise.race 实现超时 // 或者利用 abortController 实现超时 \"]},\"337\":{\"h\":\"用于查看 promise 状态\",\"t\":[\"function promiseState(promise) { const pendingState = { status: 'pending' }; return Promise.race([promise, pendingState]).then( (value) => value === pendingState ? value : { status: 'fulfilled', value }, (reason) => ({ status: 'rejected', reason }) ); } \"]},\"338\":{\"h\":\"用于限制同时执行 promise 个数\",\"t\":[\"利用 Promise.race 来控制新的 promise 插入队列。循环剩余的队列，利用 then 来顺序执行。\",\"function limitPromise(urls, handler, limit) { let queue = urls.slice(); let promises = queue.splice(0, limit).map((url, index) => { return handler(url).then(() => index); }); return queue .reduce((prePromise, url) => { return prePromise .then(() => { return Promise.race(promises); }) .then((index) => { promises[index] = handler(url).then(() => index); }) .catch((err) => console.error(err)); }, Promise.resolve()) .then(() => Promise.all(promises)); } \"]},\"339\":{\"h\":\"promise 多级嵌套，eventloop 执行\",\"t\":[\"Promise.resolve() .then(function F1() { console.log('promise1'); Promise.resolve() .then(function F4() { console.log('promise2'); Promise.resolve() .then(function F5() { console.log('promise4'); }) .then(function F6() { console.log('promise7'); }); }) .then(function F7() { console.log('promise5'); }); }) .then(function F2() { console.log('promise3'); }) .then(function F3() { console.log('promise6'); }); \",\"开始执行 1,13,15 行的 then， 但是 13，15 行的 then 没有 fillfilled，只有 1 行的 f1 加入到微队列中. [f1]\",\"执行 f1，f4 放入微队列，此时 1 行 f1 then fullfilled，f2 加入微队列. [f4, f2]\",\"执行 f4，f5 放入微队列，此时 3 行 f4 then fullfilled，f7 加入微队列. [f2, f5, f7]\",\"执行 f2，f2 对应的 then fillfilled，f3 放入微队列，[f5, f7, f3]\",\"执行 f5，f6 放入微队列, [f7, f3, f6]\",\"执行 f7 [f3, f6]\",\"执行 f3 [f6]\",\"执行 f6 []\",\"输出\",\"promise1; promise2; promise3; promise4; promise5; promise6; promise7; \"]},\"340\":{\"h\":\"promise 内同时 resolve，reject\",\"t\":[\"throw 之后的代码都不执行，错误会被内部捕获\",\"throw 之前没有 fullfilled，状态变为 reject，错误打印到控制台，之前已经 fullfilled 了，不打印到控制台\",\"reject 或者 resolve 之后的代码都会执行\",\"状态变为 reject，都会打印错误到控制台\",\"return 相当于调用 resolve，throw 相当于调用 reject\",\"throw 之后都不会执行，promise reject 会打印 error 到控制台\",\"new Promise((resolve, reject) => { console.log(1); throw new Error('error'); console.log(2); resolve(); console.log(3); }); // 1 \",\"resolve 或 reject 之后的代码都会执行\",\"throw 之前已经 fullfilled，错误被 promise 内部捕获，控制台没有 error\",\"throw 之后的代码不执行\",\"new Promise((resolve, reject) => { console.log(1); resolve(); console.log(2); reject(); console.log(3); throw new Error(); console.log(4); }); // 1 // 2 // 3 \",\"return 相当于调用 resolve， throw 相当于调用 reject\",\"Promise.resolve() .then(() => { return new Error('error'); }) .then((res) => { console.log('then', res); }) .catch((err) => { console.log('catch', err); }); // then Error: error \"]},\"341\":{\"h\":\"then()\",\"t\":[\"then() 内接受一个函数，如果不是函数默认是(x) => x，将值传递。\",\"第二个也是函数，默认是(x) => { throw x; }\",\"then 的返回值不能是自身 promise，会死循环\",\"const promise = Promise.resolve().then(() => { return promise; }); promise.catch(console.err); // TypeError: Chaining cycle detected for promise #<Promise> \"]},\"342\":{\"h\":\"finally()\",\"t\":[\"finally 只要 promise 敲定了就会执行\",\"finally 中的回调不接受任何参数\",\"finally 返回的是上一次 promise 的值。如果抛出异常则返回异常\",\"Promise.resolve('1') .then((res) => { console.log(res); }) .finally(() => { console.log('finally'); }); Promise.resolve('2') .finally(() => { console.log('finally2'); return '我是finally2返回的值'; }) .then((res) => { console.log('finally2后面的then函数', res); }); // 1 // finally2 // finally // finally2后面的then函数 2 \",\"Promise.resolve('1') .finally(() => { console.log('finally1'); throw new Error('我是finally中抛出的异常'); }) .then((res) => { console.log('finally后面的then函数', res); }) .catch((err) => { console.log('捕获错误', err); }); // finally1 // 捕获错误 Error: 我是finally中抛出的异常 \"]},\"343\":{\"h\":\"async function\",\"t\":[\"async 函数返回 promise\",\"函数中 return 代表 resolve， throw 代表 reject\",\"return 一个 promise，实际上是将这个函数的 resolve，reject 给到了这个 promise 的 then 里，当这个 promise 敲定，会调用函数的 resolve 或 reject 也就是说 async 函数敲定之后都是最终 resolve 的结果\",\"async 函数中不写 return， 默认 resolve undefined。\",\"所以在 async 函数中，返回一个 promise 时，写不写 await 都一样\",\"重试执行一个函数\",\"async function retryFn(fn, tryTimes) { try { return fn(); } catch (err) { if (tryTimes > 1) { return retryFn(fn, tryTimes - 1); } else { throw err; } } } \"]},\"344\":{\"h\":\"await 执行顺序\",\"t\":[\"await 之后的语句相当于放到了 new Promise 中，是同步执行。默认返回 undefined。如果是 new Promise(() => {}) 中必须显式调用 resolve。其他地方async函数和then()中回调默认返回 undefined\",\"await 下面的语句相当于放到 Promise.then 中，是微任务。\",\"await 中的语句如果 reject/throw 了，如果没有 catch 就会终止执行整个代码，抛出错误\"]},\"345\":{\"h\":\"async generator\",\"t\":[\"async *[Symbol.asyncIterator]() {} // 异步可迭代 async function* asyncGenerator() { var i = 0; while (i < 3) { yield i++; } } asyncGenerator() // 返回promise (async function () { for await (num of asyncGenerator()) { console.log(num); } })(); // 0 // 1 // 2 \",\"async function* streamAsyncIterator(stream) { const reader = stream.getReader(); try { while (true) { const { done, value } = await reader.read(); if (done) { return; } yield value; } } finally { reader.releaseLock(); } } // fetch 获取response之后 for await (const chunk of streamAsyncIterator(response.body)) { // Incrementing the total response length. responseSize += chunk.length; } \"]},\"346\":{\"h\":\"Symbol\",\"t\":[\"Symbol 不能作为构造函数，避免创建包装对象。\",\"全局符号注册表 Symbol.for();Symbol.keyFor().\",\"内置 symbol：\",\"Symbol.asyncIterator 被for await ... of使用\",\"Symbol.iterator，被 for ... of 调用\",\"Symbole.hasInstance， 被 instanceof 调用\",\"Symbol.toPrimitive 强制类型转换\"]},\"347\":{\"h\":\"tree shaking\"},\"348\":{\"h\":\"实现原理\",\"t\":[\"Make 阶段， 从入口文件遍历所有模块，形成AST，模块依赖关系图 ModuleGraph\",\"Seal 阶段，运行代码，遍历ModuleGraph，用到过的代码，做好标记\",\"Terser 删掉这些没被用到的导出语句。\",\"Tree Shaking在去除代码冗余的过程中，程序会从入口文件出发扫描所有的模块依赖，以及模块的子依赖，然后将它们链接起来形成一个“抽象语法树”(AST)。随后，运行所有代码，查看哪些代码是用到过的，做好标记。最后，再将“抽象语法树”中没有用到的代码“摇落”。经历这样一个过程后，就去除了没有用到的代码。\",\"webpack 中配置 optimization.usedExports = true\",\"或者package.json\",\"// package.json { \\\"sideEffects\\\": [\\\"*.css\\\", \\\"*.scss\\\"] } \"]},\"349\":{\"h\":\"下面我们看下ES Module的特性\",\"t\":[\"只能作为模块顶层的语句出现（而不嵌套在条件语句中）\",\"import 的模块名只能是字符串常量（只对文件进行字符串读取）\",\"导入和导出语句没有动态部分（不允许使用变量等）静态导入\"]},\"350\":{\"h\":\"TS\"},\"351\":{\"h\":\"类型 type\",\"t\":[\"类型的背后是值所拥有的属性和方法。变量引用一个值，每个值都具有类型 type。\",\"值'red' 类型是 string。拥有所有 string 的方法和属性。\",\"所以：\",\"ts 可以帮助判断代码错误\",\"编码时可以知道内部的数据类型，有哪些方法或属性可用。\",\"基础类型： number string boolean symbol null undefined void\",\"对象类型： objects arrays functions classes 自定义的类型\",\"对象类型可以欺骗 ts。\"]},\"352\":{\"h\":\"类型注释 annotation 推断 inference\",\"t\":[\"注释：一段代码用来告诉 ts 变量引用的值的类型，我们告诉 ts type 推断：ts 自动找出变量引用值的类型， ts 猜 type\",\"两个功能对 variables, functions, objects 表现不同\",\"一般情况都用推断。\",\"需要注释的情况：\",\"声明变量，初始化变量在另一行语句。推断在声明变量且初始化的时候才生效，\",\"函数返回 any，需要明确类型。 json.parse() 返回 any\",\"变量的类型不能被推断的时候\"]},\"353\":{\"h\":\"tuple\",\"t\":[\"混合多种类型的类数组，元素顺序是固定的。\",\"// tuple const pepsi: [string, number, boolean] = ['213', 321, false]; // array const pepsi: (string | number | boolean)[] = ['213', 321, false]; \"]},\"354\":{\"h\":\"interface\",\"t\":[\"定义一个新 type，用来描述 object 中属性名和值的 type\"]},\"355\":{\"h\":\"clases\",\"t\":[\"修饰符，\",\"public，\",\"private 只能在当前 class 里被调用\",\"protected 当前 class 或子 class 里被调用\",\"子类 constructor 中的 super 相当于父类的 constructor。\",\"自己构造的 class，可以将在 class 中 new 的实例设置为 private，以便限制使用的范围。\",\"class AA { // 相当于先在外面声明 val:string，再在constructor 内部赋值this.val = val constructor(public val: number) {} someMethods() {} } class BB { // BB 的实例将不会访问到instAA，也就不会调用AA 的someMethods，更安全。 private instAA; constructor() { this.instAA = new AA(); } } \",\" interface I1 { name: string; age: number; } interface I2 { name: string; count: number; } function temp(value: I1 | I2): void { // value 只能拥有I1 I2 共同的方法name console.log(value.name); } // 更好的做法是标记为只有name的类型 interface IName { name: string; } function temp(value: IName): void {...} temp({name: '', age: ''}) // 也满足IName类型 // 一个值可以满足多种类型。 // 抽象类 abstract class ClassName { abstract getName(): string } class User extends ClassName implements I1, I2{ // 内部必须实现所有的interface，和抽象类的方法。 name: string = ''; age: number = 0; count: number = 0; constructor(){ super(); // 有继承，constructor 内部必须要super }; getName = () => this.name; } \"]},\"356\":{\"h\":\"主动推断函数的类型\",\"t\":[\"fn 是 async 函数。\",\"retryFn 的返回类型是 promise，也就是 fn 的返回类型。\",\"async function retryFn<T>( fn: (...args: any) => Promise<T>, tryTimes: number ): Promise<T> { try { return fn(); } catch (err) { if (tryTimes > 1) { return retryFn(fn, tryTimes - 1); } else { throw err; } } } function getPosts(): Promise<string[]> {} const aa = retryFn(getPosts, 3); // ts 可以直接推断出aa 的类型 Promise<string[]> \"]},\"357\":{\"h\":\"上下文/预编译\"},\"358\":{\"h\":\"上下文\",\"t\":[\"变量的作用域链与定义时的环境有关，与执行时无关。\",\"全局上下文创建阶段\",\"window 作为全局上下文对象\",\"设置 this 指向 window\",\"声明变量和函数，安排内存空间\",\"var 变量赋值 undefined\",\"放去作用域链\",\"全局上下文执行阶段 一行行执行，遇到函数创建 函数上下文\",\"函数上下文创建\",\"arguments 作为上下文\",\"this 指向函数调用\",\"函数上下文执行之后从作用域链弹出\",\"每次调用函数都创建函数上下文\",\"var 和 let 不同处理：\",\"var 声明的放到变量环境 variable environment\",\"let 声明的放到词法环境 lexical environment\"]},\"359\":{\"h\":\"预编译\"},\"360\":{\"h\":\"全局预编译\",\"t\":[\"创建全局上下文对象，window；\",\"变量声明提前，var 变量赋值为 undefined，let 声明的不初始化（let var 区别）\",\"函数声明提前，函数会覆盖相同的变量名。\",\"预编译结束，开始执行第一行代码。\",\"console.log(test); //输出 function test() {}; var test = 100; console.log(test); //输出 100; function test() { console.log(111); } console.log(test); //输出 100; \"]},\"361\":{\"h\":\"函数预编译\",\"t\":[\"创建函数上下文\",\"找形参，变量声明，赋值 undefined\",\"实参，形参相统一\",\"函数声明，赋值函数体\",\"从开始执行\",\"function test1(a) { console.log(b); //1 输出 function b(){} var b = 0; console.log(b); //2 输出 0 console.log(a); //3 输出 function a(){} function a() {} function b() {} } test1(1); // 1. 创建函数上下文 // 2. 找形参和变量声明， a: undefined, b: undefined // 3. 带入实参，a: 1, b: undefined // 4. 函数声明，a: fn, b: fn \",\"预编译函数，但是在 if 中，只会将函数名设为 undefined，但是函数不挂载函数，根声明变量表现一致。需要执行到 if 内部再定义函数!\",\"f = function () { return true; }; g = function () { return false; }; (function () { console.log('f', f); // 全局的f，f(){return true} console.log('g', g); // 函数内部提升的g，undefined， if (true) { // 这里f是赋值表达式，不是函数声明，不会提升。只是赋值给外部的f f = function f() { return false; }; // 这里是函数声明g，会提升，但是在if 中，赋值为undefined。 function g() { return true; } } // 如果if内的语句执行了，g函数就初始化了，这里就是g函数了 console.log('g2', g); // g(){return true} })(); console.log(f()); \"]},\"362\":{\"h\":\"总结\",\"t\":[\"同名变量， 采用先声明的\",\"同名函数， 采用后声明的\",\"同名函数和变量， 采用函数\"]},\"363\":{\"h\":\"IIFE\",\"t\":[\"IIFE 函数名\",\"var test = 'outer'; (function test() { test = 'inner'; console.log(test); })(); // 打印 function test // test 在IIFE作用域已经声明为函数，函数名称是只读的，不能被修改 \",\"IIFE 作用域\",\"(function () { var x = (y = 1); // 相当于不加括号 var x = y = 1; // y是全局的，x是iife内的 })(); var z; console.log(y); // 1 console.log(z); // undefined console.log(x); // Uncaught ReferenceError: x is not defined \",\"IIFE 内预编译/变量提升\",\"var friendName = 'World'; (function () { if (typeof friendName === 'undefined') { var friendName = 'Jack'; console.log('Goodbye ' + friendName); } else { console.log('Hello ' + friendName); } })(); // var friendName 被预编译到iife内，为undefined // Goodbye Jack \"]},\"364\":{\"h\":\"针对作用域优化\",\"t\":[\"不使用 with\",\"减少作用域查找的深度，避免全局查找。\",\"避免全局查找\",\"function updateUI() { let imgs = document.getElementsByTagName('img'); for (let i = 0, len = imgs.length; i < len; i++) { imgs[i].title = `${document.title} image ${i}`; } let msg = document.getElementById('msg'); msg.innerHTML = 'Update complete.'; } // document 会一致找到全局作用域，for中使用更是恐怖 function updateUI() { const doc = document; // document 保存在局部变量。 let imgs = doc.getElementsByTagName('img'); for (let i = 0, len = imgs.length; i < len; i++) { imgs[i].title = `${doc.title} image ${i}`; } let msg = doc.getElementById('msg'); msg.innerHTML = 'Update complete.'; } \"]},\"365\":{\"h\":\"优化方案\",\"t\":[\"优化第一步是确定指标。\",\"业务优化，收益最大的功能先优化\",\"结构优化 (编码之前)\",\"开发流程优化 \",\"设计更重要，代码之前的优化，先设计并 review，设计包括 \",\"功能目标\",\"需要的设计\",\"需要的组件，逻辑关系\",\"需要的数据接口\",\"代码注释，模块\",\"结偶，避免代码过度集中\",\"ts 看情况用，ui 层面慎用\",\"设计优化，ui 统一\",\"技术优化(代码层面，前端性能瓶颈)\",\"加载， \",\"少请求，小体积 \",\"压缩合并文件，减少请求数 \",\"splitChunk 合并 css，js，\",\"图片用 Data URI scheme，base64 直接嵌入 html/css data:;base64,...\",\"同域下的 js 下载合并，用逗号<sctipt src=\\\"//b.com/a.js,b.js\\\">\",\"CDN 静态服务器，加速静态资源\",\"多缓存 \",\"http2 \",\"缓存：http stream 中 push 进额外的 js，请求一个 html 会同时下载额外的 js，页面需要 js 时走缓存\",\"nginx 配置开启 http2\",\"tcp 浏览器连接个数限制，可以多域名\",\"DNS 缓存 浏览器，操作系统，局域网，ISP 都会有 DNS 缓存\",\"预加载 \",\"利用空闲时间加载.\",\"新业务上线前预加载，使新业务有缓存。\",\"懒加载 \",\"DOM 和 js 可以先隐藏元素，或者用不会渲染的元素<script type=\\\"非脚本\\\">\",\"图片可以懒加载，滚动事件\"]},\"366\":{\"h\":\"浏览器内存\",\"t\":[\"chrome 内存\"]},\"367\":{\"h\":\"V8 中对象的结构\",\"t\":[\"在 V8 中，对象主要由三个指针构成，分别是隐藏类（Hidden Class）(V8 中为 Map)，Property 还有 Element。\",\"隐藏类用于描述对象的结构。\",\"Property 和 Element 用于存放对象的属性，Element 键名可索引， Property 命名属性。\"]},\"368\":{\"h\":\"隐藏类\",\"t\":[\"实现对象属性的快速存取。\",\"将属性的 value 和其他 descriptor 分开，因为 descriptor 不经常修改。\",\"每添加一个命名属性，都会生成新的隐藏类，其中有back_pointer 指向上一个隐藏类。\",\"要生成相同的隐藏类，需要 \",\"从相同的起点，\",\"以相同的顺序，\",\"添加结构相同的属性（除 Value 外，属性的 Attribute 一致）。\"]},\"369\":{\"h\":\"例子\",\"t\":[\"// 添加属性会生成隐藏类 function student() {} let s = new student(); s.name = 'kaimo'; // 查看a的map地址指向 s.text = '男'; // 再查看a的map地址指向，map内的back_pointer 指向上一个快照的map地址。 \",\"// 创建相同的隐藏类 function Foo() {} var a = new Foo(); var b = new Foo(); a.name = 'kaimo'; a.gender = '男'; a.age = '8'; b.name = 'kaimo'; b.gender = '男'; // 查看a和b的map delete a.age; // 再次查看a和b的map， a和b的map指向同一个地址。 \"]},\"370\":{\"h\":\"命名属性的不同存储方式\",\"t\":[\"V8 中命名属性有三种的不同存储方式：对象内属性（in-object）、快属性（fast）和慢属性（slow）。\",\"对象内属性保存在对象本身，提供最快的访问速度。\",\"快属性比对象内属性多了一次寻址时间。在对象内属性放满之后，会以快属性存放。\",\"慢属性与前面的两种属性相比，会将属性的完整结构存储，速度最慢。转换为哈希。\"]},\"371\":{\"h\":\"例子\"},\"372\":{\"h\":\"可索引属性和命名属性\",\"t\":[\"map 为隐藏类\",\"__poroto__ 为原型链属性\",\"element 为可索引属性\",\"添加的两个命名属性name, text 内部都有 map\",\"function Foo1() {} var a = new Foo1(); var b = new Foo1(); a.name = 'aaa'; a.text = 'aaa'; b.name = 'bbb'; b.text = 'bbb'; a[1] = 'aaa'; a[2] = 'aaa'; \",\"当添加a[100] = \\\"a100\\\" 会变味稀疏数组，转换为哈希存储。\"]},\"373\":{\"h\":\"Property 存储模式：对象内，快属性，慢属性\",\"t\":[\"function Foo2() {} var a = new Foo2(); var b = new Foo2(); var c = new Foo2(); for (var i = 0; i < 10; i++) { a[new Array(i + 2).join('a')] = 'aaa'; } for (var i = 0; i < 12; i++) { b[new Array(i + 2).join('b')] = 'bbb'; } for (var i = 0; i < 30; i++) { c[new Array(i + 2).join('c')] = 'ccc'; } // a 全部为对象内保存属性，没有properties // b 有properties，在 properties 下按创建顺序存放，索引 0，1... // c 的properties 中的索引变成了毫无规律的数，变为哈希存取结构。 \"]},\"374\":{\"h\":\"delete\",\"t\":[\"delete 的缺点：\",\"delete 很多时候删不掉。\",\"delete 返回 true 的时候，也不代表一定删除成功。 比如原型上的属性。\",\"delete 某些场景下会导致隐藏类改变，可能导致性能问题。\",\"function Foo4() {} var a = new Foo4(); var b = new Foo4(); for (var i = 1; i < 8; i++) { a[new Array(i + 1).join('a')] = 'aaa'; b[new Array(i + 1).join('b')] = 'bbb'; } // 查看快照 delete a.a; // 删除a后，a 变为慢属性，退回哈希存储了。 \"]},\"375\":{\"h\":\"console.log\",\"t\":[\"js 会开辟 heap 内存，不开 devtools，console.log 也会占用内存，且没办法 gc。devtools 内部会生成内存模型。FinalizationRegistry()可以试验。\",\"html 文本转换生成的 renderobject（rendertree），renderlayer，可能会成百倍增加，都会占内存\",\"用 GPU 加速的 graplayer 也会占用内存，\",\"cssom renderstyle 也吃内存，同时 cpu 需要对每个节点递归，也吃 cpu\",\"所以无效的 dom，css 都要删除，都会占内存\"]},\"376\":{\"h\":\"垃圾回收\",\"t\":[\"垃圾回收\",\"垃圾回收方法\",\"引用计数\",\"标记清除，用于 v8 老生代\",\"Cheney，用于 v8 新生代\"]},\"377\":{\"h\":\"新生代与老生代\",\"t\":[\"绝对大多数的应用程序对象的存活周期都会很短，而少数对象的存活周期将会很长。为了利用这种情况，V8 将堆分为两类：新生代和老生代，新生代中的对象都非常小大约为 1-8MB，这里的垃圾回收也很快。新生代空间中垃圾回收过程中幸存下来的对象会被提升到老生代空间。\"]},\"378\":{\"h\":\"新声代\"},\"379\":{\"h\":\"Scavenge\",\"t\":[\"垃圾回收很频繁，因此它的处理方式必须非常的快，采用的 Scavenge 算法，具体实现是 Cheney。\",\"Scavenge 是一种复制算法，新生代空间会被一分为二划分成两个相等大小的 from-space 和 to-space。将 from 空间中存活的对象复制到 to 空间中或者提升到老生代空间中（晋升），而 from space 中没有存活的对象将会被释放。完成这些复制后在将 from space 和 to space 进行互换。简单来讲就是通过将存活对象在两个 semispace 空间之间进行复制。\"]},\"380\":{\"h\":\"Scavenge 的缺点\",\"t\":[\"只能使用堆内存中的一半，这是由划分空间和复制机制所决定的。\"]},\"381\":{\"h\":\"Scavenge 的优点\",\"t\":[\"Scavenge 由于只复制存活的对象，并且对于生命周期短的场景存活对象只占少部分，所以它在时间效率上有优异的表现。Scavenge 是典型的牺牲空间换取时间的算法， 所以无法大规模地应用到所有的垃圾回收中。但可以发现，Scavenge 非常适合应用在新生代中，因为新生代中对象的生命周期较短，恰恰适合这个算法。\"]},\"382\":{\"h\":\"晋升\",\"t\":[\"新生代中对象满足是否经历过 Scavenge 回收、to space 的内存占比，会晋升到老生代。\",\"对象从新生代中移动到老生代中的过程称为晋升。\"]},\"383\":{\"h\":\"老生代\",\"t\":[\"Scavenge 的局限：\",\"老生代活对象多，复制效率低\",\"浪费一半内存空间\",\"老生代使用算法：标记清除，标记整理（Mark-Sweep && Mark-Compact）\"]},\"384\":{\"h\":\"Mark-Sweep\",\"t\":[\"Mark-Sweep 过程\",\"Mark-Sweep 在标记阶段遍历堆中所有对象，并标记活着的对象，在随后的清除阶段中，只清除没有被标记的对象\",\"Scavenge 中只复制活着的对象 \",\"新生代中活对象只占较小部分，新生代死多。\",\"Mark-Sweep 只清理死亡对象 \",\"老生代中死对象只占较小部分，老生代活多。\",\"Mark-Sweep 局限： 清除对象导致内存不连续，内存碎片化，所以需要 Mark-Compct\"]},\"385\":{\"h\":\"Mark-Compact\",\"t\":[\"解决 Mark-Sweep 的内存碎片问题。但是处理慢，只有当空间不足以对从新生代中晋升过来的对象进行分配时才使用 Mark-Compact。\",\"Mark-Compct 过程\",\"整理的过程中，将活着的对象往一端移动，移动完成后，直接清理掉边界外的内存\"]},\"386\":{\"h\":\"增量式标记回收(Incremental Marking)\",\"t\":[\"小垃圾回收只收集新生代。全堆垃圾回收会一起回收老生代，会导致 js 停顿，优化的方法：\",\"标记阶段利用增量标记（incremental marking），拆分为许多小“步进”，每做完一“步进”就让 js 应用逻辑执行一小会，垃圾回收与应用逻辑交替执行直到标记阶段完成。\",\"延迟清理（lazy sweeping）与增量式整理（incremental compaction），清理与整理动作也变成增量式的。\",\"并行标记与并行清理\"]},\"387\":{\"h\":\"总结\",\"t\":[\"避免内存泄漏\",\"慎将内存做为缓存\",\"模块私有变量内存永驻 \",\"形成闭包，避免不必要的模块加载\"]},\"388\":{\"h\":\"函数\"},\"389\":{\"h\":\"箭头函数编译\",\"t\":[\"var a = 0; const obj1 = { a: 1, getA: () => { console.log(this); console.log(this.a); }, }; // 编译后 var _this = void 0; var a = 0; var obj1 = { a: 1, getA: function getA() { console.log(_this); console.log(_this.a); }, }; \"]},\"390\":{\"h\":\"函数的上下文\",\"t\":[\"上下文可以用apply, call, bind 来实现, 不需要传参来实现。\",\"function A() { const obj = { val: 333 }; B.call(obj); } function B() { C.call(this); } function C() { console.log('from C', this.val); } A(); \"]},\"391\":{\"h\":\"类\"},\"392\":{\"h\":\"只读属性/利用 getter\",\"t\":[\"利用 getter，setter， 只设置 getter，不设置 setter。\",\"class Course { constructor() { this._name = 'math'; } get name() { return this._name; } } \"]},\"393\":{\"h\":\"私有属性/利用闭包\",\"t\":[\"getName 方法在实例上\",\"class Course { constructor() { const _name = 'math'; this.getName = () => { return _name; }; } } \"]},\"394\":{\"h\":\"封装/适配器模式\",\"t\":[\"底层代码 => 封装 => 客户\",\"之修改了 util 中的_name而不影响 core 中的值。另外#core 是私有属性。不给用户暴露不需要的属性。\",\"class Util { constructor(core) { this.#core = core; this._name = { first: '123', last: '346', }; } get name() { return { ...this.#core.name, ...this._name, }; } set name(val) { this._name = val; } } \"]},\"395\":{\"h\":\"继承\"},\"396\":{\"h\":\"手写一个继承逻辑\",\"t\":[\"// 1. parent 产生的实例添加到 child 的实例上 function Child() { Parent.call(this); } // 2. child 原型链 // Object.create() 创建了没有父类实例方法的实例 Child.prototype = Object.create(Parent.prototype); // 或者 Object.setPrototypeOf(Child.prototype, Parent.prototype); // 3. 把Child构造函数还回去 // Constructor.prototype 默认具有一个自有属性：constructor，它引用了构造函数本身 Child.prototype.constructor = Child; \"]},\"397\":{\"h\":\"手写一个 new 逻辑\",\"t\":[\"function newOperator(fn, ...args) { if (typeof fn !== 'function') throw 'not a constructor'; const obj = Object.create(fn.prototype); const res = fn.apply(obj, args); return Object(res) === res ? res : obj; } \"]},\"398\":{\"h\":\"判断两个值相等/==/===/Object.is\",\"t\":[\"==\",\"== 有强制类型转换\",\"两边相同类型\",\"对象/Symbol： 看引用\",\"数值/字符串/布尔值： 看值\",\"特例： +0 == -0 ， NaN != NaN\",\"两边不同类型\",\"一边为 null / undefined， 另一边也必须为 null / undefined\",\"一边为对象，一边基本，对象用 tostring {}.toString() => ‘[object Object]’,[1,2].toString() => ‘1,2’\",\"两边为不同基本类型 \",\"Symbol => false\",\"Boolean => Number\",\"其余优先转换为 number， 最终比较 number\",\"// 转换顺序： [] == false; '' == false; '' == 0; 0 == 0; \"]},\"399\":{\"h\":\"===\",\"t\":[\"=== 只比较同类型，不同类型一律 false\"]},\"400\":{\"h\":\"Object.is()\",\"t\":[\"比较规则同===， 只有+0， -0 不同\",\"对象需要相同引用\",\"symbol 也需要相同引用\",\"数字\",\"同为+0， -0， NaN\",\"Object.is(+0, +0) => true\",\"Object.is(+0, -0) => false\",\"Object.is(+0, 0) => true\",\"Object.is(-0, 0) => false\",\"Object.is(NaN, NaN) true\"]},\"401\":{\"h\":\"原型链\",\"t\":[\"// Object 本身是函数,是构造器，原型是Function.prototype Object.getPrototypeOf(Object) === Function.prototype; // 同理Function也是构造器，原型是Function.prototype Object.getPrototypeOf(Function) === Function.prototype; // 所有构造器的原型都是Function.prototype // Constructor.prototype.constructor 指向 Constructor 本身 Function.prototype.constructor === Function; Object.prototype.constructor === Object; // Constructo.constructor 指向 原型链上的constructor Function.constructor === Function; Object.constructor === Function; // 相当于 Object._proto__.constructor === Function.prototype.constructor === Function; // Function.__proto__ === Function.prototype // Function.prototype 是唯一一个type是function， 但是原型是Object.prorotype // 所有的构造器也都是一个普通 JS 对象 typeof Function.prototype === 'function'; Function.prototype.__proto__ === Object.prototype; // Object.prototype 的原型是null Object.getPrototypeOf(Object.prototype) === null; Object.prototype.__proto__ === null; \"]},\"402\":{\"h\":\"基本类型不可变\"},\"403\":{\"h\":\"Js数据类型\"},\"404\":{\"h\":\"js是动态类型\",\"t\":[\"变量和类型没有关联\",\"let foo = 42; // foo 现在是一个数值 foo = \\\"bar\\\"; // foo 现在是一个字符串 foo = true; // foo 现在是一个布尔值 \"]},\"405\":{\"h\":\"js是弱类型\",\"t\":[\"允许隐式类型转换，对于 symbol 和 BigInt，JavaScript 有意禁止了某些隐式类型转换。\"]},\"406\":{\"h\":\"原始值\",\"t\":[\"string JavaScript 字符串是不可变的。这意味着一旦字符串被创建，就不可能修改它。\",\"实际上字符串本身是一种经过由语言封装后的基础类型（通过系统自带的String构造函数new出来的），底层还是一个对象，不是简单数据类型。这个对象自从创建之后其内容就不能发生改变，所以字符串不变。\",\"var str = \\\"Bob\\\"; str[0] = \\\"J\\\"; Object.isFrozon(str); // true es6 Object.isSealed(str); // true es6 Object.isExtensible(str); // false es6 \",\"number\",\"boolean\",\"bigint BigInt 并不是严格等于有着相同数学值的 Number，而是宽松的相等。\",\"BigInt 值并不总是更精确的，也不总是比 number 精确，因为 BigInt 不能表示小数，但可以更精确地表示大整数。这两种类型都不能相互替代。如果 BigInt 值在算术表达式中与常规 number 值混合，或者它们相互隐式转换，则抛出 TypeError。\",\"symbol Symbol 是唯一并且不可变的原始值并且可以用来作为对象属性的键（如下）。\",\"undefined\",\"null 从概念上讲，undefined 表示值的缺失，null 表示对象的缺失（这也可以说明 typeof null === \\\"object\\\" 的原因）。当某些东西没有值时，该语言通常默认为 undefined.\",\"null 是一个关键字，但是 undefined 是一个普通的标识符，恰好是一个全局属性。在实践中，这两个差异很小，因为 undefined 不应该被重新定义或者遮蔽。\",\"undefined 在全局作用域是只读的，但在局部作用域中可以改变undefined的值。用viod 0 代替undefined.\"]},\"407\":{\"h\":\"引用\",\"t\":[\"object 在 JavaScript 中，对象是唯一可变的值。事实上，函数也是具有额外可调用能力的对象。\"]},\"408\":{\"h\":\"数据属性\",\"t\":[\"value\",\"writable\",\"enumerable\",\"configurable\"]},\"409\":{\"h\":\"访问器属性\",\"t\":[\"get\",\"set\",\"enumerable\",\"configurable\"]},\"410\":{\"h\":\"数组/类型化数组\",\"t\":[\"array\",\"Int8Array、Float32Array...\"]},\"411\":{\"h\":\"Set, Map, WeakMap, WeakSet\",\"t\":[\"这些数据结构把对象的引用当作键。Set 和 WeakSet 表示唯一值的集合，而 Map 和 WeakMap 表示键值相关联的集合。\",\"它们的原生实现（包括 WeakMap）可以达到近似对数到常数时间的查找性能。\",\"WeakMap 和 WeakSet 只允许将可垃圾回收的值作为键，这些键要么是对象，要么是未注册的 symbol，即使键仍在集合中，也可能被收集。它们专门用于优化内存使用。\"]},\"412\":{\"h\":\"强制类型转换\",\"t\":[\"对象将依次调用它的 [@@toPrimitive]()（将 default 作为 hint 值）、valueOf() 和 toString() 方法，将其转换为原始值。\",\"原始值转换先调用 valueOf() 再调用 toString() 方法，这与数字类型强制转换的行为相似，但与字符串类型强制转换不同。\",\"有三种不同的路径可以将对象转换为原始值：\",\"原始值强制转换：[@@toPrimitive](\\\"default\\\") → valueOf() → toString()\",\"数字类型强制转换、number 类型强制转换、BigInt 类型强制转换：[@@toPrimitive](\\\"number\\\") → valueOf() → toString()\",\"字符串类型强制转换：[@@toPrimitive](\\\"string\\\") → toString() → valueOf()\"]},\"413\":{\"h\":\"对象\"},\"414\":{\"h\":\"对象循环遍历方法\"},\"415\":{\"h\":\"for in\",\"t\":[\"可以拿到可枚举属性，以及原型上的属性, 非自身属性\"]},\"416\":{\"h\":\"Object.keys(), Object.values(), Object.ectries()\",\"t\":[\"返回自身的可枚举属性， 不包含继承的和 symbol\",\"Array.keys() 返回迭代器实例\"]},\"417\":{\"h\":\"Object.getOwnPropertyNames() Object.getOwnPropertySymbols()\",\"t\":[\"返回自身的属性/symbol，包括不可枚举的和可枚举\"]},\"418\":{\"h\":\"Reflect.ownKeys()\",\"t\":[\"返回自身的所有属性，包括symbols 和 names\"]},\"419\":{\"h\":\"for of\",\"t\":[\"本身只能用来遍历 array，本质上调用 Symbol.iterator。因为对象没有 iterator，可以给对象添加 iterator。\",\"迭代器模式，按顺序执行，访问各个元素\",\"var obj = { a: 1, b: 2 }; Object.defineProperty(obj, Symbol.iterator, { enumerable: false, writable: false, configurable: false, value: function () { // 返回一个迭代器 var self = this; var idx = 0; var ks = Object.keys(self); return { // 迭代器执行后有next方法 next: function () { return { value: self[ks[idx++]], done: idx > ks.length, }; }, }; }, }); // 实际调用 const it = obj[Symbol.iterator](); console.log(it.next()); // {value: 'a', done: false} console.log(it.next()); // {value: 'b', done: false} console.log(it.next()); // {value: 'c', done: false} console.log(it.next()); // {value: undefined, done: true} \"]},\"420\":{\"h\":\"array 的 length\",\"t\":[\"array 的 length 是自身属性，但不可枚举\"]},\"421\":{\"h\":\"总结\",\"t\":[\"只遍历可枚举的有 for in, Object.keys(), values(), entries()\",\"可遍历原型上的 for in\",\"遍历方法\",\"自身属性\",\"继承属性\",\"遍历基本属性\",\"遍历原型链\",\"遍历不可枚举属性\",\"属性类型\",\"for ... in\",\"自身\",\"继承\",\"是\",\"是\",\"基本属性\",\"Object.keys()\",\"自身\",\"是\",\"基本属性\",\"Object.getOwnPropertyNames()\",\"自身\",\"是\",\"是\",\"基本属性\",\"Object.getOwnPropertySymbols()\",\"自身\",\"是\",\"Symbol 属性\",\"Reflect.ownKeys()\",\"自身\",\"是\",\"是\",\"基本+Symbol\"]},\"422\":{\"h\":\"对象指针\",\"t\":[\"变量 => 栈（地址）=> 堆（值）\"]},\"423\":{\"h\":\"判断 Object 还是 Array\",\"t\":[\"// 判断array Array.isArray(arr); arr instanceof Array === true; arr.constructor === Array; Object.getPrototypeOf(arr).constructor === Array; Object.prototype.toString.call(arr) === '[object Array]'; Array.prototype.isPrototypeOf(arr) === true; // 判断object obj.constructor === Object; Object.prototype.toString.call(obj) === '[object Object]'; \"]},\"424\":{\"h\":\"两层循环跳出\",\"t\":[\"用 label 语句\",\"var i, j; loop1: for (i = 0; i < 3; i++) { //The first for statement is labeled \\\"loop1\\\" loop2: for (j = 0; j < 3; j++) { //The second for statement is labeled \\\"loop2\\\" if (i === 1 && j === 1) { continue loop1; } console.log('i = ' + i + ', j = ' + j); } } // \\\"i = 0, j = 0\\\" // \\\"i = 0, j = 1\\\" // \\\"i = 0, j = 2\\\" // \\\"i = 1, j = 0\\\" skips both \\\"i = 1, j = 1\\\" and \\\"i = 1, j = 2\\\" // \\\"i = 2, j = 0\\\" // \\\"i = 2, j = 1\\\" // \\\"i = 2, j = 2\\\" \"]},\"425\":{\"h\":\"模块化\"},\"426\":{\"h\":\"为什么模块化\",\"t\":[\"通过函数作用域，把变量和函数进行隔离\",\"项目多个文件好管理\",\"作用域隔离（变量可被访问的范围）\",\"全局变量污染（不同模块变量冲突）\",\"模块引入依赖顺序\",\"模块化需要解决 1. 变量管理， 2. 模块相互通信（module.exports）\"]},\"427\":{\"h\":\"commonjs\",\"t\":[\"特点：\",\"每个文件就是一个模块\",\"每个模块有单独作用域， 同 esm\",\"通过 module.exports 导出成员\",\"通过 require 载入模块\",\"同步加载 => 在启动时加载， 运行时直接使用， 加载并执行，依赖加载顺序\",\"加载过的模块缓存，循环依赖\",\"cjs 运行时才能确定依赖关系,requre 可以放在判断中。\",\"同步加载的意思是\",\"commonjs 执行， 碰到 require 就执行 require 的文件， 执行完毕后才回到主文件。 加载的本质就是拿到代码模块并执行， 输出返回值\"]},\"428\":{\"h\":\"循环引用\",\"t\":[\"有循环引用的话， 因为有 cache， 所以模块都只执行一次。\"]},\"429\":{\"h\":\"webpack 实现代码\",\"t\":[\"(function (modules) { const moduleCache = {}; function require(moduleId) { if (moduleCache[moduleId]) { return moduleCache[moduleId].exports; } const module = (moduleCache[moduleId] = { exports: {}, }); modules[moduleId](module, module.exports, require); // 这里执行可以用eval包裹 return module.exports; } require('./src/A.js'); })({ './src/A.js': function (module, exports, require) { const foo = require('./src/B.js'); const bar = 1; module.exports = { foo, bar, }; }, './src/B.js': function (module, exports, require) { const foo = 2; module.exports = { foo }; }, }); \"]},\"430\":{\"h\":\"ESModule\",\"t\":[\"浏览器需要异步加载。esm 依赖关系是明确的，可以在编译时确定\",\"特点：\",\"自动采用严格模式， 全局范围不能使用 this，\",\"每个 esmodule 运行在独立私有作用域中， 同 cjs\",\"import 在最顶层声明， 且不能导入动态的 路径， 动态导入用 import()\",\"导出有具名成员，和 default 成员，导出的为引用\",\"export {func1, func2} 不是导出对象， 而是语法 import { func1, func2 } 也不是解构 export default {func1, func2} 导出的是对象， default 后面的是值\"]},\"431\":{\"h\":\"html 中\",\"t\":[\"html 中使用 <script type=“module”>, <script nomodule>可以判断兼容\",\"每个 esmodule 通过 cors 请求，需要同源（没有 type=“module” 就没有同源限制）\",\"会延迟执行，相当于 defer\"]},\"432\":{\"h\":\"node 中\",\"t\":[\"文件为 mjs\",\"Package.json 中 type 设为“module”\",\"node —input-type=module\"]},\"433\":{\"h\":\"循环引用\",\"t\":[\"cannot access uninitialized variable.\",\"会记录模块的加载状态，加载还没有 export 的模块是 undefined，已经加载过的就不会再次加载\"]},\"434\":{\"h\":\"cjs esm 区别\",\"t\":[\"require 动态导入。esm 静态导入，且在 top-level，可以做 tree-shaking\",\"require 同步加载文件（node），esm 异步加载（浏览器网络请求）\",\"commonjs 导出一个新对象 module.exports, esm 导出具名或默认元素，为引用\",\"原生 esm from 后的路径不能省略， commonjs 可以， index.js/ .js.。 相对路径./ 也不能省略， 否则为第三方模块\"]},\"435\":{\"h\":\"编译原理\",\"t\":[\"编译就是处理字符串\",\"代码字符串 => 词法分析 => tokens => 语法分析 => ast => 语义分析 => analyzed Ast => 代码生成 => 新代码\",\"Tokens 包含标识符和属性， 例如 machtash Ast 表示代码结构和规则 analyzed ast 类型检查，作用域检查\",\"词 -> 句 -> 语\"]},\"436\":{\"h\":\"跨窗口传递\",\"t\":[\"实现 tab 之间通信\"]},\"437\":{\"h\":\"window.open() 打开的子窗口\",\"t\":[\"window.open 返回打开窗口的 window\",\"window.opener 获取打开的 window\",\"window.close() 关闭这个 window\",\"// 发送端,父 const childWin = window.open('/child', '_blank'); childWin.postMessage('msg from parent'); // 发送端,子 window.opener.postMessage('msg from child', '*'); // 接收端 window.addEventListener( 'message', function (e) { /** * 此 if 作为来源检查。 * 因为此监听可以接收任意来源的 postmessage * */ if (window.location.origin !== e.origin) { return; } console.log(e.data); //打印结果：我是父窗口传递的参数 }, false ); \"]},\"438\":{\"h\":\"iframe 打开的子窗口\",\"t\":[\"window.parent 返回父 window，iframe。没有父的话父就是自己window.parent === window\",\"window.frames 返回当前 window 的子 frames\",\"<iframe src=\\\"/child\\\" id=\\\"childIframe\\\" width=\\\"500px\\\" height=\\\"500px\\\"></iframe> \",\"// 父传子 const childIframe = document.getElementById('childIframe'); childIframe.contentWindow.postMessage('msg from parent', '*'); // or window.frames[0].postMessage('msg from parent', '*'); // 子传父 window.parent.postMessage('我是子窗口传递的参数', '*'); \"]},\"439\":{\"h\":\"没有关系的窗口\",\"t\":[\"实现 tab 之间通信\",\"BroadcastChannel，MessageChannel（需要通过 postmessage 将其中一个 port 先发送过去）\",\"借助第三方存储，localstorage，IndexedDB，cookie\",\"借助第三方中转，service worker，shared worker\"]},\"440\":{\"h\":\"Hooks\"},\"441\":{\"h\":\"更多 hooks 使用\",\"t\":[\"搞懂这 12 个 Hooks，保证让你玩转 React深入 React 专栏\"]},\"442\":{\"h\":\"hooks 运行原理\",\"t\":[\"调用 useState，会运行 ReactCurrentDispatcher.current 中的 useState，\",\"renderWithHooks：\",\"ReactCurrentDispatcher.current 是在 renderWithHooks 中，根据 current 判断是 mount 还是 update，被更新的。\",\"renderWithHooks 中执行 Component（函数组件），返回的结果就是 children，递归这个 children。\",\"current 是当前 fiber 树， commit 阶段用来生成 dom 树\",\"workInProgress 是复制于 current，在上面更新，之后再赋值回 current\"]},\"443\":{\"h\":\"mountState， mount 阶段的 useState\",\"t\":[\"mountWorkInProgressHook，将 hook 挂到 fiber 的 memoizedState 上，更新 workInProgressHook。并且 hook 是链表，有 next。\",\"hook 内部也有 memoizedState，存储 state， 或者 effect 对象（useEffect）\",\"hook 内部的 queue 用来保存待更新的队列或更新的函数，queue 内部有 dispatch， 也就是 useState 返回的第二个参数， 由 dispatchSetState() 返回。\",\"dispatchSetState：\",\"入餐包含自己写的状态\",\"生成一个 update 对象，用于记录更新的信息；\",\"判断如果是渲染阶段，update 放入等待更新的 pending\",\"如果不是，获取最新的 state 值，从而进行更新。scheduleUpdateOnFiber\",\"层级关系\",\"(=> 包含关系)\",\"fiber => memoizedState === hook 链表\",\"hook => queue 保存待更新的队列 => dispatch 更新的函数 => 由 dispatchSetState 生成, （内部生成 update，挂到 pending） hook => queue 保存待更新的队列 => pending 就是 update 对象， 由 dispatchAction 创建 hook => baseQueue 保存最新的更新队列；\",\"// hook 中的queue，可以理解为action， 遍历执行queue中的actions，更新hook中的baseState // react 中action为hook上的lastRenderedReducer const queue = (hook.queue = { pending: null, // 保存update对象 dispatch: null, // // 保存dispatchAction.bind()的值 lastRenderedReducer: reducer, // // 上一次render时使用的reducer lastRenderedState: (initialState: any), // // 上一次render时的state }); \",\"function mountState<S>( initialState: (() => S) | S ): [S, Dispatch<BasicStateAction<S>>] { // 创建并返回当前的hook const hook = mountWorkInProgressHook(); // ...赋值初始state // 创建queue const queue = (hook.queue = { pending: null, dispatch: null, lastRenderedReducer: basicStateReducer, lastRenderedState: (initialState: any), }); // ...创建dispatch return [hook.memoizedState, dispatch]; } \"]},\"444\":{\"h\":\"updateState， update 阶段\",\"t\":[\"updateState 调用 updateReducer，updateReducer 调用 updateWorkInProgressHook 获取新的 hook\",\"将待更新的队列 pendingQueue 合并到 baseQueue 上， 之后进行循环更新，最后进行一次合成更新，也就是批量更新，统一更换节点。\",\"markWorkInProgressReceivedUpdate 用于触发更新\",\"function updateState<S>( initialState: (() => S) | S, ): [S, Dispatch<BasicStateAction<S>>] { return updateReducer(basicStateReducer, (initialState: any)); } function basicStateReducer<S>(state: S, action: BasicStateAction<S>): S { return typeof action === 'function' ? action(state) : action; } function updateReducer<S, I, A>( reducer: (S, A) => S, initialArg: I, init?: (I) => S ): [S, Dispatch<A>] { // 获取当前hook const hook = updateWorkInProgressHook(); const queue = hook.queue; queue.lastRenderedReducer = reducer; // ...同update与updateQueue类似的更新逻辑 const dispatch: Dispatch<A> = (queue.dispatch: any); return [hook.memoizedState, dispatch]; } \"]},\"445\":{\"h\":\"总结\",\"t\":[\"mount 时可以确定是调用 ReactDOM.render 或相关初始化 API 产生的更新，只会执行一次。\",\"update 可能是在事件回调或副作用中触发的更新或者是 render 阶段触发的更新，为了避免组件无限循环更新，后者需要区别对待。\",\"React 用一个标记变量 didScheduleRenderPhaseUpdate 判断是否是 render 阶段触发的更新。\",\"调用 setState，就是 dispatchSetState\"]},\"446\":{\"h\":\"useRef 使用\"},\"447\":{\"h\":\"ref callback\",\"t\":[\"useRef(callback), 利用 ref callback 可以用一个 ref 管理多个 DOM。何时调用 ref callback：\",\"当 DOM 渲染到屏幕，调用参数为 dom node。当 DOM 移除，调用参数为 null\",\"ref callback 改变时会调用。每一次 render，ref callback 都是新的，会用 null 调用前一次 ref callback，用 DOM node 调用这一次 ref callback\"]},\"448\":{\"h\":\"forwardRef\",\"t\":[\"useRef 或 createRef 用来绑定在当前组件的 hostcomponent(宿主元素) 上，跨层级或者绑定到 react 组件用 fowardRef。\",\"Function components cannot be given refs\"]},\"449\":{\"h\":\"expose / useImperativeHandle()\",\"t\":[\"父组件调用子组件内部方法。父组件传递 ref 到子组件，子组件用 forwardRef 包裹，子组件利用useImperativeHandle暴露子组件内部方法。可以组合多种操作，dom 操作。\",\"用于子组件封装逻辑，父组件直接调用，modal，drawer 组件。\",\"const Parent = () => { const ref = useRef(); return ( <> <Child ref={ref} /> </> ); }; export const Child = forwardRef((props, ref) => { useImperativeHandle( ref, () => { // 返回一个对象作为暴露的ref return { childMethod1 }; }, [deps] // 更新ref对象的依赖 ); const childMethod1 = () => {}; }); \"]},\"450\":{\"h\":\"context 使用\",\"t\":[\"本质创建一个全局的闭包\",\"const ThemeContext = React.createContext('initial'); const Parent = () => { return ( <ThemeContext.provider value=\\\"newValue\\\"> <Child1 /> <Child2 /> <ChildComp /> </ThemeContext.provider> ); }; // legacy const Child1 = () => { return ( <ThemeContext.Consumer> {(value) => <div>{value}</div>} </ThemeContext.Consumer> ); }; const Child2 = () => { const theme = useContext(ThemeContext); return <div>{theme}</div>; }; // legacy class ChildComp extends React.Component { // 需要定义到静态属性上 static contextType = ThemeContext; render() { return <div>{this.context}</div>; } } \"]},\"451\":{\"h\":\"useEffect\",\"t\":[\"Effect 是由渲染引起的副作用，与外部系统联系的，网络，web api。\",\"effect 在 commit 之后执行。\",\"明确 effect 的依赖状态\",\"清理 effect\"]},\"452\":{\"h\":\"useMemo 使用\",\"t\":[\"useMemo 缓存回调函数的返回值\",\"父组件直接隔离子组件渲染\"]},\"453\":{\"h\":\"useCallback\",\"t\":[\"缓存回调函数\"]},\"454\":{\"h\":\"HOC\"},\"455\":{\"h\":\"属性代理\",\"t\":[\"返回一个新组件，新组件渲染传入的组件。\"]},\"456\":{\"h\":\"反向继承\",\"t\":[\"高阶组件返回一个组件继承入参的组件。可修改组件的声明周期。\",\"const HOC = (Component) => { return class A extends Component { ComponentDidMount (){ ... } render() { return super.render(); } }; }; \"]},\"457\":{\"h\":\"利用 suspence 的异步变同步\",\"t\":[\"suspence 内的子组件 throw err 会渲染 fallback 的内容。\",\"suspence 子组件 throw 一个 promise，promise 敲定会重新渲染子组件。\",\"wrap 可以包装一个 promise，返回 read 函数\",\"const wrap = (promise) => { let res; let status = 'pending'; const suspenser = promise.then( (value) => { res = value; status = 'fullfilled'; }, (err) => { res = err; status = 'rejected'; } ); return { read() { switch (status) { case 'pending': throw suspenser; case 'fullfilled': return res; case 'rejected': throw res; } }, }; }; // 用suspence 包裹 <Suspense fallback={<div>loading...</div>}> <Child wrappedApi={wrap(getData())} /> </Suspense>; // Child 内可以像同步一样使用 export const Child = ({ wrappedApi }) => { const list = wrappedApi.read(); return ( <ul> {list.map((item) => ( <li key={item}>{item}</li> ))} </ul> ); }; \"]},\"458\":{\"h\":\"suspence 模拟实现\",\"t\":[\"利用 componentDidCatch 和 getDerivedStateFromError 模拟 suspence\",\"export class Suspence1 extends React.Component { state = { loading: false, }; componentDidCatch(error, info) { if (error.suspenser) { // 这里给 promise 添加 then，强制更新组件 error.suspenser.then(() => { this.setState({ loading: false, }); }); } } static getDerivedStateFromError(error) { // Update state so the next render will show the fallback UI. return { loading: true }; } render() { return this.state.loading ? this.props.fallback : this.props.children; } } \"]},\"459\":{\"h\":\"React\",\"t\":[\"hooks\",\"react-reconciler\",\"react-router\",\"react原理\",\"redux\",\"为什么选择函数组件\",\"生命周期\",\"运行时代码优化\",\"闭包陷阱\"]},\"460\":{\"h\":\"自定义 react renderer\",\"t\":[\"在 completeWork，commitWork 阶段，可以自定义 createInstance 等 hostConfig。利用 react-reconciler 库\",\"Hello World Custom React Renderer\",\"reactReconciler(hostConfig), hostConfig 对象包含以下方法\",\"complete 阶段\",\"在 mount/update 的情况下，调用 createInstance 生成宿主对象\",\"在 mount/update 的情况下，调用 createTextInstance 生成文本节点\",\"complete 阶段完成时：\",\"在 mount 的情况下，调用 finalizeInitialChildren 处理 props 的属性;\",\"在 update 的情况下，调用 prepareUpdate 处理更新的 props 属性，生成 effectList;\",\"Mutation 阶段\",\"Placement:\",\"如果是 hostRoot(根节点)，会调用appendChildToContainer\",\"如果是 hostComponent(宿主节点)，会调用appendChild\",\"Update:\",\"如果是 element 节点 commitUpdate\",\"如果是文本节点commitTextUpdate\",\"Deletion:\",\"如果是 hostRoot(根节点)，会调用removeChildFromContainer\",\"如果是 hostComponent(宿主节点)，会调用removeChild\"]},\"461\":{\"h\":\"vue 中\",\"t\":[\"vue 中使用@vue/runtime-core 中的 createRenderer 方法\\nvue3 自定义渲染-实现 canvasA Custom Renderer for Vue 3\"]},\"462\":{\"h\":\"react router\"},\"463\":{\"h\":\"用法\",\"t\":[\"Routes 一组路由\",\"Route 基础路由\",\"Link\",\"Outlet\",\"useRoutes，可以传入 json，返回整个 routes 组件\",\"useParams， 获取/post/:id变量 \",\"const {id} = useParams();\",\"useNavigate，获取跳转方法 \",\"const nav = useNavigate(); nav(\\\"/post/11\\\")\",\"useLocation，获取上下文信息 \",\"const location = useLocation()\",\"import { BrowserRouter, Route, Routes } from 'react-router-dom'; const App = () => { return ( <BrowserRouter> <Routes> <Route path=\\\"/\\\" element={<HomeLayout />}> <Route path=\\\"/list\\\" element={<List />} /> <Route path=\\\"/about\\\" element={<About />} /> </Route> </Routes> </BrowserRouter> ); }; const HomeLayout = () => { return ( <div> <header> <Link to=\\\"/\\\">home</Link> <Link to=\\\"/list\\\">List</Link> <Link to=\\\"/about\\\">About</Link> </header> <Outlet /> </div> ); }; \"]},\"464\":{\"h\":\"懒加载\",\"t\":[\"利用 react 的 suspence 和 lazy\",\"import {lazy, Suspence} from 'react' const LazyComp = lazy(() => import(\\\"./lazyComp\\\")) <Route path=\\\"/lazy\\\" element={ <Suspence fallback={<div>loading</div>}> <LazyComp/> </Suspence> }/> \"]},\"465\":{\"h\":\"原理\",\"t\":[\"import { Children, createContext, useContext, useRef, useMemo, useLayoutEffect, useState, } from 'react'; import { createBrowserHistory } from 'history'; const LocationContext = createContext({}); const NavigationContext = createContext({}); export const Link = ({ children, to }) => { const nav = useNavigate(); const clickHandler = (e) => { e.preventDefault(); nav(to); }; return ( <a href={to} onClick={clickHandler}> {children} </a> ); }; export const BrowserRouter = ({ children }) => { // 1. 创建history // 2. 监听history变化，利用useLayoutEffect // 派发更新，渲染整个router树 const historyRef = useRef(); if (!historyRef.current) { historyRef.current = createBrowserHistory(); } const history = historyRef.current; const [state, setState] = useState({ action: history.action, location: history.location, }); // useLayoutEffect 页面渲染完立即马上触发， // 给history添加监听，如果history改变，就setState，渲染整个router树 useLayoutEffect(() => history.listen(setState), [history]); return ( <Router children={children} location={state.location} navigator={history} navigatorType={state.action} /> ); }; const Router = ({ children, location: locationProp, navigator }) => { // 添加provider const navigationContext = useMemo(() => navigator, [navigator]); const locationContext = useMemo(() => locationProp, [locationProp]); return ( <NavigationContext.Provider value={navigationContext}> <LocationContext.Provider value={locationContext}> {children} </LocationContext.Provider> </NavigationContext.Provider> ); }; const useLocation = () => { // 利用context 获取location return useContext(LocationContext); }; const useNavigate = () => { return useContext(NavigationContext).push; }; const useRoutes = (routes) => { // 根据当前路径，匹配routes，返回element // TODO: 考虑children const { pathname } = useLocation(); for (let i = 0; i < routes.length; i++) { const { path, element } = routes[i]; if (pathname.match(new RegExp(`^${path}`))) { return element; } } return null; }; const createRoutesFromChildren = (children) => { const routes = []; Children.forEach(children, (child) => { const { path, element, children } = child.props; routes.push({ path, element, children: children ? createRoutesFromChildren(children) : undefined, }); }); return routes; }; export const Routes = ({ children }) => { // 1. children 渲染为json // 2. useRoutes 渲染为最终的组件 return useRoutes(createRoutesFromChildren(children)); }; export const Route = () => {}; \"]},\"466\":{\"h\":\"React 原理\"},\"467\":{\"h\":\"react 相关概念\"},\"468\":{\"h\":\"异步可中断 / fiber\",\"t\":[\"react 没有收集依赖，所以更新只能从头遍历一边，找不同。fiber 用来实现异步可中断更新\",\"v16 之前就是 stack reconciler，从根节点开始递归，同步，但是慢，调用栈长\",\"v16.9 ～ v17.0.2 是 fiber reconciler，遍历时在每个节点做异步可中断更新。 v17.0.2 有 fiber 结构，但是默认 legacy 模式 不会中断更新。concurrent 模式可以高优先级打断低优先级执行\",\"v18 concurrent 模式\"]},\"469\":{\"h\":\"双缓存\",\"t\":[\"有 current，和 workInProgress， 在前一帧计算出下一帧要渲染的内容，下一帧再渲染。这种在内存中构建并直接替换的技术叫做双缓存.\"]},\"470\":{\"h\":\"react 中数据结构：vdom/fiber/真实 dom\"},\"471\":{\"h\":\"vdom / element\",\"t\":[\"通过 babel @babel/preset-react 解析 jsx，生成createElement, jsx, createElement 执行生成 vdom。\",\"vdom 是嵌套的结构\",\"const VDOM = { type: 'div', props: { className: 'app', children: [{}, {}], }, }; \"]},\"472\":{\"h\":\"fiber 链表形式\",\"t\":[\"fiber 就是数据结构，包含了 dom，链表，effectList 相关属性\",\"react 中有两个 fiber， current，和 workInProgress，用来实现双缓存\",\"每次更新用 vdom 和 current fiber 比较生成 wip fiber。\",\"const FiberNode = { // 静态数据 tag, // 组件类型 key, elementType, // 函数组件用memo包裹 type, // dom 元素类型 stateNode, // 真实dom // 与其他fiber 关系, 链表 return, // 父级 child, sibling, // 右边第一个兄弟 index, // 动态数据 // 状态类 pendingProps, memoizedProps, updateQueue, memoizedState, dependencies, mode, // 副作用 Effect effectTag, // 搜集副作用 Effect nextEffect, firstEffect, lastEffect, // 调度优先级相关 lanes, childLanes, // 更新要对应的fiber alternate, // 双缓存 } \"]},\"473\":{\"h\":\"react 包\",\"t\":[\"react 提供 vdom api，提供用户相关 api，（useState）\",\"react-reconciler \",\"beginWork\",\"completeWork\",\"commitWork\",\"react-dom dom 相关\"]},\"474\":{\"h\":\"渲染流程\"},\"475\":{\"h\":\"render 开始\",\"t\":[\"render，接收 container，挂载位置的真实 dom\",\"legacyRenderSubtreeIntoContainer\",\"container._reactRootContainer.\",\"判断是否有 root， 没有创建，legacyCreateRootFromDomContainer， 最后new FiberRootNode()\",\"最后形成这种结构\",\"// container._reactRootContainer._internalRoot.current // (挂载的dom)-> (root) -> (FiberRoot) -> (RootFiber) function createFiberRoot(containerInfo, tag) { const root = new FiberRootNode(containerInfo, tag); // root 中 root.containerInfo 就是挂载的dom // root.containerInfo.__reactContainer === root.current root.current = createHostRootFiber(tag); return root; } \",\"scheduleUpdateOnFiber -> performSyncWorkOnRoot -> workLoopSync -> performUnitOfWork\",\"performSyncWorkOnRoot -> commitWork\",\"function workLoopSync() { while (workInProgress !== null) { performUnitOfWork(workInProgress); } } function workLoopConcurrent() { while (workInProgress !== null && !shouldYield) { // shouldYield 可中断，不执行下一次beginWork performUnitOfWork(workInProgress); } } function performUnitOfWork(unitOfWork) { // current↓ let next = beginWork(unitOfWork.alternate, unitOfWork); if (next === null) { // 如果没有产生新的work，就完成当前work completeUnitOfWork(unitOfWork); } else { workInProgress = next; } } \"]},\"476\":{\"h\":\"beginWork\",\"t\":[\"使用 v-dom 和 current fiber 对比，生成新的 workInProgressFiber， 向下按照 child 指针逐层向下调和\",\"期间会执行函数组件，类组件（声明周期），diff 子节点，\",\"标记上不同的 effectTag 也就是 flags 属性，增删改\",\"function beginWork(current, workInProgress) { // 根据 current === null 判断是mount 还是 update switch (workInProgress.tag) { case IndeterminateComponent: case FunctionComponent: case ClassComponent: case HostComponent: } } \"]},\"477\":{\"h\":\"completeWork\",\"t\":[\"向上归并的过程，有兄弟节点就返回兄弟节点\",\"根据 effectTag 创建 effectList\",\"创建真实 dom，createInstance， 放到 fiber 中\"]},\"478\":{\"h\":\"commitWork\",\"t\":[\"render 结束后，在performSyncWorkOnRoot中调用commitWork, 最后进到commitRootImpl.bind()\",\"flushPassiveEffects() 用来处理还没执行完的 useEffect，上一次销毁函数，这一次回调函数\",\"commitWork 也有三个阶段\",\"invokeGuardedCallback(null, commitBeforeMutationEffects); // 更新前 // 更新前调用 getSnapshotBeforeUpdate getSnapshotBeforeUpdate(); // 之后开始更新，mutation阶段，处理placement， deletion，update invokeGuardedCallback(null, commitMutationEffects); // 更新时 // 更新完切换双缓存 root.current = finishedWork; // 切换双缓存 // 更新后 声明周期componentDidMount,componentDidUpdate, setState的callback在这里执行 // useEffect push到一个队列里异步执行，调用useLayoutEffect， 同步执行 invokeGuardedCallback(null, commitLayoutEffects); // 更新后 \"]},\"479\":{\"h\":\"可中断更新\",\"t\":[\"如何调用下一次任务， 而且不阻塞渲染？\",\"requestIdleCallback，时间不确定，兼容性差\",\"setTimeout，嵌套的话有 4ms 延迟\",\"promise，不需要为任务，需要宏任务，需要在渲染后执行\",\"requestAnimationFrame 也在渲染之前\",\"MessageChannel 可以\"]},\"480\":{\"h\":\"模拟实现\",\"t\":[\"有 tash 就用 MessageChannel，预定(startTransition)下一个宏任务(flush)(类似于 vue 的 $nextTick)\",\"flush 循环执行 task，碰到 shouldYield 就停止循环，再预定下一个宏任务(startTransition(flush))\",\"const taskQueue = []; const transitionQueue = []; let deadline; const threshold = 5; // 5ms 超时 function schedule(task) { taskQueue.push(task); // 预定一个调度 startTransition(flush); } function startTransition(flush) { transitionQueue.push(flush); postMessage(); // postMessage 利用MessageChannel预定下一个宏任务 } const postMessage = (() => { // IIFE const { port1, port2 } = new MessageChannel(); port1.onmessage = () => { // 下一个宏任务执行 需要执行flush, [flush] transitionQueue.splice(0, 1).forEach((fn) => fn()); }; // 返回开始计时的函数, 类似于vue 的 $nextTick return () => port2.postMessage(); })(); function shouldYield() { // 如果超时， 或者用isInputPending模拟更高优先级任务，就打断 return performance.now() >= deadline || navigator.scheduling.isInputPending(); } function flush() { // 类似于 workLoopConcurrent // 更新超时时间，shouldYield 可以用来比较 deadline = performance.now() + threshold; let workInProgress = taskQueue.shift(); // task 类似于 workInProgress while (workInProgress && !shouldYield()) { workInProgress = performUnitOfWork(workInProgress); } // 执行到这里有两种情况 // 1. workInProgress 没有了，完全执行完了 // 2. 被shouldYield打断了 // 如果被打断了，就再预定下一个定时 if (workInProgress) { // 下一次flush执行还能找到当前的task taskQueue.unshift(workInProgress); // 开启一次调度 startTransition(flush); } } function performUnitOfWork(fn) { return fn(); } \"]},\"481\":{\"h\":\"Redux\",\"t\":[\"redux 知识点梳理\"]},\"482\":{\"h\":\"状态管理\",\"t\":[\"软件主要是管理数据，明确数据的声明周期，作用范围，根据这些决定数据存在那里\",\"react 中数据需要多个组件间共享，存在 js 运行时。全局变量，闭包都可以实现。\",\"状态管理需要实现的功能：\",\"组件之外，可以在全局共享数据 \",\"闭包\",\"全局变量\",\"数据可以被修改的方法，并且能被感知 \",\"需要监听方法：拦截器 proxy，观察者模式\",\"需要按照一定规则修改，action\",\"immutable 没有修改状态，而是新生成了一个状态\",\"修改状态触发 DOM 更新渲染 \",\"forceUpdate\",\"setState\"]},\"483\":{\"h\":\"compose\",\"t\":[\"function compose(...funcs) { if (funcs.length === 0) { return (arg) => arg; } if (funcs.length === 1) { return funcs[0]; } return funcs.reduce( (a, b) => (...args) => a(b(...args)) ); } const log = compose(console1, console2, console3)(console.log); function console1(nextConsole) { return (message) => { console.log('console1开始'); nextConsole(message); console.log('console1结束'); }; } function console2(nextConsole) { return (message) => { console.log('console2开始'); nextConsole(message); console.log('console2结束'); }; } function console3(nextConsole) { return (message) => { console.log('console3开始'); nextConsole(message); console.log('console3结束'); }; } log('我是Log'); /* console1开始 console2开始 console3开始 我是Log console3结束 console2结束 console1结束 */ \",\"function console1(nextConsole) { return (message) => { console.log(\\\"console1开始\\\"); ((message) => { // console2 console.log(\\\"console2开始\\\"); （(message) => { // console3 console.log(\\\"console3开始\\\"); nextConsole(message); console.log(\\\"console3结束\\\"); })(message) console.log(\\\"console2结束\\\"); })(message); console.log(\\\"console1结束\\\"); }; } console1(console.log) // 最后产生的函数样子 const final = (message) => { console.log(\\\"console1开始\\\"); ((message) => { // console2 console.log(\\\"console2开始\\\"); （(message) => { // console3 console.log(\\\"console3开始\\\"); console.log(message); // console1 传入的函数 console.log(\\\"console3结束\\\"); })(message) console.log(\\\"console2结束\\\"); })(message); console.log(\\\"console1结束\\\"); }; \",\"Array.reduce()\",\"reduce 没有第二个参数， 默认就是 funcs 里的第一个元素作为第二个参数， 然后从第二次循环开始 i == 1\"]},\"484\":{\"h\":\"redux\"},\"485\":{\"h\":\"dispatch\",\"t\":[\"接收 action，内调用 reducer，reducer 修改 state\",\"调用所有的 listener 更新订阅的方法\"]},\"486\":{\"h\":\"store\",\"t\":[\"store 中提供的方法：subscribe, dispatch, getState\",\"createStore 接收 reducer，返回 store。\",\"dispatch 接收 action，调用 reducer，reducer 修改 state\",\"getState 返回 state\",\"subscribe 给 observer 中 push 方法，观察者模式\"]},\"487\":{\"h\":\"更新 middleware\",\"t\":[\"拦截的就是 dispatch 提交到 reducer 的这个过程，增强 dispatch 的功能；\",\"applyMiddleware 接收 store 和 middleware 队列，调用每个 middleware，每个 middleware 接收 store，返回修改过的 dispatch。最终更新 store 中的 dispatch\",\"createStore 中传入 heightener （applyMiddleware），高阶函数，返回增强的 createStore，并调用。\",\"const logger = (store) => (next) => (action) => { console.log('log'); return next(action); }; const applyMiddleware = (...middlewares) => (createStore) => (reducer) => { // 1. 创建原始store const store = createStore(reducer); let { getState, dispatch } = store; // 2. 构建一个store，用来执行每一个middleware const params = { getState, dispatch: (action) => dispatch(action), }; const middlewareArr = middlewares.map((middle) => middle(params)); // [(next) => (action) => {}, ...] // 3. 用compose将middleware串起来，传入原始的dispatch，生成新的dispatch disptach = compose(middlewareArr)(dispatch); // 增强后的dispatch，dispatch 传递给参数next return { ...store, dispatch }; }; \"]},\"488\":{\"h\":\"subscribe\",\"t\":[\"被观察者提供 addObserver 以及 nodify 方法。观察者提供 update 方法\",\"// 观察者 const Obsercer = (fn) => { this.update = fn; }; // 被观察者 class Subject { constructor() { this.observers = []; } addObserver(observer) { this.observers.push(observer); } notify() { this.observers.forEach((observer) => observer.update()); } } \",\"dispatch 调用完 reducer 之后执行 nofify\",\"subscribe 相当于 addObserver\"]},\"489\":{\"h\":\"combineReducer\",\"t\":[\"合并 reducer，最后还是返回新的 reducer\",\"const combineReducer = (reducers) => { return (state, action) => { const nextState = {}; Object.keys.forEach((key) => { nextState[key] = reducers[key](state[key], action); }); return nextState; }; }; \"]},\"490\":{\"h\":\"react-redux\",\"t\":[\"包括两部分 Provider, connect\",\"provider：\",\"provider 是一个 react component，利用 react 中的 context 传递 store 给所有子组件\",\"connect：\",\"一个 HOC\",\"state, dispatch 加载为 props。connect 接收mapStateToProps,mapDispatchToProps 方法。将 state 和 dispatch（action）挂载在子组件的 props 上\",\"订阅更新组件。componentDidMount 中调用 store.subscribe 传入重新渲染函数。更新函数用于强制更新 react 组件。\",\"mapStateToProps,mapDispatchToProps 把 state 和 dispatch 挂到组件的 prop 上\",\"const connect = (mapStateToProps,mapDispatchToProps) => (Component) => { return class Connect extends React.components { static contextType = ReduxContext; componentDidMount(){ this.context.store.subscribe(this.storeHandler.bind(this)); } storeHandler(){ this.forceUpdate(); // 收到store 更新就更新组件 } render (){ return <Component {...props} {...mapStateToProps(this.context.store.getState())} {mapDispatchToProps(this.context.store.dispatch)} /> } } } \"]},\"491\":{\"h\":\"hooks\",\"t\":[\"const count = useSeelctor((state) => state.value); const dispatch = useDispatch(); \"]},\"492\":{\"h\":\"redux-thunk\",\"t\":[\"处理异步操作，action 可以为函数。对 actionCreator 进行操作;\",\"action 函数接收 dispatch, getState, 可以 fetch 之后异步调用 dispatch，或者返回新的 action\",\"return action === 'function' ? action(dispatch, getState, extraArgument) : next(action); \"]},\"493\":{\"h\":\"redux-saga\",\"t\":[\"把所有的异步请求放在了 saga.js（mySaga）文件中，文件中通过使用 redux-sage 的 call、put、takeEvery、takeLatest 方法方法封装成一个异步的一个文件\",\"通过 generator 实现\",\"当组件中通过 dispatch(action)提交 action 后，会在 saga.js 文件中的 generater (本质就是一个状态机，通过。next() 调用) 中监测到，通过 redux-saga 的 createSagaMiddleware().run(mySaga: generater)\",\"const run = (generator) => { const it = generator(); // 返回generator 迭代器 const next = (action) => { let {value, done}it.next(action); if(!done){ switch(value.type){ case 'TAKE': events.once(effect.actionType, next); // 使用events注册事件，若是take到对应的actionType来到执行next继续往下 break; case 'CALL': let {fn, args, context} = effect.payload; // 这里得到的是从delay函数中解析出的payload // 其中得到的fn函数返回的是一个promise fn.apply(context, args).then(next); break; case 'PUT': dispatch(effect.action); // put就直接派发action next(); // 递归，继续往下进行操作搜集 break; case 'FORK': run(effect.task); next(); // 这里为了不阻塞进程的运行，立即调用next() break; default: break; } } }; next(); // 调用第一次next }; \",\"generate 方法\",\"next(action)\",\"action 将作为 yield 的结果传入。\",\"return()\",\"结束生成器并允许生成器与 try...finally 块结合使用时执行任何清理任务\",\"好像一个 return 语句被插入到生成器主体的当前暂停位置\"]},\"494\":{\"h\":\"为什么选择函数组件\"},\"495\":{\"h\":\"类和函数组件\",\"t\":[\"React 中的类通常被称为“类组件”。它们传统上用于定义组件并管理其状态和生命周期。类组件扩展了 React.Component 类，并且需要更多样板代码。\",\"函数组件是定义 React 组件的一种更简洁、更现代的方式。它们也被称为“功能组件”。函数组件本质上是返回 JSX 元素的 JavaScript 函数。\"]},\"496\":{\"h\":\"函数组件优势\",\"t\":[\"代码少，使用函数式编程，没有this\",\"hooks 性能好，简化生命周期\",\"使用闭包，变量是当前函数内部的\",\"先点 button，再修改 props\",\"function ComFn(props) { console.log('函数式组件的函数被调用了'); //这个是闭包： // 每调用一次父函数（ComFn），都会重新定义一个新的子函数。新的函数中保存着父函数新的形参 const showMessage = () => { console.log('函数式组件: ' + props.name); }; //这个是闭包： //每调用一次父函数（ComFn），都会重新定义一个新的子函数。新的函数中保存着父函数新的形参 const handleClick = () => { setTimeout(showMessage, 3000); }; return ( <div style={{ backgroundColor: 'skyblue' }}> <h5>我是函数式组件</h5> <p>name：{props.name}</p> {/*先点击这个按钮，调用，第一次定义的 showMessage和handleClick*/} <input type=\\\"button\\\" value=\\\"调用带着定时器的函数\\\" onClick={handleClick} /> </div> ); } \"]},\"497\":{\"h\":\"函数组件问题\",\"t\":[\"使用闭包，有陷阱\"]},\"498\":{\"h\":\"总结\",\"t\":[\"界面应当是数据的不同形式的简单投影。相同的输入应该产生相同的输出。\",\"而函数式组件的写法，使用闭包的特性，显然符合这一理念：每个闭包里保存在父函数的当前形参（props）和局部变量。\",\"函数组件主要是函数式编程，无副作用，并且在引用的时候透明的特点\",\"而类组件里，由于，每次读取数据，要根据 this 指针去读取，那必然不会读取到属于自己当前状态的值。而是更新后的最新的值。\",\"类的组件主要是面向对象编程，是建立在继承之上，它的生命周期等核心概念的特点\"]},\"499\":{\"h\":\"函数式编程\",\"t\":[\"pros \",\"无状态\",\"纯函数\",\"利于组合\",\"cons \",\"闭包，内存泄漏，不利于垃圾回收\",\"递归，迭代容易出错\"]},\"500\":{\"h\":\"react 生命周期\"},\"501\":{\"h\":\"请求瀑布问题\",\"t\":[\"App 组件渲染后才开始请求数据，时机之后，导致 child 依赖 data 也滞后。\",\"function App() { const [data, update] = useState(null); useEffect(() => { fetch('http://...').then((res) => update(res.json())); }, []); return <Child data={data} />; } \"]},\"502\":{\"h\":\"解决：将请求数据的逻辑收敛到路由方案中\",\"t\":[\"数据请求方案（解决数据流向问题）\",\"路由方案（解决数据请求时机问题）\",\"打包方案（解决懒加载的实现问题）\"]},\"503\":{\"h\":\"类组件声明周期\"},\"504\":{\"h\":\"初始化阶段\"},\"505\":{\"h\":\"constructor\",\"t\":[\"配置 state 等属性，截取路由参数，防抖、截流方法\"]},\"506\":{\"h\":\"static getDerivedStateFromProps 静态函数\",\"t\":[\"传入 props 和 state， 返回值将和之前的 state 进行合并，作为新的 state， 用于 props 更新 state。\",\"static getDerivedStateFromProps(props, state) { return {...state} }\",\"getDerivedStateFromProps 用 static 修饰，不允许使用 this。不允许比较this.props, 而是nextProps与prevState中的值\"]},\"507\":{\"h\":\"UNSAFE_componentWillMount\",\"t\":[\"在异步渲染下容易重复调用, 如果有 getDerivedStateFromProps 或 getSnapshotBeforeUpdate 就不执行。\"]},\"508\":{\"h\":\"render\",\"t\":[\"render 方法不能有副作用和 setState。\"]},\"509\":{\"h\":\"componentDidMount\"},\"510\":{\"h\":\"更新阶段\"},\"511\":{\"h\":\"UNSAFE_componentWillReceiveProps\",\"t\":[\"根据传入的 props 的改变来决定 state 是否改变。如果有 getDerivedStateFromProps 则不会执行。\"]},\"512\":{\"h\":\"getDerivedStateFromProps\"},\"513\":{\"h\":\"shouldComponentUpdate\",\"t\":[\"返回一个 bool，来决定组件要不要更新，可做性能优化。\"]},\"514\":{\"h\":\"UNSAFE_componentWillUpdate\",\"t\":[\"可以获取组件重新渲染之前的状态，渲染是指更新 vdom，而不是更新 dom。\",\"异步渲染模式下，dom 元素状态会不一致，对 dom 操作不安全\"]},\"515\":{\"h\":\"render\",\"t\":[\"执行 jsx， createElement，创建 vnode\"]},\"516\":{\"h\":\"getSnapshotBeforeUpdate\",\"t\":[\"更新 dom 之前调用，比如记录更新前的 scrolltop，返回值传递给 componentDidUpdate\"]},\"517\":{\"h\":\"componentDidUpdate\",\"t\":[\"不能调用 setState\"]},\"518\":{\"h\":\"销毁阶段\"},\"519\":{\"h\":\"componentWillUnmount\"},\"520\":{\"h\":\"其他\"},\"521\":{\"h\":\"componentDidCatch\",\"t\":[\"捕获错误，配合 static getDerivedStateFromError， 在渲染子组件的过程中，页面更新之前\"]},\"522\":{\"h\":\"react 16 之前的生命周期\",\"t\":[\"TIP\",\"有副作用时或与外部同步，需要同时实现componentDidMount, componentDidUpdate, componentWillUnmount.\"]},\"523\":{\"h\":\"react 16 之后的生命周期\",\"t\":[\"react 16 去除UNSAFE_componentWillMount, UNSAFE_componentWillReceiveProps, UNSAFE_componentWillUpdate。不安全的原因，render 阶段改为异步的渲染，可以被暂停重启，会导致这几个生命周期重复调用。\"]},\"524\":{\"h\":\"函数组件“声明周期”\",\"t\":[\"useEffect(() => { console.log('componentWillReceiveProps'); }, [props]); useEffect(() => { console.log('componentDidMount'); return () => { console.log('componentWillUnmount'); }; }, []); useEffect(() => { // 没有deps 什么时候都更新 console.log('componentDidUpdate'); return () => { console.log('componentWillUpdate'); }; }); \",\"useEffect 实际上用来处理副作用。\"]},\"525\":{\"h\":\"运行时代码优化\"},\"526\":{\"h\":\"渲染控制\"},\"527\":{\"h\":\"父组件直接隔离子组件渲染\",\"t\":[\"从外到内渲染直接阻断\"]},\"528\":{\"h\":\"类组件\"},\"529\":{\"h\":\"手动在 render 中判断 props 的改变，是否需要更新子组件\",\"t\":[\"需要一个判断函数controlChildRender() 在 rander 时执行, 配合cloneElement()\",\"class Parent extends React.Component { constructor(props) { super(props); this.state = { num: 0 }; this.childComp = <Child num={this.state.num} />; } controlChildRender = () => { const { props } = this.childComp; if (props.num !== this.state.num) { // props 不相同就更新child component this.childComp = React.cloneElement(this.childComp, { num: this.state.num, }); } return this.childComp; }; render() { return <div>{controlChildRender()}</div>; } } const Child = () => {}; \"]},\"530\":{\"h\":\"利用 React.memo()\",\"t\":[\"// 直接用memo包裹子组件 const Child = React.memo(({ num }) => <div>{num}</div>); // 或者设置memo在parent中, child 不用memo class Parent extends React.Component { constructor() { // this.state = ... } ChildComp = React.memo(Child); render() { return ( <div> <this.ChildComp num={this.state.num} /> </div> ); } } \"]},\"531\":{\"h\":\"函数组件\"},\"532\":{\"h\":\"useMemo()\",\"t\":[\"const Parent = () => { const [num, setNum] = useState(0); const MemoChild = useMemo(() => <Child num={num} />, [num]); return ( <div> <MemoChild /> </div> ); }; \"]},\"533\":{\"h\":\"组件本身控制要不要额外渲染\",\"t\":[\"函数组件内部决定是否渲染\",\"声明周期，shouldComponentUpdate\",\"pureComponent 做浅比较\"]},\"534\":{\"h\":\"pureComponent\",\"t\":[\"普通组件只要调用 setState 就会重新渲染， pure 组件会浅比较 props，state 来决定是否渲染\",\"class PureComp extends React.PureComponent { constructor(props) { super(props); this.state = { obj: { num: 0 }, }; } clickHandler = () => { // pure 做浅比较，obj还是同一个引用，不会渲染 // 如果是普通组件，就会触发渲染 this.setState({ obj: this.state.obj, }); }; } \"]},\"535\":{\"h\":\"闭包陷阱\",\"t\":[\"类似于\",\"for (let i = 0; i < 5; i++) { setTimeout(() => { console.log(i); }, 0); } // setTimeout 每次执行引用不同的i实例 \"]},\"536\":{\"h\":\"useState()\",\"t\":[\"function Index() { const [count, setCount] = useState(0); function add(){ setCount( count + 1 ); setCount((count) => count + 1); setCount( count + 1 ); console.log(count); // 0 } return ( <div> <span>{count}</span> <button @click=()=>{ add() }> + </button> </div> ); } \"]},\"537\":{\"h\":\"useEffect()\",\"t\":[\"function Index() { const [count, setCount] = useState(0); useEffect(() => { setInterval(() => { console.log(`Count: ${count}`); }, 1000); }, []); return ( <div> <span>{count}</span> <button onClick={() => setCount(count + 1)}> + </button> </div> ); } \",\"用useRef() 缓存每一次 count 更新\",\"function Index() { const [count, setCount] = useState(0); const countRef = useRef(); countRef.current = count; useEffect(() => { setInterval(() => { console.log(`Count: ${countRef.current}`); }, 1000); }, []); return ( <div> <span>{count}</span> <button onClick={() => setCount(count + 1)}> + </button> </div> ); } \"]},\"538\":{\"h\":\"diff\"},\"539\":{\"h\":\"Vue\",\"t\":[\"diff\",\"keepAlive\",\"nextTick\",\"vue-router\",\"响应式\",\"整体执行流程\"]},\"540\":{\"h\":\"KeepAlive 组件\",\"t\":[\"实际就是组件内部有一个 cache，所有的 vm 实例缓存在里面。render 函数负责根据传入的 vnode 根据 include，exclude 渲染。\",\"max 属性用 LRU 维护总体缓存个数\"]},\"541\":{\"h\":\"$nextTick\",\"t\":[\"let timerFunc = null; // 确定timerFunc，触发异步的方法。 // 异步降级，Promise.then -> MutationObserver -> setImmediate -> setTimeout if (typeof Promise !== 'undefiend') { timerFunc = () => { new Promise().then(flushCallbacks); }; } else if (typeof MutationObserver !== 'undefined') { let counter = 1; const observer = new MutationObserver(flushCallbacks); const textNode = document.createTextNode(String(counter)); observer.observe(textNode, { characterData: true }); timerFunc = () => { counter = (counter + 1) % 2; textNode.data = String(counter); }; } else { // 省略了只在IE中的setImmediate timerFunc = () => { setTimeout(flushCallbacks, 0); }; } const callbacks = []; let pending = false; // 实际的nextTick函数 function nextTick(cb, ctx) { let _resolve; callbacks.push(() => { // 收集回调 if (cb) { cb.call(ctx); } else if (_resolve) { _resolve(ctx); } }); if (!pending) { pending = true; // pending true 意味着开始触发回调了 timerFunc(); // 触发micro task } // 没有回调返回一个promise if (!cb && typeof Promise !== 'undefined') { return new Promise((resolve) => { _resolve = resolve; }); } } function flushCallbackss() { pending = false; // 回调触发完了，可以开始下一次了 // 拷贝一份，如果nextTick 中嵌套nextTick, 能防止内部的nextTick 在这一次被调用。 const copies = callbacks.slice(0); callbacks.length = 0; // 不创建新数组，其他地方引用同一个变量，长度都为0 // 最后遍历执行 for (let i = 0; i < copies.length; i++) { copies[i](); } } \"]},\"542\":{\"h\":\"Vue Router\",\"t\":[\"手写 Vue-router 核心原理Vue-Router 的实现原理\"]},\"543\":{\"h\":\"路由的本质：\",\"t\":[\"SPA 应用。\",\"路由变化 -> 数据变化 -> UI 变化\",\"监听 path 变化，根据 path 和组件的关系触发组件的 unmount 和 mount\",\"用 context 注入上下文\"]},\"544\":{\"h\":\"hash 和 history\",\"t\":[\"两种路由区别\",\"hash 用锚点#，不会像服务器发请求\",\"history 使用真实 path， 需要后端返回同一个页面， nginx 配置\",\"hash 不方便 ssr，\"]},\"545\":{\"h\":\"popstate\",\"t\":[\"触发popstate 事件:\",\"浏览器前进后退\",\"hostory.back()/go()/forward()\",\"pushState/replaceState 或 <a> 不触发 popstate 事件，需要拦截调用。\"]},\"546\":{\"h\":\"简易 router\",\"t\":[\"<body> <div id=\\\"menu\\\"> <a href=\\\"/\\\">home</a> <a href=\\\"/list\\\">list</a> <a href=\\\"/about\\\">about</a> </div> <div id=\\\"content\\\"></div> <script> class Router { routes = {}; appendRoute(path, renderFn) { // 路由json this.routes[path] = renderFn; } go(path, isPush = true) { const renderFn = this.routes[path] || null; if (!renderFn) return; isPush && window.history.pushState({}, null, path); // 类似于组件渲染方法 renderFn(); } } const router = new Router(); router.appendRoute('/', () => renderText('home page')); router.appendRoute('/list', () => renderText('list page')); router.appendRoute('/about', () => renderText('about page')); function renderText(text) { content.innerHTML = text; } menu.addEventListener('click', (e) => { const el = e.target; if (el.tagName === 'A') { e.preventDefault(); router.go(el.getAttribute('href')); } }); // 监听前进后退按钮 window.addEventListener('popstate', () => { router.go(location.pathname, false); }); </script> </body> \"]},\"547\":{\"h\":\"响应式\",\"t\":[\"observe, 返回一个 proxy 代理的响应式数据对象 \",\"getter 中用 Reflect.get() 判断结果是对象继续调用 observe 返回代理\",\"setter 中 nofify 收集到的依赖。\",\"触发第一次 getter，收集依赖。watcher \",\"需要将回调放到全局变量中，getter 里记录全局变量中的为回调\",\"执行一次回调\",\"清空全局变量\",\"之后改变响应式对象，触发 setter，调用回调。\"]},\"548\":{\"h\":\"整体执行流程\",\"t\":[\"vue 原理\",\"核心模块：响应式，虚拟 dom， 全局 api，内置组件\",\"Vue 构造函数其实就是一个普通的函数\",\"initGlobalAPI(Vue); function initGlobalAPI(Vue) { Vue.set = set; Vue.delete = del; ... } function Vue(options) { // 省略了判断是否是new来调用 this._init(options); } // initMixin Vue.prototype._init = () => { vm = this; // 1. 配置$options // 2. 开发环境 render 代理 initProxy if (process.env.NODE_ENV !== 'production') { initProxy(vm); } else { vm._renderProxy = vm; } // 3. 初始化, 调用生命周期 initLifesycle(vm); // 定义$parent,$children,$refs,$root initEvents(vm); // 更新事件监听 initRender(vm); // 定义 $craeteElement,$listeners,$attrs,$slots callHook(vm, 'beforeCreate'); initInjections(vm); // 处理inject initState(vm); // 处理props，data，methods，computed，watch initProvide(vm); // 处理provide callHook(vm, 'created'); // 4. 挂载 if (vm.$options.el) { vm.$mount(vm.$options.el); } }; // stateMixin Vue.prototype.$data; Vue.prototype.$props; Vue.prototype.$set; Vue.prototype.$delete; Vue.prototype.$watch; \"]},\"549\":{\"h\":\"initProp\"},\"550\":{\"h\":\"派发更新\"},\"551\":{\"h\":\"Welcome DevNote\",\"t\":[\"Algorithem\",\"Frontend\",\"Go\",\"Js\",\"Nodejs\",\"React\",\"Vue\"]}},\"dirtCount\":0,\"index\":[[\"省略了判断是否是new来调用\",{\"1\":{\"548\":1}}],[\"省略了只在ie中的setimmediate\",{\"1\":{\"541\":1}}],[\"构造函数其实就是一个普通的函数\",{\"1\":{\"548\":1}}],[\"构建一个store\",{\"1\":{\"487\":1}}],[\"构建\",{\"1\":{\"246\":1,\"289\":1}}],[\"虚拟\",{\"1\":{\"548\":1}}],[\"长度都为0\",{\"1\":{\"541\":1}}],[\"长轮询\",{\"1\":{\"267\":1}}],[\"拷贝一份\",{\"1\":{\"541\":1}}],[\"普通组件只要调用\",{\"1\":{\"534\":1}}],[\"普通请求没有这个\",{\"1\":{\"184\":1}}],[\"手写\",{\"1\":{\"542\":1}}],[\"手写一个\",{\"0\":{\"397\":1}}],[\"手写一个继承逻辑\",{\"0\":{\"396\":1}}],[\"手动在\",{\"0\":{\"529\":1}}],[\"什么时候都更新\",{\"1\":{\"524\":1}}],[\"去除unsafe\",{\"1\":{\"523\":1}}],[\"去掉\",{\"1\":{\"182\":1}}],[\"销毁阶段\",{\"0\":{\"518\":1}}],[\"截流方法\",{\"1\":{\"505\":1}}],[\"截取路由参数\",{\"1\":{\"505\":1}}],[\"利于组合\",{\"1\":{\"499\":1}}],[\"利用messagechannel预定下一个宏任务\",{\"1\":{\"480\":1}}],[\"利用map\",{\"1\":{\"36\":2}}],[\"利用context\",{\"1\":{\"465\":1}}],[\"利用uselayouteffect\",{\"1\":{\"465\":1}}],[\"利用闭包\",{\"0\":{\"393\":1}}],[\"利用空闲时间加载\",{\"1\":{\"365\":1}}],[\"利用堆外内存完成高效地传输\",{\"1\":{\"309\":1}}],[\"利用浏览器会自动携带\",{\"1\":{\"203\":1}}],[\"利用现有前端框架\",{\"1\":{\"143\":1}}],[\"利用\",{\"0\":{\"114\":1,\"392\":1,\"457\":1,\"530\":1},\"1\":{\"78\":1,\"94\":1,\"106\":1,\"121\":1,\"136\":1,\"143\":1,\"171\":2,\"221\":3,\"224\":1,\"229\":1,\"235\":1,\"338\":2,\"392\":1,\"447\":1,\"458\":1,\"460\":1,\"464\":1,\"490\":1}}],[\"利用优先队列\",{\"1\":{\"57\":1}}],[\"利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的\",{\"1\":{\"27\":1}}],[\"利用stack\",{\"1\":{\"6\":1}}],[\"利用递归\",{\"1\":{\"6\":1}}],[\"利用queue\",{\"1\":{\"4\":1}}],[\"纯函数\",{\"1\":{\"499\":1}}],[\"那必然不会读取到属于自己当前状态的值\",{\"1\":{\"498\":1}}],[\"那就是多此一举了\",{\"1\":{\"134\":1}}],[\"那就是对班级中的分数明细数据求平均\",{\"1\":{\"98\":1}}],[\"显然符合这一理念\",{\"1\":{\"498\":1}}],[\"界面应当是数据的不同形式的简单投影\",{\"1\":{\"498\":1}}],[\"好像一个\",{\"1\":{\"493\":1}}],[\"继续往下进行操作搜集\",{\"1\":{\"493\":1}}],[\"继承属性\",{\"1\":{\"421\":1}}],[\"继承\",{\"0\":{\"395\":1},\"1\":{\"229\":1,\"421\":1}}],[\"订阅更新组件\",{\"1\":{\"490\":1}}],[\"拦截的就是\",{\"1\":{\"487\":1}}],[\"拦截器\",{\"1\":{\"482\":1}}],[\"拦截监听\",{\"1\":{\"101\":1}}],[\"闭包\",{\"1\":{\"482\":1,\"499\":1}}],[\"闭包都可以实现\",{\"1\":{\"482\":1}}],[\"闭包陷阱\",{\"0\":{\"535\":1},\"1\":{\"459\":1}}],[\"知识点梳理\",{\"1\":{\"481\":1}}],[\"超时\",{\"1\":{\"480\":1}}],[\"超过\",{\"1\":{\"309\":1}}],[\"切换双缓存\",{\"1\":{\"478\":1}}],[\"向上归并的过程\",{\"1\":{\"477\":1}}],[\"向下按照\",{\"1\":{\"476\":1}}],[\"期间会执行函数组件\",{\"1\":{\"476\":1}}],[\"挂载\",{\"1\":{\"548\":1}}],[\"挂载在子组件的\",{\"1\":{\"490\":1}}],[\"挂载的dom\",{\"1\":{\"475\":1}}],[\"挂载位置的真实\",{\"1\":{\"475\":1}}],[\"挂到组件的\",{\"1\":{\"490\":1}}],[\"挂到\",{\"1\":{\"443\":2}}],[\"挂到peer\",{\"1\":{\"278\":1}}],[\"搜集副作用\",{\"1\":{\"472\":1}}],[\"搜索引擎会抓取网址\",{\"1\":{\"189\":1}}],[\"副作用\",{\"1\":{\"472\":1}}],[\"真实dom\",{\"1\":{\"472\":1}}],[\"真实\",{\"0\":{\"470\":1}}],[\"～\",{\"1\":{\"468\":1}}],[\"～～4\",{\"1\":{\"19\":1}}],[\"找不同\",{\"1\":{\"468\":1}}],[\"找形参和变量声明\",{\"1\":{\"361\":1}}],[\"找形参\",{\"1\":{\"361\":1}}],[\"考虑children\",{\"1\":{\"465\":1}}],[\"考虑重绘\",{\"1\":{\"229\":1}}],[\"匹配routes\",{\"1\":{\"465\":1}}],[\"派发更新\",{\"0\":{\"550\":1},\"1\":{\"465\":1}}],[\"派生推广提效是重点\",{\"1\":{\"244\":1}}],[\"宿主节点\",{\"1\":{\"460\":2}}],[\"宿主元素\",{\"1\":{\"448\":1}}],[\"库\",{\"1\":{\"460\":1}}],[\"高阶函数\",{\"1\":{\"487\":1}}],[\"高阶组件返回一个组件继承入参的组件\",{\"1\":{\"456\":1}}],[\"高内聚\",{\"1\":{\"61\":1}}],[\"明确数据的声明周期\",{\"1\":{\"482\":1}}],[\"明确\",{\"1\":{\"451\":1}}],[\"改变时会调用\",{\"1\":{\"447\":1}}],[\"改善插入和删除操作\",{\"1\":{\"51\":1}}],[\"移除\",{\"1\":{\"447\":1}}],[\"移动完成后\",{\"1\":{\"385\":1}}],[\"何时调用\",{\"1\":{\"447\":1}}],[\"专栏\",{\"1\":{\"441\":1}}],[\"专注于数据聚合\",{\"1\":{\"295\":1}}],[\"专注于\",{\"1\":{\"94\":1}}],[\"搞懂这\",{\"1\":{\"441\":1}}],[\"借助第三方中转\",{\"1\":{\"439\":1}}],[\"借助第三方存储\",{\"1\":{\"439\":1}}],[\"借助turn中转\",{\"1\":{\"278\":1}}],[\"此\",{\"1\":{\"437\":1}}],[\"此时\",{\"1\":{\"339\":2}}],[\"此时还没有在页面显示\",{\"1\":{\"313\":1}}],[\"此时仅仅通过\",{\"1\":{\"183\":1}}],[\"句\",{\"1\":{\"435\":1}}],[\"词\",{\"1\":{\"435\":1}}],[\"词法分析\",{\"1\":{\"435\":1}}],[\"碰到\",{\"1\":{\"427\":1,\"480\":1}}],[\"碰撞\",{\"0\":{\"31\":1,\"33\":1}}],[\"载入模块\",{\"1\":{\"427\":1}}],[\"载体中\",{\"1\":{\"283\":1}}],[\"载体剩余容量是否够新的\",{\"1\":{\"283\":1}}],[\"语\",{\"1\":{\"435\":1}}],[\"语义分析\",{\"1\":{\"435\":1}}],[\"语句被插入到生成器主体的当前暂停位置\",{\"1\":{\"493\":1}}],[\"语句\",{\"1\":{\"424\":1}}],[\"语法分析\",{\"1\":{\"435\":1}}],[\"语法标准之内\",{\"1\":{\"312\":1}}],[\"语法规定的\",{\"1\":{\"312\":1}}],[\"语法比\",{\"1\":{\"102\":1}}],[\"地址\",{\"1\":{\"422\":1}}],[\"→\",{\"1\":{\"412\":6}}],[\"访问各个元素\",{\"1\":{\"419\":1}}],[\"访问器属性\",{\"0\":{\"409\":1}}],[\"访问也会寻址\",{\"1\":{\"229\":1}}],[\"事实上\",{\"1\":{\"407\":1}}],[\"事件循环机制\",{\"1\":{\"291\":1}}],[\"事件的参数\",{\"1\":{\"280\":1}}],[\"事件实现了网页崩溃的监控\",{\"1\":{\"221\":1}}],[\"事件不会向上冒泡到\",{\"1\":{\"221\":1}}],[\"事件捕获\",{\"1\":{\"221\":1}}],[\"事件处理麻烦一点\",{\"1\":{\"143\":1}}],[\"事件\",{\"0\":{\"82\":1,\"234\":1},\"1\":{\"79\":1,\"144\":1,\"221\":1,\"234\":2,\"235\":1,\"291\":1,\"545\":2}}],[\"恰好是一个全局属性\",{\"1\":{\"406\":1}}],[\"恰恰适合这个算法\",{\"1\":{\"381\":1}}],[\"精确\",{\"1\":{\"406\":1}}],[\"底层还是一个对象\",{\"1\":{\"406\":1}}],[\"底层代码\",{\"1\":{\"394\":1}}],[\"现在是一个布尔值\",{\"1\":{\"404\":1}}],[\"现在是一个字符串\",{\"1\":{\"404\":1}}],[\"现在是一个数值\",{\"1\":{\"404\":1}}],[\"现在客户端和服务器都有\",{\"1\":{\"180\":1}}],[\"客户\",{\"1\":{\"394\":1}}],[\"客户端拉取\",{\"1\":{\"267\":1}}],[\"客户端发出\",{\"1\":{\"201\":1}}],[\"客户端\",{\"1\":{\"201\":1}}],[\"客户端通过\",{\"1\":{\"199\":1}}],[\"客户端渲染\",{\"1\":{\"166\":1}}],[\"私有属性\",{\"0\":{\"393\":1}}],[\"箭头函数编译\",{\"0\":{\"389\":1}}],[\"慎将内存做为缓存\",{\"1\":{\"387\":1}}],[\"清空全局变量\",{\"1\":{\"547\":1}}],[\"清理\",{\"1\":{\"451\":1}}],[\"清理与整理动作也变成增量式的\",{\"1\":{\"386\":1}}],[\"清除对象导致内存不连续\",{\"1\":{\"384\":1}}],[\"清除peerconnection的事件回调\",{\"1\":{\"278\":1}}],[\"延迟\",{\"1\":{\"479\":1}}],[\"延迟清理\",{\"1\":{\"386\":1}}],[\"延迟加载不需要的\",{\"1\":{\"168\":1}}],[\"停顿\",{\"1\":{\"386\":1}}],[\"停止\",{\"1\":{\"326\":1}}],[\"增强后的dispatch\",{\"1\":{\"487\":1}}],[\"增强\",{\"1\":{\"487\":1}}],[\"增删改\",{\"1\":{\"476\":1}}],[\"增量式标记回收\",{\"0\":{\"386\":1}}],[\"增加开发\",{\"1\":{\"143\":1}}],[\"增加条目\",{\"1\":{\"79\":1}}],[\"浪费一半内存空间\",{\"1\":{\"383\":1}}],[\"复制效率低\",{\"1\":{\"383\":1}}],[\"复杂动画等场景\",{\"1\":{\"94\":1}}],[\"复杂和强大\",{\"1\":{\"94\":1}}],[\"复杂度o\",{\"1\":{\"74\":1}}],[\"复杂度\",{\"0\":{\"11\":1}}],[\"晋升\",{\"0\":{\"382\":1},\"1\":{\"379\":1}}],[\"具体实现是\",{\"1\":{\"379\":1}}],[\"具有\",{\"1\":{\"240\":1}}],[\"具有独立分区状态的\",{\"1\":{\"209\":1}}],[\"具有由\",{\"1\":{\"201\":1}}],[\"绝对大多数的应用程序对象的存活周期都会很短\",{\"1\":{\"377\":1}}],[\"退回哈希存储了\",{\"1\":{\"374\":1}}],[\"某些场景下会导致隐藏类改变\",{\"1\":{\"374\":1}}],[\"某些情况下需要建立匿名的\",{\"1\":{\"238\":1}}],[\"很多时候删不掉\",{\"1\":{\"374\":1}}],[\"很大集合中找特定节点\",{\"1\":{\"3\":1}}],[\"索引\",{\"1\":{\"373\":1}}],[\"慢属性\",{\"0\":{\"373\":1}}],[\"慢属性与前面的两种属性相比\",{\"1\":{\"370\":1}}],[\"速度最慢\",{\"1\":{\"370\":1}}],[\"男\",{\"1\":{\"369\":3}}],[\"隐藏类\",{\"0\":{\"368\":1}}],[\"隐藏类用于描述对象的结构\",{\"1\":{\"367\":1}}],[\"命名属性的不同存储方式\",{\"0\":{\"370\":1}}],[\"命名属性\",{\"1\":{\"367\":1}}],[\"命令一般用来生成\",{\"1\":{\"325\":1}}],[\"命令\",{\"0\":{\"325\":1},\"1\":{\"297\":1}}],[\"命令行接收的参数和\",{\"1\":{\"287\":1}}],[\"键名可索引\",{\"1\":{\"367\":1}}],[\"还是\",{\"0\":{\"423\":1},\"1\":{\"442\":1,\"476\":1}}],[\"还是其他比如\",{\"1\":{\"221\":1}}],[\"还有\",{\"1\":{\"367\":1}}],[\"局限\",{\"1\":{\"384\":1}}],[\"局域网\",{\"1\":{\"365\":1}}],[\"局部\",{\"1\":{\"266\":1}}],[\"局部作用域\",{\"1\":{\"261\":1}}],[\"局部不合法\",{\"1\":{\"7\":1}}],[\"少请求\",{\"1\":{\"365\":1}}],[\"层级关系\",{\"1\":{\"443\":1}}],[\"层面慎用\",{\"1\":{\"365\":1}}],[\"层层判断组件发生了什么变化\",{\"1\":{\"102\":1}}],[\"看值\",{\"1\":{\"398\":1}}],[\"看引用\",{\"1\":{\"398\":1}}],[\"看情况用\",{\"1\":{\"365\":1}}],[\"看占用大头的来源\",{\"1\":{\"298\":1}}],[\"逻辑\",{\"0\":{\"397\":1}}],[\"逻辑关系\",{\"1\":{\"365\":1}}],[\"逻辑流画布\",{\"1\":{\"152\":1}}],[\"业务优化\",{\"1\":{\"365\":1}}],[\"采用的\",{\"1\":{\"379\":1}}],[\"采用函数\",{\"1\":{\"362\":1}}],[\"采用后声明的\",{\"1\":{\"362\":1}}],[\"采用先声明的\",{\"1\":{\"362\":1}}],[\"采用多路复用\",{\"1\":{\"134\":1}}],[\"总结\",{\"0\":{\"362\":1,\"387\":1,\"421\":1,\"445\":1,\"498\":1}}],[\"总共多少请求\",{\"1\":{\"297\":1}}],[\"带入实参\",{\"1\":{\"361\":1}}],[\"带来的修改\",{\"0\":{\"135\":1}}],[\"形参相统一\",{\"1\":{\"361\":1}}],[\"形成闭包\",{\"1\":{\"387\":1}}],[\"形成ast\",{\"1\":{\"348\":1}}],[\"形成大顶堆\",{\"1\":{\"43\":2}}],[\"赋值初始state\",{\"1\":{\"443\":1}}],[\"赋值函数体\",{\"1\":{\"361\":1}}],[\"赋值\",{\"1\":{\"361\":1}}],[\"赋值为undefined\",{\"1\":{\"330\":1,\"361\":1}}],[\"共同的方法name\",{\"1\":{\"355\":1}}],[\"共享创建的\",{\"1\":{\"301\":1}}],[\"混合多种类型的类数组\",{\"1\":{\"353\":1}}],[\"猜\",{\"1\":{\"352\":1}}],[\"拥有所有\",{\"1\":{\"351\":1}}],[\"拥有多个线程\",{\"1\":{\"241\":1}}],[\"静态函数\",{\"0\":{\"506\":1}}],[\"静态数据\",{\"1\":{\"472\":1}}],[\"静态服务器\",{\"1\":{\"365\":1}}],[\"静态导入\",{\"1\":{\"349\":1,\"434\":1}}],[\"静态资源\",{\"1\":{\"221\":1,\"319\":1}}],[\"静态资源托管\",{\"1\":{\"109\":1}}],[\"摇落\",{\"1\":{\"348\":1}}],[\"随后\",{\"1\":{\"348\":1}}],[\"抽象类\",{\"1\":{\"355\":1}}],[\"抽象语法树\",{\"1\":{\"348\":2}}],[\"抽象不依赖于实现\",{\"1\":{\"111\":1}}],[\"程序会从入口文件出发扫描所有的模块依赖\",{\"1\":{\"348\":1}}],[\"删掉这些没被用到的导出语句\",{\"1\":{\"348\":1}}],[\"删除a后\",{\"1\":{\"374\":1}}],[\"删除\",{\"1\":{\"50\":1}}],[\"阶段改为异步的渲染\",{\"1\":{\"523\":1}}],[\"阶段完成时\",{\"1\":{\"460\":1}}],[\"阶段触发的更新\",{\"1\":{\"445\":2}}],[\"阶段的\",{\"0\":{\"443\":1}}],[\"阶段用来生成\",{\"1\":{\"442\":1}}],[\"阶段\",{\"0\":{\"444\":1},\"1\":{\"348\":2,\"460\":3}}],[\"阶乘\",{\"1\":{\"70\":1}}],[\"抛出错误\",{\"1\":{\"344\":1}}],[\"敲定会重新渲染子组件\",{\"1\":{\"457\":1}}],[\"敲定\",{\"1\":{\"343\":1}}],[\"敲定了就会执行\",{\"1\":{\"342\":1}}],[\"里记录全局变量中的为回调\",{\"1\":{\"547\":1}}],[\"里的第一个元素作为第二个参数\",{\"1\":{\"483\":1}}],[\"里的第一个参数是上下文\",{\"1\":{\"271\":1}}],[\"里被调用\",{\"1\":{\"355\":2}}],[\"里\",{\"1\":{\"343\":1}}],[\"控制台没有\",{\"1\":{\"340\":1}}],[\"控制元素是否渲染其内容\",{\"1\":{\"171\":1}}],[\"暂时性死区\",{\"1\":{\"330\":1}}],[\"暂停\",{\"1\":{\"229\":1}}],[\"声明的不初始化\",{\"1\":{\"360\":1}}],[\"声明的放到词法环境\",{\"1\":{\"358\":1}}],[\"声明的放到变量环境\",{\"1\":{\"358\":1}}],[\"声明变量和函数\",{\"1\":{\"358\":1}}],[\"声明变量\",{\"1\":{\"352\":1}}],[\"声明\",{\"1\":{\"330\":1}}],[\"声明周期componentdidmount\",{\"1\":{\"478\":1}}],[\"声明周期\",{\"0\":{\"524\":1},\"1\":{\"224\":1,\"476\":1,\"533\":1}}],[\"权限\",{\"1\":{\"327\":1}}],[\"问题很明显\",{\"1\":{\"326\":1}}],[\"问题能够分解成子问题来解决\",{\"1\":{\"67\":1}}],[\"常见错误\",{\"1\":{\"326\":1}}],[\"常见递归算法事件复杂度\",{\"1\":{\"12\":1}}],[\"你就要记下错误代码\",{\"1\":{\"326\":1}}],[\"你可以通过\",{\"1\":{\"325\":1}}],[\"你可以通过在\",{\"1\":{\"325\":1}}],[\"你可以通过把它们放到一个集合里来告诉\",{\"1\":{\"210\":1}}],[\"意味着开始触发回调了\",{\"1\":{\"541\":1}}],[\"意味着内核又很强的扩展性\",{\"1\":{\"111\":1}}],[\"意思是将该软件安装在\",{\"1\":{\"325\":1}}],[\"王老师\",{\"1\":{\"323\":2}}],[\"班主任\",{\"1\":{\"323\":2}}],[\"班主任依赖了班级这个非主键\",{\"1\":{\"323\":1}}],[\"班级\",{\"1\":{\"98\":1,\"323\":3}}],[\"满足2nf前提下\",{\"1\":{\"323\":1}}],[\"满足1nf前提下\",{\"1\":{\"322\":1}}],[\"课程名字\",{\"1\":{\"322\":2}}],[\"课程名称只依赖课程id\",{\"1\":{\"322\":1}}],[\"课程id\",{\"1\":{\"322\":3}}],[\"联合主键不能只依赖一部分\",{\"1\":{\"322\":1}}],[\"张三\",{\"1\":{\"321\":2,\"323\":2}}],[\"姓名\",{\"1\":{\"321\":2,\"323\":2}}],[\"学号\",{\"1\":{\"321\":2,\"322\":2,\"323\":2}}],[\"拆分后\",{\"1\":{\"321\":1,\"322\":1}}],[\"拆分为许多小\",{\"1\":{\"386\":1}}],[\"拆分为\",{\"1\":{\"321\":1,\"323\":1}}],[\"拆分子问题\",{\"1\":{\"73\":1}}],[\"广州\",{\"1\":{\"321\":3}}],[\"广东\",{\"1\":{\"321\":3}}],[\"广东广州\",{\"1\":{\"321\":1}}],[\"广度优先\",{\"1\":{\"10\":1,\"46\":1}}],[\"列的原子性\",{\"0\":{\"321\":1}}],[\"负载均衡\",{\"1\":{\"319\":1}}],[\"负载均衡做动态数据\",{\"1\":{\"319\":1}}],[\"操作不安全\",{\"1\":{\"514\":1}}],[\"操作系统\",{\"1\":{\"365\":1}}],[\"操作\",{\"1\":{\"317\":1,\"449\":1}}],[\"轮循\",{\"1\":{\"315\":1}}],[\"轮询查找\",{\"1\":{\"311\":1}}],[\"轮询\",{\"1\":{\"117\":1}}],[\"闲置阶段\",{\"1\":{\"315\":1}}],[\"宏任务\",{\"1\":{\"312\":1,\"315\":4}}],[\"宏任务是由浏览器\",{\"1\":{\"312\":1}}],[\"谁先完成谁在进入队列\",{\"1\":{\"312\":1}}],[\"干预处理\",{\"1\":{\"312\":1}}],[\"块结合使用时执行任何清理任务\",{\"1\":{\"493\":1}}],[\"块作用域\",{\"1\":{\"330\":1}}],[\"块一般是buffer\",{\"1\":{\"309\":1}}],[\"块相对于屏幕的位置\",{\"1\":{\"229\":1}}],[\"激活的时候从外部对象拿数据\",{\"1\":{\"308\":2}}],[\"钩子\",{\"1\":{\"306\":1}}],[\"运算比\",{\"1\":{\"303\":1}}],[\"运行原理\",{\"0\":{\"442\":1}}],[\"运行在独立私有作用域中\",{\"1\":{\"430\":1}}],[\"运行在沙箱中\",{\"1\":{\"241\":1}}],[\"运行时\",{\"1\":{\"482\":1}}],[\"运行时代码优化\",{\"0\":{\"525\":1},\"1\":{\"459\":1}}],[\"运行时才能确定依赖关系\",{\"1\":{\"427\":1}}],[\"运行时直接使用\",{\"1\":{\"427\":1}}],[\"运行所有代码\",{\"1\":{\"348\":1}}],[\"运行代码\",{\"1\":{\"348\":1}}],[\"运行\",{\"1\":{\"298\":1}}],[\"变化\",{\"1\":{\"543\":2}}],[\"变为慢属性\",{\"1\":{\"374\":1}}],[\"变为哈希存取结构\",{\"1\":{\"373\":1}}],[\"变量是当前函数内部的\",{\"1\":{\"496\":1}}],[\"变量管理\",{\"1\":{\"426\":1}}],[\"变量可被访问的范围\",{\"1\":{\"426\":1}}],[\"变量\",{\"1\":{\"422\":1}}],[\"变量和类型没有关联\",{\"1\":{\"404\":1}}],[\"变量提升\",{\"1\":{\"363\":1}}],[\"变量声明\",{\"1\":{\"361\":1}}],[\"变量声明提前\",{\"1\":{\"360\":1}}],[\"变量赋值为\",{\"1\":{\"360\":1}}],[\"变量赋值\",{\"1\":{\"358\":1}}],[\"变量的作用域链与定义时的环境有关\",{\"1\":{\"358\":1}}],[\"变量的类型不能被推断的时候\",{\"1\":{\"352\":1}}],[\"变量的转换\",{\"1\":{\"303\":1}}],[\"变量引用的值的类型\",{\"1\":{\"352\":1}}],[\"变量引用一个值\",{\"1\":{\"351\":1}}],[\"变换的动画\",{\"1\":{\"240\":1}}],[\"变换\",{\"1\":{\"140\":1}}],[\"报错\",{\"1\":{\"302\":1}}],[\"过程\",{\"1\":{\"384\":1,\"385\":1}}],[\"过程中出现\",{\"1\":{\"326\":1}}],[\"过程中截取内存快照\",{\"1\":{\"302\":1}}],[\"过期时长秒\",{\"1\":{\"124\":1}}],[\"使新业务有缓存\",{\"1\":{\"365\":1}}],[\"使内存被复用\",{\"1\":{\"301\":1}}],[\"使用真实\",{\"1\":{\"544\":1}}],[\"使用闭包的特性\",{\"1\":{\"498\":1}}],[\"使用闭包\",{\"1\":{\"496\":1,\"497\":1}}],[\"使用函数式编程\",{\"1\":{\"496\":1}}],[\"使用events注册事件\",{\"1\":{\"493\":1}}],[\"使用工程化手段\",{\"1\":{\"244\":1}}],[\"使用了硬件加速的\",{\"1\":{\"240\":1}}],[\"使用了\",{\"1\":{\"240\":1}}],[\"使用硬连接和软连接\",{\"1\":{\"159\":1}}],[\"使用高效编译器\",{\"1\":{\"141\":1}}],[\"使用\",{\"0\":{\"271\":1,\"441\":1,\"446\":1,\"450\":1,\"452\":1},\"1\":{\"119\":1,\"120\":1,\"131\":1,\"140\":1,\"169\":1,\"210\":1,\"302\":1,\"476\":1}}],[\"使用次数\",{\"1\":{\"109\":1}}],[\"使用链表\",{\"1\":{\"9\":1}}],[\"池\",{\"1\":{\"301\":1}}],[\"策略\",{\"1\":{\"300\":1}}],[\"策略模式\",{\"1\":{\"62\":1}}],[\"频率低\",{\"1\":{\"300\":1}}],[\"频率高\",{\"1\":{\"300\":1}}],[\"老生代活多\",{\"1\":{\"384\":1}}],[\"老生代活对象多\",{\"1\":{\"383\":1}}],[\"老生代中死对象只占较小部分\",{\"1\":{\"384\":1}}],[\"老生代使用算法\",{\"1\":{\"383\":1}}],[\"老生代\",{\"0\":{\"383\":1},\"1\":{\"300\":1,\"376\":1}}],[\"容量大\",{\"1\":{\"300\":1}}],[\"容量小\",{\"1\":{\"300\":1}}],[\"容易实现\",{\"1\":{\"265\":1}}],[\"隔一段时间定时清理没有再被使用的对象\",{\"1\":{\"300\":1}}],[\"隔离方案\",{\"0\":{\"259\":1}}],[\"隔离方案选择\",{\"1\":{\"143\":1}}],[\"隔离\",{\"0\":{\"266\":1},\"1\":{\"244\":1}}],[\"垃圾回收与应用逻辑交替执行直到标记阶段完成\",{\"1\":{\"386\":1}}],[\"垃圾回收很频繁\",{\"1\":{\"379\":1}}],[\"垃圾回收方法\",{\"1\":{\"376\":1}}],[\"垃圾回收慢\",{\"1\":{\"300\":1}}],[\"垃圾回收块\",{\"1\":{\"300\":1}}],[\"垃圾回收\",{\"0\":{\"300\":1,\"376\":1},\"1\":{\"300\":1,\"376\":1}}],[\"耗时\",{\"1\":{\"299\":2}}],[\"跟带宽差不多\",{\"1\":{\"297\":1}}],[\"吞吐量\",{\"1\":{\"297\":1}}],[\"压测时间\",{\"1\":{\"297\":1}}],[\"压测\",{\"0\":{\"297\":1},\"1\":{\"298\":1}}],[\"压缩合并文件\",{\"1\":{\"365\":1}}],[\"压缩来发送二进制消息\",{\"1\":{\"201\":1}}],[\"压缩有泄漏加密信息的风险\",{\"1\":{\"131\":1}}],[\"压缩\",{\"1\":{\"129\":1,\"131\":1}}],[\"端渲染\",{\"1\":{\"296\":1}}],[\"端口\",{\"1\":{\"184\":1}}],[\"取数据的方式\",{\"1\":{\"295\":1}}],[\"取最后一个1的位\",{\"1\":{\"18\":1}}],[\"取最小值并且加1\",{\"1\":{\"7\":1}}],[\"取最大值加1\",{\"1\":{\"7\":1}}],[\"粘包\",{\"1\":{\"293\":1}}],[\"写不写\",{\"1\":{\"343\":1}}],[\"写入数据\",{\"1\":{\"293\":1}}],[\"写成字符串放到组件内\",{\"1\":{\"260\":1}}],[\"半双工或双工\",{\"1\":{\"292\":1}}],[\"出队列\",{\"1\":{\"291\":1}}],[\"入餐包含自己写的状态\",{\"1\":{\"443\":1}}],[\"入队列\",{\"1\":{\"291\":1}}],[\"入口\",{\"1\":{\"123\":1}}],[\"统计信息\",{\"1\":{\"291\":1}}],[\"统一更换节点\",{\"1\":{\"444\":1}}],[\"统一\",{\"1\":{\"365\":1}}],[\"统一协议串联\",{\"1\":{\"144\":1}}],[\"统一域名使用\",{\"1\":{\"121\":1}}],[\"断开\",{\"1\":{\"289\":1}}],[\"收集依赖\",{\"1\":{\"547\":1}}],[\"收集到的依赖\",{\"1\":{\"547\":1}}],[\"收集回调\",{\"1\":{\"541\":1}}],[\"收到store\",{\"1\":{\"490\":1}}],[\"收到answer\",{\"1\":{\"278\":1}}],[\"收益最大的功能先优化\",{\"1\":{\"365\":1}}],[\"收益\",{\"1\":{\"303\":1}}],[\"收尾\",{\"1\":{\"289\":1}}],[\"准备工作\",{\"1\":{\"289\":1}}],[\"源码\",{\"1\":{\"288\":1}}],[\"值混合\",{\"1\":{\"406\":1}}],[\"值在算术表达式中与常规\",{\"1\":{\"406\":1}}],[\"值并不总是更精确的\",{\"1\":{\"406\":1}}],[\"值\",{\"1\":{\"287\":1,\"351\":1,\"412\":1,\"422\":1,\"443\":1}}],[\"初始化阶段\",{\"0\":{\"504\":1}}],[\"初始化变量在另一行语句\",{\"1\":{\"352\":1}}],[\"初始化\",{\"1\":{\"287\":1,\"330\":1,\"548\":1}}],[\"判定当前的\",{\"1\":{\"283\":1}}],[\"判断结果是对象继续调用\",{\"1\":{\"547\":1}}],[\"判断如果是渲染阶段\",{\"1\":{\"443\":1}}],[\"判断是mount\",{\"1\":{\"476\":1}}],[\"判断是否有\",{\"1\":{\"475\":1}}],[\"判断是否是\",{\"1\":{\"445\":1}}],[\"判断是\",{\"1\":{\"442\":1}}],[\"判断object\",{\"1\":{\"423\":1}}],[\"判断array\",{\"1\":{\"423\":1}}],[\"判断\",{\"0\":{\"423\":1}}],[\"判断两个值相等\",{\"0\":{\"398\":1},\"1\":{\"328\":1}}],[\"判断优先级\",{\"1\":{\"229\":1}}],[\"判断表达提取为函数\",{\"1\":{\"66\":1}}],[\"判断括号问题\",{\"1\":{\"54\":1}}],[\"判断有环\",{\"1\":{\"52\":1}}],[\"判断奇偶\",{\"1\":{\"18\":1,\"20\":1}}],[\"成员\",{\"1\":{\"430\":1}}],[\"成绩\",{\"1\":{\"322\":2}}],[\"成本也可能会大过收益\",{\"1\":{\"303\":1}}],[\"成本\",{\"1\":{\"280\":1,\"303\":1}}],[\"成字节码\",{\"1\":{\"241\":1}}],[\"节省\",{\"1\":{\"280\":1}}],[\"节点表示的是使用硬件加速的\",{\"1\":{\"240\":1}}],[\"节点表示的是使用硬件加速的视频解码技术的\",{\"1\":{\"240\":1}}],[\"节点\",{\"1\":{\"238\":1,\"460\":1}}],[\"节点的遍历顺序\",{\"1\":{\"47\":1}}],[\"节点跟自己最小的子节点比较\",{\"1\":{\"42\":1}}],[\"节点跟自己最大的子节点比较\",{\"1\":{\"42\":1}}],[\"节点跟父节点比较\",{\"1\":{\"42\":1}}],[\"俗称字节流\",{\"1\":{\"280\":1}}],[\"关系\",{\"1\":{\"472\":1}}],[\"关闭这个\",{\"1\":{\"437\":1}}],[\"关闭回调\",{\"1\":{\"315\":1}}],[\"关闭连接peerconnection\",{\"1\":{\"278\":1}}],[\"关于服务器端推送\",{\"1\":{\"134\":1}}],[\"关于丢包\",{\"1\":{\"134\":1}}],[\"到子组件\",{\"1\":{\"449\":1}}],[\"到控制台\",{\"1\":{\"340\":1}}],[\"到页面\",{\"1\":{\"313\":1}}],[\"到接收端的ice层\",{\"1\":{\"278\":1}}],[\"到接收端\",{\"1\":{\"278\":1}}],[\"到发送端\",{\"1\":{\"278\":1}}],[\"到\",{\"1\":{\"278\":1}}],[\"到信令服务器\",{\"1\":{\"273\":1}}],[\"拿到sdp\",{\"1\":{\"278\":1}}],[\"媒体协商\",{\"1\":{\"278\":1}}],[\"媒体信息\",{\"1\":{\"273\":2}}],[\"转换顺序\",{\"1\":{\"398\":1}}],[\"转换为哈希存储\",{\"1\":{\"372\":1}}],[\"转换为哈希\",{\"1\":{\"370\":1}}],[\"转发到接收端\",{\"1\":{\"273\":1}}],[\"转为整数\",{\"1\":{\"19\":1}}],[\"信令服务器可以用websocket\",{\"1\":{\"273\":1}}],[\"信令服务器\",{\"0\":{\"273\":1},\"1\":{\"272\":1,\"273\":1}}],[\"信息采集\",{\"1\":{\"172\":1}}],[\"信息\",{\"1\":{\"7\":2}}],[\"房间管理\",{\"1\":{\"272\":1}}],[\"深层次调用\",{\"1\":{\"270\":1}}],[\"深度优先\",{\"1\":{\"7\":1,\"10\":1,\"46\":1}}],[\"工具类\",{\"1\":{\"268\":1}}],[\"工程架构\",{\"1\":{\"244\":1}}],[\"工程的proj\",{\"1\":{\"159\":1}}],[\"特例\",{\"1\":{\"398\":1}}],[\"特色项目\",{\"0\":{\"268\":1}}],[\"特点\",{\"0\":{\"116\":1},\"1\":{\"427\":1,\"430\":1}}],[\"短轮询\",{\"1\":{\"267\":1}}],[\"快属性比对象内属性多了一次寻址时间\",{\"1\":{\"370\":1}}],[\"快属性\",{\"0\":{\"373\":1},\"1\":{\"370\":1}}],[\"快\",{\"1\":{\"303\":1}}],[\"快照\",{\"1\":{\"266\":1}}],[\"快排\",{\"1\":{\"12\":1,\"36\":1}}],[\"打开的子窗口\",{\"0\":{\"437\":1,\"438\":1}}],[\"打印结果\",{\"1\":{\"437\":1}}],[\"打印\",{\"1\":{\"363\":1}}],[\"打成独立包\",{\"1\":{\"265\":1}}],[\"打包方案\",{\"1\":{\"502\":1}}],[\"打包成一个\",{\"1\":{\"257\":1}}],[\"打包时优化\",{\"0\":{\"141\":1}}],[\"打包\",{\"1\":{\"128\":1}}],[\"打包后文件的公共前缀路径\",{\"1\":{\"109\":1}}],[\"名唯一\",{\"1\":{\"261\":1}}],[\"越来越多的\",{\"1\":{\"258\":1}}],[\"越小越排前面\",{\"1\":{\"56\":1}}],[\"各大浏览器逐一支持\",{\"1\":{\"258\":1}}],[\"各浏览器有并行连接限制\",{\"1\":{\"257\":1}}],[\"各种距离\",{\"0\":{\"87\":1}}],[\"适配器模式\",{\"0\":{\"394\":1}}],[\"适合组件库\",{\"1\":{\"258\":1}}],[\"适合做版本管理\",{\"1\":{\"248\":1}}],[\"适用于\",{\"1\":{\"94\":1}}],[\"适用于图表\",{\"1\":{\"93\":1}}],[\"适用于k大小恒定\",{\"1\":{\"57\":1}}],[\"适用场景\",{\"1\":{\"93\":1,\"94\":1}}],[\"仓库不能精细管理\",{\"1\":{\"246\":1}}],[\"仓库大\",{\"1\":{\"246\":1}}],[\"部署逻辑统一\",{\"1\":{\"246\":1}}],[\"测试\",{\"0\":{\"252\":1},\"1\":{\"246\":1}}],[\"测量浏览器能够处理用户交互所需的时间\",{\"1\":{\"165\":1}}],[\"降低基础设施成本\",{\"1\":{\"246\":1}}],[\"行\",{\"1\":{\"339\":2}}],[\"行的\",{\"1\":{\"339\":3}}],[\"行业之前没有的东西\",{\"1\":{\"244\":1}}],[\"行盒和块盒不能相邻\",{\"1\":{\"229\":1}}],[\"行盒\",{\"1\":{\"229\":1}}],[\"架构的设计\",{\"1\":{\"244\":1}}],[\"规定的\",{\"1\":{\"312\":1}}],[\"规范\",{\"1\":{\"261\":1}}],[\"规范化工作流程\",{\"1\":{\"244\":1}}],[\"规则\",{\"1\":{\"121\":1}}],[\"埋点\",{\"1\":{\"244\":1}}],[\"埋点上报\",{\"1\":{\"172\":1}}],[\"推断在声明变量且初始化的时候才生效\",{\"1\":{\"352\":1}}],[\"推断\",{\"0\":{\"352\":1},\"1\":{\"352\":1}}],[\"推广后能提效\",{\"1\":{\"244\":1}}],[\"推荐响应\",{\"1\":{\"189\":1,\"190\":1}}],[\"亮点\",{\"0\":{\"244\":1}}],[\"展示数据\",{\"1\":{\"243\":1}}],[\"管理多个\",{\"1\":{\"447\":1}}],[\"管理变量\",{\"1\":{\"243\":1}}],[\"管理数据\",{\"1\":{\"243\":1}}],[\"机器码可以\",{\"1\":{\"241\":1}}],[\"扔给\",{\"1\":{\"241\":1}}],[\"沙箱\",{\"1\":{\"241\":1}}],[\"轴上距离读者更近\",{\"1\":{\"240\":1}}],[\"透明效果的动画或者\",{\"1\":{\"240\":1}}],[\"透视效果\",{\"1\":{\"240\":1}}],[\"技术优化\",{\"1\":{\"365\":1}}],[\"技术\",{\"1\":{\"240\":2}}],[\"几种\",{\"0\":{\"236\":1}}],[\"几何属性\",{\"1\":{\"140\":1}}],[\"几何体和材质共同组成\",{\"1\":{\"94\":1}}],[\"几何体\",{\"1\":{\"94\":1}}],[\"栅格化\",{\"1\":{\"235\":1}}],[\"z\",{\"1\":{\"235\":1,\"240\":1,\"363\":2}}],[\"步进\",{\"1\":{\"386\":2}}],[\"步骤\",{\"1\":{\"231\":1}}],[\"步长为两倍的\",{\"1\":{\"11\":1}}],[\"跳过\",{\"1\":{\"231\":1}}],[\"立即调用next\",{\"1\":{\"493\":1}}],[\"立即拿到当前样式\",{\"1\":{\"230\":1}}],[\"立即返回\",{\"1\":{\"180\":2}}],[\"产生的更新\",{\"1\":{\"445\":1}}],[\"产生的实例添加到\",{\"1\":{\"396\":1}}],[\"产生宏任务先进入第三方模块\",{\"1\":{\"312\":1}}],[\"产生微任务直接进入微任务队列\",{\"1\":{\"312\":1}}],[\"产生异步\",{\"1\":{\"230\":1}}],[\"产出\",{\"1\":{\"143\":2}}],[\"光栅化\",{\"1\":{\"229\":1}}],[\"光源影响场景中物体的渲染效果\",{\"1\":{\"94\":1}}],[\"光源\",{\"1\":{\"94\":1}}],[\"交互\",{\"1\":{\"268\":1}}],[\"交给\",{\"1\":{\"229\":1}}],[\"交给合成线程\",{\"1\":{\"229\":2}}],[\"交换两个变量\",{\"1\":{\"17\":1}}],[\"绘制位图\",{\"1\":{\"235\":1}}],[\"绘制\",{\"1\":{\"229\":1}}],[\"文本转换生成的\",{\"1\":{\"375\":1}}],[\"文本内容必须在行盒中\",{\"1\":{\"229\":1}}],[\"文件中的\",{\"1\":{\"493\":1}}],[\"文件中通过使用\",{\"1\":{\"493\":1}}],[\"文件中\",{\"1\":{\"493\":1}}],[\"文件为\",{\"1\":{\"432\":1}}],[\"文件通过\",{\"1\":{\"303\":1}}],[\"文件\",{\"1\":{\"168\":1,\"288\":1,\"303\":1,\"315\":1}}],[\"文件大小\",{\"1\":{\"167\":1}}],[\"文件时\",{\"1\":{\"158\":1}}],[\"文件就是指针\",{\"1\":{\"155\":1}}],[\"文件设置协商缓存\",{\"1\":{\"123\":1}}],[\"文件操作\",{\"1\":{\"117\":1}}],[\"匿名块盒\",{\"1\":{\"229\":1}}],[\"伪元素有\",{\"1\":{\"229\":1}}],[\"浮动规则\",{\"1\":{\"229\":1}}],[\"浮动盒\",{\"1\":{\"88\":1}}],[\"尺寸\",{\"1\":{\"229\":1}}],[\"布尔值\",{\"1\":{\"398\":1}}],[\"布局\",{\"1\":{\"229\":1}}],[\"布隆过滤器\",{\"1\":{\"9\":1}}],[\"级联\",{\"1\":{\"229\":1}}],[\"树会变\",{\"1\":{\"232\":1}}],[\"树是不对应的\",{\"1\":{\"229\":1}}],[\"树\",{\"1\":{\"229\":4,\"235\":1,\"442\":2}}],[\"树形结构\",{\"1\":{\"9\":1}}],[\"线程\",{\"1\":{\"229\":1}}],[\"线性探测法\",{\"1\":{\"33\":1}}],[\"线性数据结构\",{\"0\":{\"49\":1},\"1\":{\"9\":1}}],[\"遇到函数创建\",{\"1\":{\"358\":1}}],[\"遇到异步函数\",{\"1\":{\"313\":1}}],[\"遇到异步\",{\"1\":{\"311\":1}}],[\"遇到\",{\"1\":{\"229\":2}}],[\"寻址不使用\",{\"1\":{\"292\":1}}],[\"寻址\",{\"1\":{\"229\":1}}],[\"修饰\",{\"1\":{\"506\":1}}],[\"修饰符\",{\"1\":{\"355\":1}}],[\"修饰器和方法修饰器\",{\"1\":{\"227\":1}}],[\"修饰器添加\",{\"0\":{\"227\":1}}],[\"修改状态触发\",{\"1\":{\"482\":1}}],[\"修改\",{\"1\":{\"204\":1,\"232\":1,\"485\":1,\"486\":1}}],[\"针对作用域优化\",{\"0\":{\"364\":1}}],[\"针对这两种情况\",{\"1\":{\"225\":1}}],[\"针对树的遍历\",{\"1\":{\"10\":1}}],[\"另外\",{\"1\":{\"280\":1,\"394\":1}}],[\"另外该指标会在用户第一次交互后停止记录\",{\"1\":{\"165\":1}}],[\"另一边也必须为\",{\"1\":{\"398\":1}}],[\"另一方应答answer\",{\"1\":{\"278\":1}}],[\"另一种是\",{\"1\":{\"225\":1}}],[\"错误被\",{\"1\":{\"340\":1}}],[\"错误打印到控制台\",{\"1\":{\"340\":1}}],[\"错误会被内部捕获\",{\"1\":{\"340\":1}}],[\"错误处理\",{\"1\":{\"293\":1}}],[\"错误异常有两种场景的出现\",{\"1\":{\"225\":1}}],[\"错误捕获\",{\"1\":{\"99\":1}}],[\"组织\",{\"1\":{\"243\":1}}],[\"组建\",{\"1\":{\"224\":1}}],[\"组件会浅比较\",{\"1\":{\"534\":1}}],[\"组件本身控制要不要额外渲染\",{\"0\":{\"533\":1}}],[\"组件的一种更简洁\",{\"1\":{\"495\":1}}],[\"组件之外\",{\"1\":{\"482\":1}}],[\"组件类型\",{\"1\":{\"472\":1}}],[\"组件用\",{\"1\":{\"448\":1}}],[\"组件内部直接获取数据\",{\"1\":{\"308\":1}}],[\"组件方案\",{\"0\":{\"264\":1}}],[\"组件配置\",{\"0\":{\"153\":1}}],[\"组件接口设计与暴露\",{\"1\":{\"149\":1}}],[\"组件仓库物料堆设计\",{\"1\":{\"149\":1}}],[\"组件物料仓库设计\",{\"0\":{\"149\":1}}],[\"组件组装与数据导入\",{\"0\":{\"148\":1}}],[\"组件渲染后才开始请求数据\",{\"1\":{\"501\":1}}],[\"组件渲染\",{\"0\":{\"147\":1}}],[\"组件加载\",{\"1\":{\"145\":1}}],[\"组件\",{\"0\":{\"540\":1},\"1\":{\"144\":1,\"296\":1,\"449\":1,\"463\":1,\"490\":1}}],[\"新组件渲染传入的组件\",{\"1\":{\"455\":1}}],[\"新代码\",{\"1\":{\"435\":1}}],[\"新声代\",{\"0\":{\"378\":1}}],[\"新业务上线前预加载\",{\"1\":{\"365\":1}}],[\"新生代死多\",{\"1\":{\"384\":1}}],[\"新生代空间会被一分为二划分成两个相等大小的\",{\"1\":{\"379\":1}}],[\"新生代空间中垃圾回收过程中幸存下来的对象会被提升到老生代空间\",{\"1\":{\"377\":1}}],[\"新生代中活对象只占较小部分\",{\"1\":{\"384\":1}}],[\"新生代中对象满足是否经历过\",{\"1\":{\"382\":1}}],[\"新生代中的对象都非常小大约为\",{\"1\":{\"377\":1}}],[\"新生代中经历了几次\",{\"1\":{\"300\":1}}],[\"新生代和老生代\",{\"1\":{\"377\":1}}],[\"新生代与老生代\",{\"0\":{\"377\":1}}],[\"新生代\",{\"1\":{\"300\":1,\"376\":1}}],[\"新的函数中保存着父函数新的形参\",{\"1\":{\"496\":2}}],[\"新的\",{\"1\":{\"221\":1}}],[\"新标签页可以获取到原标签页的属性\",{\"1\":{\"207\":1}}],[\"检查定时器是否到时间\",{\"1\":{\"315\":1}}],[\"检查内存泄漏\",{\"0\":{\"302\":1}}],[\"检查文件变动\",{\"1\":{\"249\":1}}],[\"检查\",{\"1\":{\"221\":1,\"315\":1}}],[\"崩溃不会\",{\"1\":{\"221\":1}}],[\"崩溃或卡顿\",{\"1\":{\"221\":1}}],[\"至少在\",{\"1\":{\"221\":1}}],[\"配合cloneelement\",{\"1\":{\"529\":1}}],[\"配合\",{\"1\":{\"220\":1,\"221\":1,\"224\":1,\"249\":1,\"252\":1,\"521\":1}}],[\"配置$options\",{\"1\":{\"548\":1}}],[\"配置开启\",{\"1\":{\"365\":1}}],[\"配置样式\",{\"1\":{\"230\":1}}],[\"配置了\",{\"1\":{\"207\":1}}],[\"配置系统\",{\"1\":{\"153\":1}}],[\"配置面板\",{\"0\":{\"151\":1,\"153\":1}}],[\"配置面板搭建\",{\"1\":{\"144\":1}}],[\"配置\",{\"1\":{\"141\":2,\"153\":2,\"252\":1,\"261\":1,\"505\":1,\"544\":1}}],[\"监听前进后退按钮\",{\"1\":{\"546\":1}}],[\"监听\",{\"1\":{\"543\":1}}],[\"监听history变化\",{\"1\":{\"465\":1}}],[\"监听数据\",{\"1\":{\"293\":1}}],[\"监听onicecandidate事件获取candidate\",{\"1\":{\"278\":1}}],[\"监听promise未捕获的异常\",{\"1\":{\"225\":1}}],[\"监听未捕获的异常\",{\"1\":{\"225\":1}}],[\"监听window\",{\"1\":{\"163\":1}}],[\"监控网页崩溃\",{\"1\":{\"220\":1}}],[\"允许隐式类型转换\",{\"1\":{\"405\":1}}],[\"允许哪些域被允许跨域\",{\"1\":{\"217\":1}}],[\"允许老的重复分节在网络中消逝\",{\"1\":{\"176\":1}}],[\"给所有子组件\",{\"1\":{\"490\":1}}],[\"给所有的函数添加\",{\"1\":{\"221\":1}}],[\"给\",{\"1\":{\"486\":1}}],[\"给history添加监听\",{\"1\":{\"465\":1}}],[\"给到了这个\",{\"1\":{\"343\":1}}],[\"给到\",{\"1\":{\"229\":1}}],[\"给定一个\",{\"1\":{\"214\":1}}],[\"给对象添加迭代器\",{\"1\":{\"60\":1}}],[\"添加provider\",{\"1\":{\"465\":1}}],[\"添加\",{\"1\":{\"458\":1}}],[\"添加的两个命名属性name\",{\"1\":{\"372\":1}}],[\"添加属性会生成隐藏类\",{\"1\":{\"369\":1}}],[\"添加结构相同的属性\",{\"1\":{\"368\":1}}],[\"添加到具体项目\",{\"1\":{\"251\":1}}],[\"添加任何额外的自定义的\",{\"1\":{\"214\":1}}],[\"添加验证码\",{\"1\":{\"203\":1}}],[\"否则为第三方模块\",{\"1\":{\"434\":1}}],[\"否则必然触发预检\",{\"1\":{\"214\":1}}],[\"否则就直接是\",{\"1\":{\"47\":1}}],[\"概念\",{\"1\":{\"209\":1}}],[\"引用\",{\"0\":{\"407\":1}}],[\"引用计数\",{\"1\":{\"376\":1}}],[\"引擎不处理\",{\"1\":{\"312\":1}}],[\"引擎来统一处理\",{\"1\":{\"312\":1}}],[\"引擎来解释并运行\",{\"1\":{\"288\":1}}],[\"引擎\",{\"1\":{\"241\":1}}],[\"引擎线程\",{\"1\":{\"241\":1}}],[\"引擎互斥\",{\"1\":{\"241\":1}}],[\"引入\",{\"1\":{\"209\":1}}],[\"引起的渲染卡顿\",{\"1\":{\"166\":1}}],[\"站时访问到这个\",{\"1\":{\"209\":1}}],[\"站在\",{\"1\":{\"209\":1}}],[\"站种的\",{\"1\":{\"209\":1}}],[\"站种\",{\"1\":{\"209\":1}}],[\"站将会在\",{\"1\":{\"209\":1}}],[\"站\",{\"1\":{\"209\":1}}],[\"站访问\",{\"1\":{\"209\":1}}],[\"三个服务器\",{\"1\":{\"272\":1}}],[\"三方\",{\"0\":{\"208\":1},\"1\":{\"264\":1}}],[\"三次握手的原因\",{\"0\":{\"177\":1}}],[\"输出返回值\",{\"1\":{\"427\":1}}],[\"输出\",{\"1\":{\"339\":1,\"360\":3,\"361\":3}}],[\"输出口编码\",{\"1\":{\"204\":1}}],[\"输入\",{\"0\":{\"229\":1}}],[\"输入的位置数据并使用像旋转\",{\"1\":{\"97\":1}}],[\"白名单过滤标签属性\",{\"1\":{\"204\":1}}],[\"防抖\",{\"1\":{\"505\":1}}],[\"防御策略\",{\"1\":{\"204\":1}}],[\"防止旧的重复连接初始化造成混乱\",{\"1\":{\"177\":1}}],[\"防止阻塞\",{\"1\":{\"138\":1}}],[\"劫持\",{\"1\":{\"204\":1}}],[\"反向继承\",{\"0\":{\"456\":1}}],[\"反响代理\",{\"1\":{\"319\":1}}],[\"反射型\",{\"1\":{\"204\":1}}],[\"反转链表\",{\"1\":{\"52\":1}}],[\"存在\",{\"1\":{\"482\":1}}],[\"存在上下边界\",{\"1\":{\"14\":1}}],[\"存放\",{\"1\":{\"315\":1}}],[\"存储\",{\"1\":{\"443\":1}}],[\"存储模式\",{\"0\":{\"373\":1}}],[\"存储数据\",{\"1\":{\"243\":1}}],[\"存储中\",{\"1\":{\"209\":1}}],[\"存储型\",{\"1\":{\"204\":1}}],[\"嵌套的话有\",{\"1\":{\"479\":1}}],[\"嵌套改为用循环实现一次\",{\"1\":{\"66\":1}}],[\"嵌入站点\",{\"1\":{\"209\":1}}],[\"嵌入\",{\"1\":{\"204\":1}}],[\"头表明来源\",{\"1\":{\"206\":1}}],[\"头中自定义属性并验证\",{\"1\":{\"203\":1}}],[\"头没有设置强缓存\",{\"1\":{\"126\":1}}],[\"依赖\",{\"1\":{\"501\":1}}],[\"依赖关系是明确的\",{\"1\":{\"430\":1}}],[\"依赖加载顺序\",{\"1\":{\"427\":1}}],[\"依赖于浏览器的实现\",{\"1\":{\"203\":1}}],[\"依次把子节点加入队列中来实现\",{\"1\":{\"3\":1}}],[\"验证\",{\"1\":{\"203\":1}}],[\"验证二叉搜索树\",{\"1\":{\"47\":1}}],[\"攻击者脚本\",{\"1\":{\"204\":1}}],[\"攻击者在请求中添加数据\",{\"1\":{\"131\":1}}],[\"攻击主要有三种策略\",{\"1\":{\"203\":1}}],[\"攻击网站向被攻击网站服务器发起恶意请求\",{\"1\":{\"203\":1}}],[\"已登录用户访问攻击者网站\",{\"1\":{\"203\":1}}],[\"已经加载过的就不会再次加载\",{\"1\":{\"433\":1}}],[\"已经断开后\",{\"1\":{\"302\":1}}],[\"已经解析的标记\",{\"1\":{\"159\":1}}],[\"已经有实例就返回实例\",{\"1\":{\"60\":1}}],[\"安排内存空间\",{\"1\":{\"358\":1}}],[\"安全\",{\"0\":{\"202\":1}}],[\"安装内部包\",{\"1\":{\"251\":1}}],[\"安装\",{\"1\":{\"160\":1}}],[\"因此它的处理方式必须非常的快\",{\"1\":{\"379\":1}}],[\"因此在使用\",{\"1\":{\"280\":1}}],[\"因此必须在捕获阶段将其捕捉到才行\",{\"1\":{\"221\":1}}],[\"因此内容大小事先未知\",{\"1\":{\"201\":1}}],[\"因为此监听可以接收任意来源的\",{\"1\":{\"437\":1}}],[\"因为有\",{\"1\":{\"428\":1}}],[\"因为对象没有\",{\"1\":{\"419\":1}}],[\"因为新生代中对象的生命周期较短\",{\"1\":{\"381\":1}}],[\"因为\",{\"1\":{\"368\":1,\"406\":2}}],[\"因为要向系统写入文件\",{\"1\":{\"327\":1}}],[\"因为流是逐块来处理数据\",{\"1\":{\"309\":1}}],[\"因为无法构建\",{\"1\":{\"229\":1}}],[\"因为保存为\",{\"1\":{\"190\":1}}],[\"因为页面中的最大元素在渲染过程中可能会发生改变\",{\"1\":{\"165\":1}}],[\"因为平方根是单调递增的\",{\"1\":{\"15\":1}}],[\"禁用三方\",{\"1\":{\"209\":1}}],[\"禁用任何的事件缓存\",{\"1\":{\"201\":1}}],[\"禁用带\",{\"1\":{\"135\":1}}],[\"许多浏览器允许打开数量非常有限的\",{\"1\":{\"201\":1}}],[\"编写\",{\"0\":{\"303\":1}}],[\"编码之前\",{\"1\":{\"365\":1}}],[\"编码时可以知道内部的数据类型\",{\"1\":{\"351\":1}}],[\"编码的数据\",{\"1\":{\"280\":1}}],[\"编码和\",{\"1\":{\"201\":1}}],[\"编译就是处理字符串\",{\"1\":{\"435\":1}}],[\"编译后\",{\"1\":{\"389\":1}}],[\"编译原理\",{\"0\":{\"435\":1},\"1\":{\"328\":1}}],[\"编译node\",{\"0\":{\"324\":1}}],[\"编译为\",{\"0\":{\"331\":1},\"1\":{\"303\":1}}],[\"编译\",{\"1\":{\"253\":1}}],[\"编译成机器码\",{\"1\":{\"241\":1}}],[\"编译成字节码\",{\"1\":{\"241\":1}}],[\"编辑器渲染\",{\"0\":{\"146\":1}}],[\"尽量将中间件中的计算移到程序启动时执行\",{\"1\":{\"299\":1}}],[\"尽量减少未使用的\",{\"1\":{\"168\":1}}],[\"尽量减少参数数量\",{\"1\":{\"66\":1}}],[\"尽管很多包的依赖并不是\",{\"1\":{\"258\":1}}],[\"尽管可以使用\",{\"1\":{\"201\":1}}],[\"响应式\",{\"0\":{\"547\":1},\"1\":{\"539\":1,\"548\":1}}],[\"响应式不同\",{\"0\":{\"101\":1}}],[\"响应中设置安全头部\",{\"1\":{\"204\":1}}],[\"响应\",{\"1\":{\"200\":1,\"214\":1}}],[\"没有回调返回一个promise\",{\"1\":{\"541\":1}}],[\"没有deps\",{\"1\":{\"524\":1}}],[\"没有this\",{\"1\":{\"496\":1}}],[\"没有第二个参数\",{\"1\":{\"483\":1}}],[\"没有修改状态\",{\"1\":{\"482\":1}}],[\"没有了\",{\"1\":{\"480\":1}}],[\"没有创建\",{\"1\":{\"475\":1}}],[\"没有收集依赖\",{\"1\":{\"468\":1}}],[\"没有关系的窗口\",{\"0\":{\"439\":1}}],[\"没有父的话父就是自己window\",{\"1\":{\"438\":1}}],[\"没有properties\",{\"1\":{\"373\":1}}],[\"没有提升\",{\"1\":{\"330\":1}}],[\"没有指明目标并且找不到\",{\"1\":{\"326\":1}}],[\"没有被其他对象所引用的变量都会挂在\",{\"1\":{\"302\":1}}],[\"没有被捕获\",{\"1\":{\"225\":1}}],[\"没有被捕获的异常之后调用了\",{\"1\":{\"221\":1}}],[\"没有库之间的软连接\",{\"1\":{\"248\":1}}],[\"没有\",{\"1\":{\"229\":1,\"326\":1,\"339\":1,\"431\":1}}],[\"没有对应的\",{\"1\":{\"225\":1}}],[\"没有调用\",{\"1\":{\"214\":1}}],[\"没有身份验证凭证\",{\"1\":{\"196\":1}}],[\"没有测量网站对这些交互做出反应所需的时间\",{\"1\":{\"170\":1}}],[\"时执行\",{\"1\":{\"529\":1}}],[\"时机之后\",{\"1\":{\"501\":1}}],[\"时机到了\",{\"1\":{\"311\":1}}],[\"时可以确定是调用\",{\"1\":{\"445\":1}}],[\"时走缓存\",{\"1\":{\"365\":1}}],[\"时做\",{\"1\":{\"298\":1}}],[\"时\",{\"1\":{\"217\":1,\"343\":1}}],[\"时也必然会触发预检\",{\"1\":{\"214\":1}}],[\"时才发送该\",{\"1\":{\"209\":1}}],[\"时才会生效\",{\"1\":{\"209\":1}}],[\"时搜索引擎会抓取\",{\"1\":{\"190\":1}}],[\"时间不确定\",{\"1\":{\"479\":1}}],[\"时间效率\",{\"1\":{\"309\":1}}],[\"时间触发线程\",{\"1\":{\"241\":1}}],[\"时间\",{\"1\":{\"167\":1}}],[\"临时\",{\"0\":{\"190\":1}}],[\"临时椭圆曲线迪菲\",{\"1\":{\"179\":1}}],[\"永动机一样\",{\"1\":{\"311\":1}}],[\"永久\",{\"0\":{\"189\":1}}],[\"永远局部最优\",{\"1\":{\"24\":1}}],[\"默认就是\",{\"1\":{\"483\":1}}],[\"默认具有一个自有属性\",{\"1\":{\"396\":1}}],[\"默认返回\",{\"1\":{\"344\":1}}],[\"默认\",{\"1\":{\"343\":1}}],[\"默认是\",{\"1\":{\"341\":1}}],[\"默认模式\",{\"1\":{\"250\":1}}],[\"默认不断开连接\",{\"1\":{\"186\":1}}],[\"默认冒泡\",{\"1\":{\"82\":1}}],[\"博客页面\",{\"1\":{\"185\":1}}],[\"日志记录以及缓存优化等\",{\"1\":{\"185\":1}}],[\"注释\",{\"1\":{\"352\":1}}],[\"注意不仅仅是最后一行\",{\"1\":{\"326\":1}}],[\"注意不包含锚点信息\",{\"1\":{\"185\":1}}],[\"注意\",{\"0\":{\"306\":1}}],[\"注重职责的分离\",{\"1\":{\"296\":1}}],[\"注入上下文\",{\"1\":{\"543\":1}}],[\"注入\",{\"1\":{\"307\":1}}],[\"注入脚本进入被攻击者的网站\",{\"1\":{\"204\":1}}],[\"注入恶意的代码到服务器\",{\"1\":{\"204\":1}}],[\"注册回调\",{\"1\":{\"111\":1}}],[\"注册表\",{\"1\":{\"111\":1}}],[\"注册到组件实例上\",{\"1\":{\"106\":1}}],[\"主动推断函数的类型\",{\"0\":{\"356\":1}}],[\"主要针对于\",{\"1\":{\"289\":1}}],[\"主要用于服务器区分服务\",{\"1\":{\"182\":1}}],[\"主要用于跨域\",{\"1\":{\"182\":1}}],[\"主要用于二维图形的渲染\",{\"1\":{\"93\":1}}],[\"主进程\",{\"1\":{\"241\":1}}],[\"主机\",{\"1\":{\"184\":1}}],[\"表现不同\",{\"1\":{\"352\":1}}],[\"表文件商户餐等操作\",{\"1\":{\"280\":1}}],[\"表明请求来源\",{\"0\":{\"184\":1}}],[\"表示代码结构和规则\",{\"1\":{\"435\":1}}],[\"表示键值相关联的集合\",{\"1\":{\"411\":1}}],[\"表示唯一值的集合\",{\"1\":{\"411\":1}}],[\"表示对象的缺失\",{\"1\":{\"406\":1}}],[\"表示值的缺失\",{\"1\":{\"406\":1}}],[\"表示编译\",{\"1\":{\"326\":1}}],[\"表示可以缓存\",{\"1\":{\"217\":1}}],[\"表示可接收事件流类型\",{\"1\":{\"201\":1}}],[\"表示服务器流式传输动态生成的内容\",{\"1\":{\"201\":1}}],[\"表示标准要求的事件的媒体类型和编码\",{\"1\":{\"201\":1}}],[\"表示正在使用持久连接\",{\"1\":{\"201\":1}}],[\"表示一个打开的连接\",{\"1\":{\"176\":1}}],[\"表示资源会缓存的具体时间\",{\"1\":{\"124\":1}}],[\"锚点\",{\"1\":{\"182\":1}}],[\"协议层不使用\",{\"1\":{\"292\":1}}],[\"协议中的持久连接\",{\"1\":{\"201\":1}}],[\"协议的\",{\"1\":{\"200\":1}}],[\"协议\",{\"1\":{\"199\":1}}],[\"协议请求\",{\"1\":{\"199\":1}}],[\"协议+域名+查询参数\",{\"1\":{\"185\":1}}],[\"协议+域名+端口\",{\"1\":{\"182\":1}}],[\"协商缓存\",{\"0\":{\"125\":1},\"1\":{\"122\":1,\"192\":1}}],[\"效率高\",{\"0\":{\"232\":1},\"1\":{\"181\":1}}],[\"效果的应用\",{\"1\":{\"93\":1}}],[\"参照物\",{\"1\":{\"229\":1}}],[\"参数进行设定\",{\"1\":{\"325\":1}}],[\"参数进行映射处理\",{\"1\":{\"287\":1}}],[\"参数只能逐级传递\",{\"1\":{\"270\":1}}],[\"参数\",{\"1\":{\"184\":1}}],[\"参数就能计算出\",{\"1\":{\"180\":1}}],[\"参数封装成\",{\"1\":{\"66\":1}}],[\"参考\",{\"1\":{\"180\":1}}],[\"生命周期\",{\"0\":{\"500\":1},\"1\":{\"459\":1}}],[\"生命周期走完了\",{\"1\":{\"111\":1}}],[\"生成新的dispatch\",{\"1\":{\"487\":1}}],[\"生成新的\",{\"1\":{\"476\":1}}],[\"生成createelement\",{\"1\":{\"471\":1}}],[\"生成文本节点\",{\"1\":{\"460\":1}}],[\"生成宿主对象\",{\"1\":{\"460\":1}}],[\"生成一个\",{\"1\":{\"443\":1}}],[\"生成位图\",{\"1\":{\"229\":1}}],[\"生成\",{\"1\":{\"229\":1,\"443\":1,\"460\":1}}],[\"生成布局树\",{\"1\":{\"229\":1}}],[\"生成带有样式的\",{\"1\":{\"229\":1}}],[\"生成渲染任务传递给渲染进城中的主线程\",{\"1\":{\"229\":1}}],[\"生成另一个随机数\",{\"1\":{\"180\":1}}],[\"签名\",{\"1\":{\"180\":2}}],[\"证书中附带公钥\",{\"1\":{\"180\":2}}],[\"￼\",{\"1\":{\"180\":2}}],[\"椭圆曲线离散对数\",{\"0\":{\"180\":1},\"1\":{\"180\":1}}],[\"赫尔曼交换\",{\"1\":{\"179\":1}}],[\"了\",{\"1\":{\"179\":1,\"340\":1,\"344\":1}}],[\"确定timerfunc\",{\"1\":{\"541\":1}}],[\"确定的加密套件方法以及证书\",{\"1\":{\"179\":1}}],[\"确认好双方都支持的加密套件\",{\"1\":{\"180\":2}}],[\"确保一个流不会影响到其他的流\",{\"1\":{\"132\":1}}],[\"版本管理复杂\",{\"1\":{\"246\":1}}],[\"版本\",{\"1\":{\"179\":1,\"200\":1}}],[\"版本和供筛选的加密套件列表\",{\"1\":{\"179\":2,\"180\":1}}],[\"握手\",{\"1\":{\"179\":2}}],[\"握手后会决定是否使用\",{\"1\":{\"130\":1}}],[\"原生\",{\"1\":{\"434\":1}}],[\"原始值强制转换\",{\"1\":{\"412\":1}}],[\"原始值转换先调用\",{\"1\":{\"412\":1}}],[\"原始值\",{\"0\":{\"406\":1}}],[\"原型是function\",{\"1\":{\"401\":2}}],[\"原型链上的constructor\",{\"1\":{\"401\":1}}],[\"原型链\",{\"0\":{\"401\":1},\"1\":{\"328\":1,\"396\":1}}],[\"原来是要先\",{\"1\":{\"326\":1}}],[\"原子化\",{\"1\":{\"262\":1}}],[\"原\",{\"1\":{\"179\":2}}],[\"原理\",{\"0\":{\"465\":1,\"466\":1},\"1\":{\"131\":2,\"548\":1}}],[\"旧请求先到\",{\"1\":{\"177\":1}}],[\"全堆垃圾回收会一起回收老生代\",{\"1\":{\"386\":1}}],[\"全部为对象内保存属性\",{\"1\":{\"373\":1}}],[\"全拒绝返回\",{\"1\":{\"334\":1}}],[\"全兑现才兑现\",{\"1\":{\"334\":1}}],[\"全双工\",{\"1\":{\"293\":1}}],[\"全双工连接的终止\",{\"1\":{\"176\":1}}],[\"全局变量\",{\"1\":{\"482\":2}}],[\"全局变量污染\",{\"1\":{\"426\":1}}],[\"全局范围不能使用\",{\"1\":{\"430\":1}}],[\"全局的f\",{\"1\":{\"361\":1}}],[\"全局预编译\",{\"0\":{\"360\":1}}],[\"全局上下文执行阶段\",{\"1\":{\"358\":1}}],[\"全局上下文创建阶段\",{\"1\":{\"358\":1}}],[\"全局符号注册表\",{\"1\":{\"346\":1}}],[\"全局异常捕获\",{\"1\":{\"291\":1}}],[\"全局环境变量\",{\"1\":{\"290\":1}}],[\"全局事件的影响\",{\"1\":{\"266\":1}}],[\"全局捕获\",{\"1\":{\"221\":1}}],[\"全局捕获没有\",{\"1\":{\"220\":1}}],[\"全局监控静态资源异常\",{\"1\":{\"220\":1}}],[\"全局监控\",{\"1\":{\"220\":1}}],[\"全局错误捕获\",{\"0\":{\"219\":1}}],[\"全局\",{\"1\":{\"110\":1,\"223\":1,\"251\":1,\"548\":1}}],[\"接收mapstatetoprops\",{\"1\":{\"490\":1}}],[\"接收\",{\"1\":{\"278\":1,\"475\":1,\"485\":1,\"486\":2,\"487\":2}}],[\"接收端同样请求stun\",{\"1\":{\"278\":1}}],[\"接收端有两端端信息\",{\"1\":{\"278\":1}}],[\"接收端创建answer\",{\"1\":{\"278\":1}}],[\"接收端\",{\"1\":{\"278\":6,\"437\":1}}],[\"接收到它的连接终止请求的确认\",{\"1\":{\"176\":1}}],[\"接收到的数据可以被投递给用户\",{\"1\":{\"176\":1}}],[\"接口内部获取数据\",{\"1\":{\"308\":1}}],[\"接口的\",{\"1\":{\"221\":1}}],[\"接口\",{\"1\":{\"221\":1}}],[\"接着使用加密套件的密钥协商算法\",{\"1\":{\"180\":1}}],[\"接受通用的数据\",{\"1\":{\"97\":1}}],[\"接受\",{\"1\":{\"97\":1}}],[\"发起端发送\",{\"1\":{\"273\":1}}],[\"发生在\",{\"0\":{\"231\":1},\"1\":{\"231\":1}}],[\"发生在这里\",{\"1\":{\"229\":1}}],[\"发生什么\",{\"0\":{\"229\":1}}],[\"发送给发送端\",{\"1\":{\"278\":1}}],[\"发送端请求stun服务器\",{\"1\":{\"278\":1}}],[\"发送端请求本地流\",{\"1\":{\"278\":1}}],[\"发送端也知道两端信息\",{\"1\":{\"278\":1}}],[\"发送端\",{\"1\":{\"278\":3,\"437\":2}}],[\"发送端配置sdp\",{\"1\":{\"278\":1}}],[\"发送端创建offer\",{\"1\":{\"278\":1}}],[\"发送端实例\",{\"1\":{\"278\":1}}],[\"发送连接请求并且接收到匹配的连接请求以后等待连接请求确认\",{\"1\":{\"176\":1}}],[\"发送完一个连接请求后等待一个匹配的连接请求\",{\"1\":{\"176\":1}}],[\"发布者和订阅者\",{\"1\":{\"65\":1}}],[\"发布者\",{\"1\":{\"65\":1}}],[\"发布订阅\",{\"0\":{\"63\":1,\"65\":1}}],[\"发布订阅模式\",{\"1\":{\"62\":1}}],[\"告警\",{\"1\":{\"172\":1}}],[\"阈值设置\",{\"1\":{\"172\":1}}],[\"定时\",{\"1\":{\"311\":1}}],[\"定时器触发线程\",{\"1\":{\"241\":1}}],[\"定制类的哈希字符串的格式\",{\"1\":{\"261\":1}}],[\"定位问题\",{\"1\":{\"172\":1}}],[\"定位问题分派\",{\"1\":{\"172\":1}}],[\"定义$parent\",{\"1\":{\"548\":1}}],[\"定义一个新\",{\"1\":{\"354\":1}}],[\"定义一个对象\",{\"1\":{\"61\":1}}],[\"定义\",{\"1\":{\"301\":1,\"548\":1}}],[\"定义了物体的外观\",{\"1\":{\"94\":1}}],[\"定义了物体的形状\",{\"1\":{\"94\":1}}],[\"汇总展示\",{\"1\":{\"172\":1}}],[\"避免代码过度集中\",{\"1\":{\"365\":1}}],[\"避免全局查找\",{\"1\":{\"364\":2}}],[\"避免创建包装对象\",{\"1\":{\"346\":1}}],[\"避免内存泄漏\",{\"1\":{\"300\":1,\"387\":1}}],[\"避免服务器根据\",{\"1\":{\"206\":1}}],[\"避免资源浪费\",{\"1\":{\"177\":1}}],[\"避免大量渲染更新\",{\"1\":{\"171\":1}}],[\"避免不必要的模块加载\",{\"1\":{\"387\":1}}],[\"避免不必要的\",{\"1\":{\"171\":1}}],[\"避免或分解长任务\",{\"1\":{\"171\":1}}],[\"避免重定向\",{\"0\":{\"121\":1},\"1\":{\"121\":1}}],[\"衡量页面的整体响应能力\",{\"1\":{\"170\":1}}],[\"点击恶意链接\",{\"1\":{\"204\":1}}],[\"点击的处理时间\",{\"1\":{\"170\":1}}],[\"点对点\",{\"1\":{\"181\":1}}],[\"点到点\",{\"1\":{\"172\":1}}],[\"点光源\",{\"1\":{\"94\":1}}],[\"y是全局的\",{\"1\":{\"363\":1}}],[\"y\",{\"1\":{\"363\":3}}],[\"yarn\",{\"0\":{\"251\":1}}],[\"yield\",{\"1\":{\"171\":1,\"345\":2,\"493\":1}}],[\"yy\",{\"1\":{\"169\":3}}],[\"y=x2n​\",{\"1\":{\"74\":1}}],[\"除\",{\"1\":{\"184\":1,\"368\":1}}],[\"除了相应用户输入\",{\"1\":{\"169\":1}}],[\"除根节点外每一个节点都只包含一个字符\",{\"1\":{\"28\":1}}],[\"｜\",{\"1\":{\"168\":1}}],[\"减小请求数量和请求文件大小\",{\"1\":{\"168\":1}}],[\"减少请求数\",{\"1\":{\"365\":1}}],[\"减少作用域查找的深度\",{\"1\":{\"364\":1}}],[\"减少分配及销毁的消耗\",{\"1\":{\"301\":1}}],[\"减少不必要计算\",{\"1\":{\"299\":1}}],[\"减少内存使用\",{\"0\":{\"301\":1},\"1\":{\"283\":1,\"300\":1}}],[\"减少重排重绘\",{\"1\":{\"169\":1}}],[\"减少长逻辑\",{\"1\":{\"168\":1}}],[\"减少\",{\"1\":{\"168\":2}}],[\"减少第三方代码的影响\",{\"1\":{\"168\":1}}],[\"减少打包范围\",{\"1\":{\"141\":1}}],[\"替换到store中\",{\"1\":{\"308\":1}}],[\"替换当前状态\",{\"1\":{\"79\":1}}],[\"替代\",{\"0\":{\"168\":1,\"170\":1}}],[\"被观察者\",{\"1\":{\"488\":1}}],[\"被观察者提供\",{\"1\":{\"488\":1}}],[\"被shouldyield打断了\",{\"1\":{\"480\":1}}],[\"被更新的\",{\"1\":{\"442\":1}}],[\"被预编译到iife内\",{\"1\":{\"363\":1}}],[\"被for\",{\"1\":{\"346\":1}}],[\"被设置为\",{\"1\":{\"214\":1}}],[\"被攻击网站\",{\"1\":{\"204\":1}}],[\"被\",{\"0\":{\"168\":1},\"1\":{\"346\":2}}],[\"被需要\",{\"1\":{\"36\":1}}],[\"懒加载\",{\"0\":{\"464\":1},\"1\":{\"167\":1,\"365\":1}}],[\"背景图或利用\",{\"1\":{\"167\":1}}],[\"背景色\",{\"1\":{\"88\":1}}],[\"预定一个调度\",{\"1\":{\"480\":1}}],[\"预定\",{\"1\":{\"480\":1}}],[\"预编译函数\",{\"1\":{\"361\":1}}],[\"预编译结束\",{\"1\":{\"360\":1}}],[\"预编译\",{\"0\":{\"357\":1,\"359\":1}}],[\"预编译过程中\",{\"1\":{\"330\":1}}],[\"预解析线程\",{\"1\":{\"229\":1}}],[\"预解析发现\",{\"1\":{\"167\":1}}],[\"预检响应头\",{\"0\":{\"217\":1}}],[\"预检请求头\",{\"0\":{\"216\":1}}],[\"预加载\",{\"1\":{\"122\":1,\"365\":1}}],[\"缩小压缩\",{\"1\":{\"168\":1}}],[\"缩小\",{\"1\":{\"167\":1}}],[\"视觉稳定性\",{\"1\":{\"165\":1}}],[\"网址内容\",{\"1\":{\"190\":1}}],[\"网址\",{\"1\":{\"189\":1}}],[\"网页响应能力\",{\"1\":{\"165\":1}}],[\"网络协商\",{\"1\":{\"278\":2}}],[\"网络信息\",{\"1\":{\"273\":2}}],[\"网络进程\",{\"1\":{\"241\":1}}],[\"网络进程中的线程获取\",{\"1\":{\"229\":1}}],[\"网络请求等\",{\"1\":{\"311\":1}}],[\"网络请求\",{\"1\":{\"117\":1}}],[\"网络\",{\"0\":{\"174\":1},\"1\":{\"99\":1,\"144\":1,\"145\":1,\"315\":1,\"451\":1}}],[\"鼠标按下和指针按下\",{\"1\":{\"165\":1}}],[\"官方推荐的时间区间\",{\"1\":{\"165\":1}}],[\"该语言通常默认为\",{\"1\":{\"406\":1}}],[\"该资源的请求\",{\"1\":{\"218\":1}}],[\"该时间会随着页面渲染变化而变化\",{\"1\":{\"165\":1}}],[\"该对象封装了系统中对象间的交互方式\",{\"1\":{\"61\":1}}],[\"秒内表示体验优秀\",{\"1\":{\"165\":1}}],[\"秒内完成的话我们的页面就算体验优秀\",{\"1\":{\"165\":1}}],[\"秒内多个修改\",{\"1\":{\"125\":1}}],[\"及\",{\"1\":{\"165\":1,\"221\":1}}],[\"脏轮询脏检查\",{\"1\":{\"163\":1}}],[\"造成幽灵依赖\",{\"1\":{\"160\":1}}],[\"扁平化\",{\"1\":{\"160\":1}}],[\"间接依赖的包用软连接放入\",{\"1\":{\"159\":1}}],[\"目录\",{\"1\":{\"159\":1}}],[\"未解析的查找\",{\"1\":{\"159\":1}}],[\"符号链接指向的是另一个文件或目录\",{\"1\":{\"158\":1}}],[\"符号连接\",{\"0\":{\"157\":1}}],[\"指针去读取\",{\"1\":{\"498\":1}}],[\"指针逐层向下调和\",{\"1\":{\"476\":1}}],[\"指标\",{\"1\":{\"317\":1}}],[\"指引信息\",{\"1\":{\"229\":1}}],[\"指向上一个快照的map地址\",{\"1\":{\"369\":1}}],[\"指向上一个隐藏类\",{\"1\":{\"368\":1}}],[\"指向函数调用\",{\"1\":{\"358\":1}}],[\"指向\",{\"1\":{\"358\":1,\"401\":2}}],[\"指向同一个\",{\"1\":{\"183\":1}}],[\"指向外部存储\",{\"1\":{\"157\":1}}],[\"指向外部存储地址\",{\"1\":{\"155\":1}}],[\"指令\",{\"1\":{\"120\":1}}],[\"软件主要是管理数据\",{\"1\":{\"482\":1}}],[\"软件实体\",{\"1\":{\"62\":1}}],[\"软连接指向\",{\"1\":{\"157\":1}}],[\"软连接\",{\"0\":{\"155\":1,\"157\":1}}],[\"硬盘\",{\"1\":{\"297\":1}}],[\"硬链接在链接完成后仅和文件内容关联\",{\"1\":{\"158\":1}}],[\"硬链接是一个实实在在的文件\",{\"1\":{\"158\":1}}],[\"硬链接仅能链接文件\",{\"1\":{\"158\":1}}],[\"硬连接\",{\"0\":{\"155\":1,\"156\":1}}],[\"硬件操作\",{\"1\":{\"80\":1}}],[\"来决定是否渲染\",{\"1\":{\"534\":1}}],[\"来决定组件要不要更新\",{\"1\":{\"513\":1}}],[\"来实现\",{\"1\":{\"390\":1}}],[\"来实现复杂的动画效果\",{\"1\":{\"94\":1}}],[\"来顺序执行\",{\"1\":{\"338\":1}}],[\"来控制新的\",{\"1\":{\"338\":1}}],[\"来托管客户端文件\",{\"1\":{\"305\":1}}],[\"来订阅服务器事件\",{\"1\":{\"201\":1}}],[\"来源页面采用的协议为表示本地文件的\",{\"1\":{\"185\":1}}],[\"来进行定位\",{\"1\":{\"183\":1}}],[\"来避免携带\",{\"1\":{\"182\":1}}],[\"来\",{\"1\":{\"153\":1}}],[\"驱动的模式配置\",{\"1\":{\"153\":1}}],[\"拖拽布局模式设计\",{\"1\":{\"152\":1}}],[\"拖拽布局与内容提取\",{\"1\":{\"152\":1}}],[\"拖拽布局系统\",{\"0\":{\"152\":1}}],[\"画\",{\"1\":{\"229\":1}}],[\"画布\",{\"0\":{\"152\":1}}],[\"画幅稳定\",{\"1\":{\"143\":1}}],[\"加入微队列\",{\"1\":{\"339\":2}}],[\"加入到微队列中\",{\"1\":{\"339\":1}}],[\"加入本地媒体流\",{\"1\":{\"278\":1}}],[\"加包序号标记\",{\"1\":{\"293\":1}}],[\"加载为\",{\"1\":{\"490\":1}}],[\"加载还没有\",{\"1\":{\"433\":1}}],[\"加载的本质就是拿到代码模块并执行\",{\"1\":{\"427\":1}}],[\"加载的图片解析不到\",{\"1\":{\"167\":1}}],[\"加载过的模块缓存\",{\"1\":{\"427\":1}}],[\"加载并执行\",{\"1\":{\"427\":1}}],[\"加载客户端入口文件\",{\"1\":{\"305\":1}}],[\"加载vue\",{\"1\":{\"305\":1}}],[\"加载\",{\"1\":{\"229\":1,\"365\":1}}],[\"加载资源失败的元素会触发一个\",{\"1\":{\"221\":1}}],[\"加载完默认字体再显示\",{\"1\":{\"169\":1}}],[\"加载数据源配置\",{\"0\":{\"150\":1}}],[\"加速的\",{\"1\":{\"375\":1}}],[\"加速静态资源\",{\"1\":{\"365\":1}}],[\"加速开发\",{\"1\":{\"246\":1}}],[\"加速\",{\"1\":{\"94\":1}}],[\"物料仓库搭建\",{\"1\":{\"144\":1}}],[\"整体执行流程\",{\"0\":{\"548\":1},\"1\":{\"539\":1}}],[\"整体运行结构与架构设计\",{\"0\":{\"144\":1}}],[\"整理的过程中\",{\"1\":{\"385\":1}}],[\"整个项目全量发布\",{\"1\":{\"250\":1}}],[\"整个程序流程也就结束了\",{\"1\":{\"111\":1}}],[\"独立哈希名\",{\"1\":{\"143\":1}}],[\"独立线程\",{\"1\":{\"116\":1}}],[\"样式计算\",{\"1\":{\"229\":1}}],[\"样式隔离\",{\"1\":{\"143\":1}}],[\"样式和\",{\"1\":{\"143\":1}}],[\"导入和导出语句没有动态部分\",{\"1\":{\"349\":1}}],[\"导出具名或默认元素\",{\"1\":{\"434\":1}}],[\"导出一个新对象\",{\"1\":{\"434\":1}}],[\"导出的是对象\",{\"1\":{\"430\":1}}],[\"导出的为引用\",{\"1\":{\"430\":1}}],[\"导出有具名成员\",{\"1\":{\"430\":1}}],[\"导出成员\",{\"1\":{\"427\":1}}],[\"导出\",{\"1\":{\"143\":1}}],[\"导致\",{\"1\":{\"89\":1,\"501\":1}}],[\"融合\",{\"1\":{\"143\":1}}],[\"能防止内部的nexttick\",{\"1\":{\"541\":1}}],[\"能被单一的\",{\"1\":{\"221\":1}}],[\"能实现微调\",{\"1\":{\"143\":1}}],[\"能够处理更复杂和资源密集的图形任务\",{\"1\":{\"94\":1}}],[\"浏览器前进后退\",{\"1\":{\"545\":1}}],[\"浏览器网络请求\",{\"1\":{\"434\":1}}],[\"浏览器需要异步加载\",{\"1\":{\"430\":1}}],[\"浏览器内存\",{\"0\":{\"366\":1}}],[\"浏览器连接个数限制\",{\"1\":{\"365\":1}}],[\"浏览器会根据刷新了计算下一次渲染的时间来判断是否执行\",{\"1\":{\"312\":1}}],[\"浏览器会判定只会在顶级站点为\",{\"1\":{\"209\":1}}],[\"浏览器中先来后到\",{\"1\":{\"315\":1}}],[\"浏览器中\",{\"0\":{\"313\":1},\"1\":{\"312\":1}}],[\"浏览器访问\",{\"1\":{\"298\":1}}],[\"浏览器不支持模块系统\",{\"1\":{\"257\":1}}],[\"浏览器进程\",{\"0\":{\"229\":1},\"1\":{\"241\":1}}],[\"浏览器\",{\"0\":{\"221\":1},\"1\":{\"312\":1,\"365\":1}}],[\"浏览器根据响应头中的值来判断是否拦截\",{\"1\":{\"213\":1}}],[\"浏览器限制\",{\"1\":{\"186\":1}}],[\"浏览器接收\",{\"1\":{\"180\":2}}],[\"浏览器向服务器发送随机数\",{\"1\":{\"180\":1}}],[\"浏览器向服务器发送\",{\"1\":{\"179\":2}}],[\"浏览器渲染慢\",{\"1\":{\"143\":1}}],[\"浏览器系统信息\",{\"1\":{\"80\":1}}],[\"屏幕尺寸兼容性需要处理\",{\"1\":{\"143\":1}}],[\"屏幕上\",{\"1\":{\"94\":1}}],[\"页面更新之前\",{\"1\":{\"521\":1}}],[\"页面渲染完立即马上触发\",{\"1\":{\"465\":1}}],[\"页面需要\",{\"1\":{\"365\":1}}],[\"页面加载\",{\"1\":{\"317\":1}}],[\"页面加载流程\",{\"0\":{\"228\":1},\"1\":{\"99\":1}}],[\"页面滚动\",{\"1\":{\"317\":1}}],[\"页面分为多个\",{\"1\":{\"173\":1}}],[\"页面快照\",{\"1\":{\"169\":1}}],[\"页面结构\",{\"1\":{\"165\":1}}],[\"页面传参\",{\"1\":{\"150\":1}}],[\"页面调优\",{\"1\":{\"143\":1}}],[\"选择到\",{\"1\":{\"209\":1}}],[\"选择\",{\"1\":{\"143\":1}}],[\"选型\",{\"0\":{\"143\":1}}],[\"回收\",{\"1\":{\"382\":1}}],[\"回调触发完了\",{\"1\":{\"541\":1}}],[\"回调\",{\"1\":{\"315\":1}}],[\"回调函数处理\",{\"1\":{\"225\":1}}],[\"回流\",{\"1\":{\"140\":1}}],[\"回溯\",{\"1\":{\"10\":1,\"24\":1}}],[\"同update与updatequeue类似的更新逻辑\",{\"1\":{\"444\":1}}],[\"同理function也是构造器\",{\"1\":{\"401\":1}}],[\"同为+0\",{\"1\":{\"400\":1}}],[\"同域下的\",{\"1\":{\"365\":1}}],[\"同域共享cookie\",{\"1\":{\"163\":1}}],[\"同域共享localstorage\",{\"1\":{\"163\":1}}],[\"同名函数和变量\",{\"1\":{\"362\":1}}],[\"同名函数\",{\"1\":{\"362\":1}}],[\"同名变量\",{\"1\":{\"362\":1}}],[\"同一个模版\",{\"1\":{\"296\":1}}],[\"同一级\",{\"1\":{\"160\":1}}],[\"同\",{\"1\":{\"293\":1,\"427\":1,\"430\":1}}],[\"同时用\",{\"0\":{\"332\":1}}],[\"同时一些软件的配置文件你可以通过指定\",{\"1\":{\"325\":1}}],[\"同时请求服务器的请求数量\",{\"1\":{\"297\":1}}],[\"同时\",{\"1\":{\"199\":1,\"375\":1}}],[\"同时将网址保存为\",{\"1\":{\"189\":1}}],[\"同步执行\",{\"1\":{\"478\":1}}],[\"同步\",{\"1\":{\"468\":1}}],[\"同步加载文件\",{\"1\":{\"434\":1}}],[\"同步加载的意思是\",{\"1\":{\"427\":1}}],[\"同步加载\",{\"1\":{\"427\":1}}],[\"同步代码也归为宏任务<script>\",{\"1\":{\"312\":1}}],[\"同步代码\",{\"1\":{\"311\":1,\"313\":1}}],[\"同步调用\",{\"1\":{\"271\":1}}],[\"同步双方的初始序列号\",{\"1\":{\"177\":1}}],[\"同步下载\",{\"1\":{\"139\":1}}],[\"同源\",{\"1\":{\"162\":1}}],[\"同排序后结果比较\",{\"1\":{\"47\":1}}],[\"阻塞解析渲染\",{\"1\":{\"167\":1}}],[\"阻塞性代码\",{\"1\":{\"140\":1}}],[\"阻塞\",{\"1\":{\"139\":1,\"232\":1}}],[\"阻止继续冒泡或捕获\",{\"1\":{\"82\":1}}],[\"恢复连接不需要往返\",{\"1\":{\"136\":1}}],[\"建立一个\",{\"1\":{\"186\":1}}],[\"建立连接只需要一次往返\",{\"1\":{\"136\":1}}],[\"建堆\",{\"0\":{\"43\":1}}],[\"域名+端口\",{\"1\":{\"182\":1}}],[\"域名的方式\",{\"1\":{\"135\":1}}],[\"域名服务器\",{\"1\":{\"135\":1}}],[\"由\",{\"1\":{\"443\":3}}],[\"由于\",{\"1\":{\"498\":1}}],[\"由于只复制存活的对象\",{\"1\":{\"381\":1}}],[\"由于网络请求异常不会事件冒泡\",{\"1\":{\"221\":1}}],[\"由于无法压缩首部\",{\"1\":{\"135\":1}}],[\"由浏览器在浏览器呈现的下一帧中呈现\",{\"1\":{\"170\":1}}],[\"由此来优化页面性能\",{\"1\":{\"132\":1}}],[\"雪碧图之类的没有必要\",{\"1\":{\"135\":1}}],[\"个数\",{\"0\":{\"338\":1}}],[\"个包\",{\"1\":{\"252\":1}}],[\"个进程\",{\"1\":{\"241\":1}}],[\"个连接\",{\"1\":{\"201\":1}}],[\"个\",{\"1\":{\"134\":1,\"186\":1,\"441\":1}}],[\"所在县\",{\"1\":{\"321\":2}}],[\"所在省\",{\"1\":{\"321\":2}}],[\"所在省县\",{\"1\":{\"321\":2}}],[\"所定义的\",{\"1\":{\"301\":1}}],[\"所有构造器的原型都是function\",{\"1\":{\"401\":1}}],[\"所有都敲定\",{\"1\":{\"334\":1}}],[\"所有新创建的都进入新生代\",{\"1\":{\"300\":1}}],[\"所有的构造器也都是一个普通\",{\"1\":{\"401\":1}}],[\"所有的\",{\"1\":{\"288\":1,\"540\":1}}],[\"所有的工作都会受到影响\",{\"1\":{\"134\":1}}],[\"所有包共用一个版本号\",{\"1\":{\"250\":1}}],[\"所有加载项完毕出发\",{\"1\":{\"235\":1}}],[\"所有类型的请求都包含此\",{\"1\":{\"185\":1}}],[\"所以更新只能从头遍历一边\",{\"1\":{\"468\":1}}],[\"所以模块都只执行一次\",{\"1\":{\"428\":1}}],[\"所以字符串不变\",{\"1\":{\"406\":1}}],[\"所以无法大规模地应用到所有的垃圾回收中\",{\"1\":{\"381\":1}}],[\"所以无效的\",{\"1\":{\"375\":1}}],[\"所以它在时间效率上有优异的表现\",{\"1\":{\"381\":1}}],[\"所以在\",{\"1\":{\"343\":1}}],[\"所以在做服务器端渲染时\",{\"1\":{\"134\":1}}],[\"所以回调如果是长任务会阻塞渲染\",{\"1\":{\"312\":1}}],[\"所以需要\",{\"1\":{\"384\":1}}],[\"所以需要实现异步\",{\"1\":{\"310\":1}}],[\"所以需要模运算\",{\"1\":{\"32\":1}}],[\"所以还需要配合服务端日志才进行排查分析才可以\",{\"1\":{\"221\":1}}],[\"所以才会对非简单请求做预校验的优化\",{\"1\":{\"213\":1}}],[\"所以建议取消掉禁用\",{\"1\":{\"135\":1}}],[\"所以\",{\"1\":{\"102\":1,\"351\":1}}],[\"所以我们一般叫做聚合函数\",{\"1\":{\"98\":1}}],[\"之修改了\",{\"1\":{\"394\":1}}],[\"之前的生命周期\",{\"0\":{\"522\":1}}],[\"之前调用\",{\"1\":{\"516\":1}}],[\"之前就是\",{\"1\":{\"468\":1}}],[\"之前已经\",{\"1\":{\"340\":2}}],[\"之前没有\",{\"1\":{\"340\":1}}],[\"之前说到\",{\"1\":{\"134\":1}}],[\"之后改变响应式对象\",{\"1\":{\"547\":1}}],[\"之后异步调用\",{\"1\":{\"492\":1}}],[\"之后开始更新\",{\"1\":{\"478\":1}}],[\"之后执行\",{\"1\":{\"451\":1,\"488\":1}}],[\"之后进行循环更新\",{\"1\":{\"444\":1}}],[\"之后再赋值回\",{\"1\":{\"442\":1}}],[\"之后的生命周期\",{\"0\":{\"523\":1}}],[\"之后的语句相当于放到了\",{\"1\":{\"344\":1}}],[\"之后的代码不执行\",{\"1\":{\"340\":1}}],[\"之后的代码都会执行\",{\"1\":{\"340\":2}}],[\"之后的代码都不执行\",{\"1\":{\"340\":1}}],[\"之后都不会执行\",{\"1\":{\"340\":1}}],[\"之后用props注入到组件中渲染\",{\"1\":{\"308\":1}}],[\"之后发送端请求stun\",{\"1\":{\"278\":1}}],[\"之后发\",{\"1\":{\"139\":1}}],[\"之间通信\",{\"1\":{\"436\":1,\"439\":1}}],[\"之间用户首次与页面交互时响应的延迟\",{\"1\":{\"165\":1}}],[\"之间不会合并\",{\"1\":{\"90\":1}}],[\"之间的空格\",{\"0\":{\"89\":1}}],[\"泛指\",{\"1\":{\"132\":1}}],[\"他们构成了单独的\",{\"1\":{\"132\":1}}],[\"链接上独立的\",{\"1\":{\"132\":1}}],[\"链表形式\",{\"0\":{\"472\":1}}],[\"链表实现\",{\"1\":{\"34\":1}}],[\"链表\",{\"0\":{\"51\":1},\"1\":{\"33\":1,\"51\":1,\"443\":1,\"472\":2}}],[\"链表不可以\",{\"1\":{\"14\":1}}],[\"流程\",{\"0\":{\"311\":1}}],[\"流式传输充分地利用\",{\"1\":{\"309\":1}}],[\"流媒体中转服务器\",{\"1\":{\"272\":1}}],[\"流量控制\",{\"1\":{\"132\":1}}],[\"流是\",{\"1\":{\"132\":1}}],[\"流\",{\"0\":{\"132\":1},\"1\":{\"315\":1}}],[\"服务一样需要服务端和客户端\",{\"1\":{\"293\":1}}],[\"服务端无响应性\",{\"1\":{\"306\":1}}],[\"服务端推送\",{\"1\":{\"267\":1}}],[\"服务端不存储恶意代码\",{\"1\":{\"204\":1}}],[\"服务端一般使用\",{\"1\":{\"185\":1}}],[\"服务端据此判断是否允许跨域\",{\"1\":{\"184\":1}}],[\"服务端渲染\",{\"1\":{\"167\":1}}],[\"服务端响应时间\",{\"1\":{\"166\":1}}],[\"服务端根据索引还原对应首部\",{\"1\":{\"131\":1}}],[\"服务器还向这个\",{\"1\":{\"302\":1}}],[\"服务器创建\",{\"1\":{\"278\":1}}],[\"服务器中转\",{\"1\":{\"275\":1}}],[\"服务器将\",{\"1\":{\"229\":1}}],[\"服务器添加响应头access\",{\"1\":{\"213\":1}}],[\"服务器确认订阅\",{\"1\":{\"201\":1}}],[\"服务器向客户端发送文本消息的技术\",{\"1\":{\"201\":1}}],[\"服务器用私钥解密这个被加密后的\",{\"1\":{\"180\":1}}],[\"服务器接收到\",{\"1\":{\"180\":2}}],[\"服务器接收到数据也会创建对应的表\",{\"1\":{\"131\":1}}],[\"服务器返回\",{\"1\":{\"179\":1}}],[\"服务器优化\",{\"1\":{\"167\":1}}],[\"服务器端推送可以主动给客户端推送资源\",{\"1\":{\"134\":1}}],[\"服务器端可以主动将资源发给客户端\",{\"1\":{\"133\":1}}],[\"服务器推送\",{\"0\":{\"133\":1}}],[\"服务器只能根据文本换行符来拆分请求数据\",{\"1\":{\"131\":1}}],[\"服务器上的\",{\"1\":{\"121\":1}}],[\"进额外的\",{\"1\":{\"365\":1}}],[\"进制转换\",{\"1\":{\"280\":1}}],[\"进程管理\",{\"1\":{\"291\":1}}],[\"进程线程\",{\"0\":{\"241\":1}}],[\"进程绘制\",{\"1\":{\"235\":1}}],[\"进程帮助\",{\"1\":{\"229\":1}}],[\"进程\",{\"1\":{\"229\":4,\"241\":1}}],[\"进入\",{\"1\":{\"197\":1}}],[\"进而搞清楚所有的加密数据内容\",{\"1\":{\"131\":1}}],[\"进行合并\",{\"1\":{\"506\":1}}],[\"进行互换\",{\"1\":{\"379\":1}}],[\"进行\",{\"1\":{\"298\":1,\"302\":1}}],[\"进行操作\",{\"1\":{\"289\":1,\"492\":1}}],[\"进行服务端开发时\",{\"1\":{\"280\":1}}],[\"进行一次\",{\"1\":{\"186\":1}}],[\"进行通信\",{\"1\":{\"111\":1}}],[\"进行光栅化\",{\"1\":{\"97\":1}}],[\"观察压缩加密后的数据量\",{\"1\":{\"131\":1}}],[\"观察者提供\",{\"1\":{\"488\":1}}],[\"观察者模式\",{\"0\":{\"64\":1},\"1\":{\"482\":1,\"486\":1}}],[\"观察者\",{\"0\":{\"63\":1},\"1\":{\"488\":1}}],[\"请求瀑布问题\",{\"0\":{\"501\":1}}],[\"请求一个\",{\"1\":{\"365\":1}}],[\"请求一般一次进行一个\",{\"1\":{\"186\":1}}],[\"请求信令服务器\",{\"1\":{\"278\":1}}],[\"请求线程\",{\"1\":{\"241\":1}}],[\"请求方法必须是以下之一\",{\"1\":{\"214\":1}}],[\"请求\",{\"1\":{\"186\":3,\"200\":1,\"201\":1,\"431\":1}}],[\"请求中未使用readablestream对象\",{\"1\":{\"214\":1}}],[\"请求中\",{\"1\":{\"184\":1}}],[\"请求标头\",{\"1\":{\"184\":1}}],[\"请求头识别访问来源\",{\"1\":{\"185\":1}}],[\"请求头\",{\"0\":{\"182\":1}}],[\"请求和响应\",{\"1\":{\"132\":1}}],[\"请求和响应可以交织在一起\",{\"1\":{\"131\":1}}],[\"请求发送时根据首部创建一张表\",{\"1\":{\"131\":1}}],[\"请求响应过程中做\",{\"1\":{\"299\":1}}],[\"请求响应过程\",{\"0\":{\"127\":1}}],[\"当组件中通过\",{\"1\":{\"493\":1}}],[\"当某些东西没有值时\",{\"1\":{\"406\":1}}],[\"当添加a\",{\"1\":{\"372\":1}}],[\"当这个\",{\"1\":{\"343\":1}}],[\"当你将数据推送到可读流中时\",{\"1\":{\"309\":1}}],[\"当你在使用\",{\"1\":{\"131\":1}}],[\"当打洞失败时\",{\"1\":{\"275\":1}}],[\"当该值为\",{\"1\":{\"217\":1}}],[\"当页面响应交互时\",{\"1\":{\"170\":1}}],[\"当\",{\"1\":{\"158\":1,\"447\":2}}],[\"当有一个连接发生丢包时\",{\"1\":{\"134\":1}}],[\"当一段接收并消费被发送的数据时\",{\"1\":{\"132\":1}}],[\"当前\",{\"1\":{\"355\":1}}],[\"当前请求页面采用的是非安全协议\",{\"1\":{\"185\":1}}],[\"当前请求页面的来源页面的完整路径\",{\"1\":{\"185\":1}}],[\"当前请求资源所在页面的协议\",{\"1\":{\"184\":1}}],[\"当前节点等于\",{\"1\":{\"47\":1}}],[\"当前节点没有返回\",{\"1\":{\"47\":1}}],[\"当前节点需要比上次一节点大\",{\"1\":{\"47\":1}}],[\"当前子节点树与前继父节点比较\",{\"1\":{\"47\":1}}],[\"当前列撇捺需要移除o\",{\"1\":{\"22\":1}}],[\"仅包括域名和端口号\",{\"1\":{\"183\":1}}],[\"仅测量延迟\",{\"1\":{\"170\":1}}],[\"仅限于单击\",{\"1\":{\"165\":1}}],[\"仅仅使用二进制协议还不够\",{\"1\":{\"131\":1}}],[\"仅针对这个条件\",{\"1\":{\"68\":1}}],[\"首要原因\",{\"1\":{\"177\":1}}],[\"首屏优化\",{\"1\":{\"167\":1}}],[\"首屏资源与其他资源分离\",{\"1\":{\"129\":1}}],[\"首次可交互时间\",{\"1\":{\"165\":1}}],[\"首次输入延迟\",{\"1\":{\"165\":2}}],[\"首次内容绘制\",{\"1\":{\"165\":1}}],[\"首次绘制\",{\"1\":{\"165\":1}}],[\"首部信息会被\",{\"1\":{\"135\":1}}],[\"首部压缩\",{\"1\":{\"131\":1}}],[\"首先请求网页上最重要的元素\",{\"1\":{\"132\":1}}],[\"帧去传递将会被推送的资源\",{\"1\":{\"133\":1}}],[\"帧可以指明某些对象和其他对象的依赖关系\",{\"1\":{\"132\":1}}],[\"帧\",{\"0\":{\"131\":1},\"1\":{\"132\":2}}],[\"资源加载错误\",{\"1\":{\"221\":1}}],[\"资源加载时间\",{\"1\":{\"166\":1}}],[\"资源是否能被\",{\"1\":{\"167\":1}}],[\"资源\",{\"1\":{\"167\":1}}],[\"资源预取\",{\"1\":{\"135\":1}}],[\"资源优化\",{\"1\":{\"129\":1}}],[\"资源文件就会安装在\",{\"1\":{\"325\":1}}],[\"资源文件\",{\"1\":{\"129\":1}}],[\"作用范围\",{\"1\":{\"482\":1}}],[\"作用域检查\",{\"1\":{\"435\":1}}],[\"作用域隔离\",{\"1\":{\"426\":1}}],[\"作用域\",{\"1\":{\"363\":1}}],[\"作用域提升\",{\"1\":{\"128\":1,\"129\":1}}],[\"作为新的\",{\"1\":{\"506\":1}}],[\"作为来源检查\",{\"1\":{\"437\":1}}],[\"作为\",{\"1\":{\"412\":1}}],[\"作为上下文\",{\"1\":{\"358\":1}}],[\"作为全局上下文对象\",{\"1\":{\"358\":1}}],[\"作为数据结构进行传输\",{\"1\":{\"280\":1}}],[\"作出当前看来最好的选择\",{\"1\":{\"67\":1}}],[\"公共打包\",{\"1\":{\"128\":1}}],[\"启发式缓存\",{\"0\":{\"126\":1}}],[\"其余优先转换为\",{\"1\":{\"398\":1}}],[\"其余文件设置强缓存\",{\"1\":{\"123\":1}}],[\"其中得到的fn函数返回的是一个promise\",{\"1\":{\"493\":1}}],[\"其中有back\",{\"1\":{\"368\":1}}],[\"其中最常用的是透视相机\",{\"1\":{\"94\":1}}],[\"其实也是\",{\"1\":{\"280\":1}}],[\"其上\",{\"1\":{\"238\":1}}],[\"其他地方引用同一个变量\",{\"1\":{\"541\":1}}],[\"其他地方async函数和then\",{\"1\":{\"344\":1}}],[\"其他\",{\"0\":{\"140\":1,\"520\":1},\"1\":{\"291\":1}}],[\"其他资源\",{\"1\":{\"128\":1}}],[\"本身只能用来遍历\",{\"1\":{\"419\":1}}],[\"本身\",{\"1\":{\"401\":1}}],[\"本身是函数\",{\"1\":{\"401\":1}}],[\"本身也是\",{\"1\":{\"143\":1}}],[\"本质就是一个状态机\",{\"1\":{\"493\":1}}],[\"本质创建一个全局的闭包\",{\"1\":{\"450\":1}}],[\"本质上调用\",{\"1\":{\"419\":1}}],[\"本质\",{\"0\":{\"312\":1}}],[\"本质是二叉树深度遍历\",{\"1\":{\"96\":1}}],[\"本地端\",{\"1\":{\"278\":1}}],[\"本地开发环境也需要构建\",{\"1\":{\"257\":1}}],[\"本地的依赖永远是最新的\",{\"1\":{\"246\":1}}],[\"本地\",{\"1\":{\"122\":1}}],[\"强制更新组件\",{\"1\":{\"458\":1}}],[\"强制类型转换\",{\"0\":{\"412\":1},\"1\":{\"346\":1}}],[\"强缓存\",{\"0\":{\"124\":1},\"1\":{\"122\":1}}],[\"强调数据不可变\",{\"1\":{\"101\":1}}],[\"强调数据可变\",{\"1\":{\"101\":1}}],[\"云端重定向\",{\"1\":{\"121\":1}}],[\"让连接在使用之前就已经建立好\",{\"1\":{\"120\":1}}],[\"连接数\",{\"1\":{\"186\":1}}],[\"连接的数据传输阶段的正常状态\",{\"1\":{\"176\":1}}],[\"连接过程\",{\"0\":{\"176\":1,\"278\":1}}],[\"连接中进行传输\",{\"1\":{\"134\":1}}],[\"连接\",{\"0\":{\"120\":1},\"1\":{\"186\":2,\"201\":1,\"289\":1,\"315\":2}}],[\"影响\",{\"1\":{\"117\":1}}],[\"跨层级或者绑定到\",{\"1\":{\"448\":1}}],[\"跨请求状态污染\",{\"0\":{\"307\":1},\"1\":{\"306\":1}}],[\"跨多个项目的\",{\"1\":{\"246\":1}}],[\"跨站脚本攻击\",{\"0\":{\"204\":1}}],[\"跨站请求伪造\",{\"0\":{\"203\":1}}],[\"跨源请求\",{\"1\":{\"184\":1}}],[\"跨窗口传递\",{\"0\":{\"436\":1},\"1\":{\"328\":1}}],[\"跨窗口\",{\"1\":{\"117\":1}}],[\"跨域请求中\",{\"1\":{\"184\":1}}],[\"跨域\",{\"0\":{\"212\":1},\"1\":{\"99\":1,\"220\":1}}],[\"缓存每一次\",{\"1\":{\"537\":1}}],[\"缓存回调函数\",{\"1\":{\"453\":1}}],[\"缓存回调函数的返回值\",{\"1\":{\"452\":1}}],[\"缓存反向代理\",{\"1\":{\"319\":1}}],[\"缓存方式按照优先级高到低\",{\"1\":{\"122\":1}}],[\"缓存策略\",{\"0\":{\"122\":1}}],[\"缓存\",{\"0\":{\"123\":1,\"218\":1,\"318\":1},\"1\":{\"117\":1,\"129\":1,\"141\":1,\"167\":1,\"189\":1,\"192\":1,\"318\":2,\"365\":3}}],[\"功能组件\",{\"1\":{\"495\":1}}],[\"功能组合\",{\"0\":{\"104\":1}}],[\"功能目标\",{\"1\":{\"365\":1}}],[\"功能\",{\"0\":{\"115\":1}}],[\"$watch\",{\"1\":{\"548\":1}}],[\"$delete\",{\"1\":{\"548\":1}}],[\"$data\",{\"1\":{\"548\":1}}],[\"$props\",{\"1\":{\"548\":1}}],[\"$mount\",{\"1\":{\"548\":1}}],[\"$options\",{\"1\":{\"548\":2}}],[\"$set\",{\"1\":{\"548\":1}}],[\"$slots\",{\"1\":{\"548\":1}}],[\"$store\",{\"1\":{\"106\":1}}],[\"$attrs\",{\"1\":{\"548\":1}}],[\"$listeners\",{\"1\":{\"548\":1}}],[\"$craeteelement\",{\"1\":{\"548\":1}}],[\"$children\",{\"1\":{\"548\":1}}],[\"$root\",{\"1\":{\"548\":1}}],[\"$refs\",{\"1\":{\"548\":1}}],[\"$nexttick\",{\"0\":{\"541\":1},\"1\":{\"480\":2}}],[\"$\",{\"1\":{\"114\":1,\"364\":2,\"537\":2}}],[\"`count\",{\"1\":{\"537\":2}}],[\"`^$\",{\"1\":{\"465\":1}}],[\"`$\",{\"1\":{\"364\":2}}],[\"`<button\",{\"1\":{\"305\":1}}],[\"`\",{\"1\":{\"114\":2,\"124\":1,\"295\":2,\"305\":2,\"364\":2,\"465\":1,\"537\":2}}],[\"也滞后\",{\"1\":{\"501\":1}}],[\"也在渲染之前\",{\"1\":{\"479\":1}}],[\"也有三个阶段\",{\"1\":{\"478\":1}}],[\"也可能被收集\",{\"1\":{\"411\":1}}],[\"也可以在\",{\"1\":{\"296\":1}}],[\"也可以处理字符编码\",{\"1\":{\"280\":1}}],[\"也可以互相依赖\",{\"1\":{\"111\":1}}],[\"也可以说是聚合得来的\",{\"1\":{\"98\":1}}],[\"也不能省略\",{\"1\":{\"434\":1}}],[\"也不是解构\",{\"1\":{\"430\":1}}],[\"也不总是比\",{\"1\":{\"406\":1}}],[\"也不代表一定删除成功\",{\"1\":{\"374\":1}}],[\"也需要相同引用\",{\"1\":{\"400\":1}}],[\"也吃\",{\"1\":{\"375\":1}}],[\"也吃内存\",{\"1\":{\"375\":1}}],[\"也会占用内存\",{\"1\":{\"375\":2}}],[\"也满足iname类型\",{\"1\":{\"355\":1}}],[\"也为激活过程暴露出\",{\"1\":{\"307\":1}}],[\"也是一个合成层\",{\"1\":{\"240\":1}}],[\"也就是批量更新\",{\"1\":{\"444\":1}}],[\"也就是\",{\"1\":{\"356\":1,\"443\":1,\"476\":1}}],[\"也就是说\",{\"1\":{\"214\":3,\"343\":1}}],[\"也就不会调用aa\",{\"1\":{\"355\":1}}],[\"也就伴随这对应时期的插件的生命周期交替执行\",{\"1\":{\"111\":1}}],[\"也发送给客户端\",{\"1\":{\"180\":1}}],[\"也无法区别对待\",{\"1\":{\"158\":1}}],[\"执行一次回调\",{\"1\":{\"547\":1}}],[\"执行到这里有两种情况\",{\"1\":{\"480\":1}}],[\"执行生成\",{\"1\":{\"471\":1}}],[\"执行完毕后才回到主文件\",{\"1\":{\"427\":1}}],[\"执行顺序\",{\"0\":{\"344\":1}}],[\"执行文件就会安装在\",{\"1\":{\"325\":1}}],[\"执行宏任务\",{\"1\":{\"313\":1}}],[\"执行微任务\",{\"1\":{\"313\":1}}],[\"执行时间\",{\"1\":{\"291\":1}}],[\"执行流程\",{\"0\":{\"284\":1}}],[\"执行符号链接下的\",{\"1\":{\"158\":1}}],[\"执行\",{\"0\":{\"339\":1},\"1\":{\"111\":1,\"289\":1,\"311\":2,\"313\":1,\"315\":2,\"339\":7,\"427\":1,\"515\":1}}],[\"插件进程\",{\"1\":{\"241\":1}}],[\"插件通过\",{\"1\":{\"111\":1}}],[\"插件之间可以相互独立\",{\"1\":{\"111\":1}}],[\"插件\",{\"0\":{\"211\":1},\"1\":{\"111\":1,\"211\":1,\"244\":1,\"252\":1}}],[\"插件系统这是些具体的逻辑\",{\"1\":{\"111\":1}}],[\"插入队列\",{\"1\":{\"338\":1}}],[\"插入到尾部\",{\"1\":{\"57\":1}}],[\"插入\",{\"1\":{\"50\":1}}],[\"插入堆\",{\"1\":{\"43\":1}}],[\"插入o\",{\"1\":{\"34\":1}}],[\"核心模块\",{\"1\":{\"548\":1}}],[\"核心原理vue\",{\"1\":{\"542\":1}}],[\"核心系统的生命周期顺序执行的过程\",{\"1\":{\"111\":1}}],[\"核心系统需要提供一个上下文对象\",{\"1\":{\"111\":1}}],[\"核心系统和插件系统通过\",{\"1\":{\"111\":1}}],[\"核心系统可以知道哪些插件可用\",{\"1\":{\"111\":1}}],[\"核心系统是最小可运行的模块\",{\"1\":{\"111\":1}}],[\"核心思想\",{\"0\":{\"27\":1}}],[\"微任务\",{\"1\":{\"312\":1,\"315\":2}}],[\"微任务是\",{\"1\":{\"312\":1}}],[\"微前端方案\",{\"0\":{\"265\":1}}],[\"微内核依赖扩展\",{\"1\":{\"111\":1}}],[\"微内核架构中的\",{\"1\":{\"153\":1}}],[\"微内核架构包含核心系统和插件系统\",{\"1\":{\"111\":1}}],[\"微内核架构\",{\"0\":{\"111\":1}}],[\"微服务\",{\"1\":{\"60\":1}}],[\"牵一发动全身\",{\"1\":{\"110\":1}}],[\"热更新\",{\"1\":{\"109\":1}}],[\"热更新更快\",{\"1\":{\"109\":1}}],[\"方案\",{\"1\":{\"143\":1}}],[\"方便机器解析\",{\"1\":{\"131\":1}}],[\"方便跨端\",{\"1\":{\"107\":1}}],[\"方便更新时\",{\"1\":{\"107\":1}}],[\"方法不能有副作用和\",{\"1\":{\"508\":1}}],[\"方法方法封装成一个异步的一个文件\",{\"1\":{\"493\":1}}],[\"方法在实例上\",{\"1\":{\"393\":1}}],[\"方法可计算布局信息\",{\"1\":{\"238\":1}}],[\"方法修饰器\",{\"1\":{\"227\":1}}],[\"方法中\",{\"1\":{\"217\":1}}],[\"方法\",{\"0\":{\"334\":1},\"1\":{\"76\":1,\"79\":1,\"412\":2,\"461\":1,\"486\":1,\"488\":2,\"490\":1,\"493\":1}}],[\"简易\",{\"0\":{\"546\":1}}],[\"简化生命周期\",{\"1\":{\"496\":1}}],[\"简化\",{\"1\":{\"107\":1}}],[\"简单来讲就是通过将存活对象在两个\",{\"1\":{\"379\":1}}],[\"简单\",{\"1\":{\"294\":1}}],[\"简单请求\",{\"0\":{\"214\":1}}],[\"简单游戏\",{\"1\":{\"93\":1}}],[\"简单易用\",{\"1\":{\"93\":1}}],[\"简单地说\",{\"1\":{\"67\":1}}],[\"传入\",{\"1\":{\"506\":1}}],[\"传入重新渲染函数\",{\"1\":{\"490\":1}}],[\"传入原始的dispatch\",{\"1\":{\"487\":1}}],[\"传入的函数\",{\"1\":{\"483\":1}}],[\"传入组件\",{\"1\":{\"106\":1}}],[\"传递\",{\"1\":{\"490\":1}}],[\"传递给参数next\",{\"1\":{\"487\":1}}],[\"传递给服务器\",{\"1\":{\"180\":1}}],[\"传递对象参数代理过长的参数列表\",{\"1\":{\"66\":1}}],[\"传给服务器\",{\"1\":{\"180\":1}}],[\"传输时常用的处理方式\",{\"1\":{\"280\":1}}],[\"传输过程中劫持\",{\"1\":{\"204\":1}}],[\"传输使用数据帧\",{\"1\":{\"200\":1}}],[\"传输\",{\"1\":{\"135\":1,\"278\":1}}],[\"传输链接的时候\",{\"1\":{\"131\":1}}],[\"直接用memo包裹子组件\",{\"1\":{\"530\":1}}],[\"直接清理掉边界外的内存\",{\"1\":{\"385\":1}}],[\"直接嵌入\",{\"1\":{\"365\":1}}],[\"直接给到\",{\"1\":{\"299\":1}}],[\"直接代码分割\",{\"1\":{\"265\":1}}],[\"直接交换\",{\"0\":{\"162\":1}}],[\"直接禁止游览器缓存数据\",{\"1\":{\"124\":1}}],[\"直接将\",{\"1\":{\"106\":1}}],[\"直到消费者开始读取数据\",{\"1\":{\"309\":1}}],[\"直到跟节点操作完毕\",{\"1\":{\"43\":1}}],[\"直到小于其子节点\",{\"1\":{\"42\":1}}],[\"直到大于其子节点\",{\"1\":{\"42\":1}}],[\"直到无法上移为止为止\",{\"1\":{\"42\":2}}],[\"基本+symbol\",{\"1\":{\"421\":1}}],[\"基本属性\",{\"1\":{\"421\":3}}],[\"基本类型不可变\",{\"0\":{\"402\":1},\"1\":{\"328\":1}}],[\"基本结构\",{\"0\":{\"305\":1}}],[\"基本性质\",{\"0\":{\"28\":1}}],[\"基础路由\",{\"1\":{\"463\":1}}],[\"基础类型\",{\"1\":{\"351\":1}}],[\"基础数据源配置设置\",{\"1\":{\"144\":1}}],[\"基础数据概念\",{\"1\":{\"144\":1}}],[\"基础分片概念\",{\"1\":{\"144\":1}}],[\"基于p2p\",{\"1\":{\"272\":1}}],[\"基于业务\",{\"1\":{\"244\":1}}],[\"基于\",{\"1\":{\"153\":1,\"199\":1,\"201\":1}}],[\"基于构建工具的优化\",{\"0\":{\"129\":1}}],[\"基于不可变数据\",{\"1\":{\"106\":1}}],[\"基于可变数据\",{\"1\":{\"106\":1}}],[\"创建原始store\",{\"1\":{\"487\":1}}],[\"创建真实\",{\"1\":{\"477\":1}}],[\"创建history\",{\"1\":{\"465\":1}}],[\"创建dispatch\",{\"1\":{\"443\":1}}],[\"创建queue\",{\"1\":{\"443\":1}}],[\"创建并返回当前的hook\",{\"1\":{\"443\":1}}],[\"创建了没有父类实例方法的实例\",{\"1\":{\"396\":1}}],[\"创建相同的隐藏类\",{\"1\":{\"369\":1}}],[\"创建函数上下文\",{\"1\":{\"361\":2}}],[\"创建全局上下文对象\",{\"1\":{\"360\":1}}],[\"创建新的包含块\",{\"1\":{\"171\":1}}],[\"创建\",{\"1\":{\"104\":1,\"235\":1,\"253\":1,\"281\":1,\"443\":1,\"477\":1,\"515\":1}}],[\"创建自定义\",{\"1\":{\"104\":1}}],[\"异常\",{\"1\":{\"220\":3}}],[\"异步降级\",{\"1\":{\"541\":1}}],[\"异步渲染模式下\",{\"1\":{\"514\":1}}],[\"异步可中断\",{\"0\":{\"468\":1}}],[\"异步可中断更新\",{\"1\":{\"102\":1}}],[\"异步可迭代\",{\"1\":{\"345\":1}}],[\"异步中还可能嵌套异步\",{\"1\":{\"313\":2}}],[\"异步调用\",{\"1\":{\"271\":1}}],[\"异步\",{\"1\":{\"241\":1}}],[\"异步化\",{\"1\":{\"168\":1}}],[\"异步加载\",{\"1\":{\"167\":1,\"434\":1}}],[\"异或运算具有可交换性\",{\"1\":{\"17\":1}}],[\"异或运算具有可结合性\",{\"1\":{\"17\":1}}],[\"异或\",{\"0\":{\"17\":1}}],[\"调度优先级相关\",{\"1\":{\"472\":1}}],[\"调度意味着从根节点开始\",{\"1\":{\"102\":1}}],[\"调用生命周期\",{\"1\":{\"548\":1}}],[\"调用回调\",{\"1\":{\"547\":1}}],[\"调用带着定时器的函数\",{\"1\":{\"496\":1}}],[\"调用第一次next\",{\"1\":{\"493\":1}}],[\"调用完\",{\"1\":{\"488\":1}}],[\"调用每个\",{\"1\":{\"487\":1}}],[\"调用所有的\",{\"1\":{\"485\":1}}],[\"调用uselayouteffect\",{\"1\":{\"478\":1}}],[\"调用这一次\",{\"1\":{\"447\":1}}],[\"调用前一次\",{\"1\":{\"447\":1}}],[\"调用参数为\",{\"1\":{\"447\":2}}],[\"调用reject来停止\",{\"1\":{\"336\":1}}],[\"调用栈长\",{\"1\":{\"468\":1}}],[\"调用栈\",{\"1\":{\"298\":1}}],[\"调用\",{\"1\":{\"102\":1,\"278\":3,\"346\":2,\"442\":1,\"444\":2,\"445\":1,\"460\":4,\"486\":1,\"493\":1,\"496\":1}}],[\"调用后的处理\",{\"1\":{\"71\":1}}],[\"标签开始\",{\"1\":{\"298\":1}}],[\"标签的\",{\"1\":{\"60\":1}}],[\"标识允许哪些额外的自定义\",{\"1\":{\"217\":1}}],[\"标识该资源支持哪些方法\",{\"1\":{\"217\":1}}],[\"标准化的网络协议和\",{\"1\":{\"201\":1}}],[\"标记上不同的\",{\"1\":{\"476\":1}}],[\"标记阶段利用增量标记\",{\"1\":{\"386\":1}}],[\"标记整理\",{\"1\":{\"383\":1}}],[\"标记清除\",{\"1\":{\"376\":1,\"383\":1}}],[\"标记为\",{\"1\":{\"287\":1}}],[\"标记\",{\"1\":{\"102\":1}}],[\"通用异常\",{\"1\":{\"225\":1}}],[\"通过函数作用域\",{\"1\":{\"426\":1}}],[\"通过系统自带的string构造函数new出来的\",{\"1\":{\"406\":1}}],[\"通过信令服务器发送candidate\",{\"1\":{\"278\":1}}],[\"通过信令服务器发送answer\",{\"1\":{\"278\":1}}],[\"通过该字段指出哪些额外的\",{\"1\":{\"217\":1}}],[\"通过设置\",{\"1\":{\"182\":1}}],[\"通过这两个\",{\"1\":{\"180\":1}}],[\"通过序列化消息通信\",{\"1\":{\"116\":1}}],[\"通过\",{\"1\":{\"104\":1,\"105\":2,\"111\":1,\"132\":2,\"159\":1,\"172\":1,\"200\":1,\"204\":1,\"427\":2,\"431\":1,\"471\":1,\"493\":3}}],[\"通过对比引用\",{\"1\":{\"101\":1}}],[\"通常渲染到\",{\"1\":{\"97\":1}}],[\"区域\",{\"1\":{\"229\":1}}],[\"区块格式化上下文\",{\"1\":{\"229\":1}}],[\"区块链\",{\"1\":{\"51\":1}}],[\"区别\",{\"0\":{\"100\":1,\"158\":1,\"181\":1,\"330\":1,\"434\":1},\"1\":{\"360\":1}}],[\"项目多个文件好管理\",{\"1\":{\"426\":1}}],[\"项目间有复用的\",{\"1\":{\"245\":1}}],[\"项目本质\",{\"0\":{\"243\":1}}],[\"项目\",{\"0\":{\"242\":1},\"1\":{\"99\":1}}],[\"低代码系统整体架构设计\",{\"1\":{\"144\":1}}],[\"低代码\",{\"0\":{\"142\":1},\"1\":{\"268\":1}}],[\"低代码项目\",{\"1\":{\"99\":1}}],[\"低耦合\",{\"1\":{\"61\":1}}],[\"我是log\",{\"1\":{\"483\":2}}],[\"我是子窗口传递的参数\",{\"1\":{\"438\":1}}],[\"我是父窗口传递的参数\",{\"1\":{\"437\":1}}],[\"我是finally中抛出的异常\",{\"1\":{\"342\":2}}],[\"我是finally2返回的值\",{\"1\":{\"342\":1}}],[\"我们告诉\",{\"1\":{\"352\":1}}],[\"我们可以看到\",{\"1\":{\"184\":1}}],[\"我们可以根据这些原则来避免非预期布局移动\",{\"0\":{\"169\":1}}],[\"我们想要看不同班级学生的中考分数\",{\"1\":{\"98\":1}}],[\"我将详细说明\",{\"1\":{\"98\":1}}],[\"以相同的顺序\",{\"1\":{\"368\":1}}],[\"以便限制使用的范围\",{\"1\":{\"355\":1}}],[\"以前\",{\"1\":{\"280\":1}}],[\"以\",{\"1\":{\"229\":1}}],[\"以监听该上传请求\",{\"1\":{\"214\":1}}],[\"以外的同源请求\",{\"1\":{\"184\":1}}],[\"以一个伪头\",{\"1\":{\"183\":1}}],[\"以及原型上的属性\",{\"1\":{\"415\":1}}],[\"以及模块的子依赖\",{\"1\":{\"348\":1}}],[\"以及注册两个信号处理函数\",{\"1\":{\"285\":1}}],[\"以及\",{\"1\":{\"183\":1,\"315\":1,\"488\":1}}],[\"以及数字证书\",{\"1\":{\"180\":1}}],[\"以上的长任务\",{\"1\":{\"171\":1}}],[\"以最优的顺序获取资源\",{\"1\":{\"132\":1}}],[\"以下可以在mode\",{\"1\":{\"109\":1}}],[\"以下在mode\",{\"1\":{\"109\":1}}],[\"以纹理的方式\",{\"1\":{\"97\":1}}],[\"以显示在屏幕上\",{\"1\":{\"95\":1}}],[\"片元着色阶段\",{\"1\":{\"97\":1}}],[\"片元着色器\",{\"1\":{\"95\":1,\"97\":1}}],[\"例如更新了\",{\"1\":{\"230\":1}}],[\"例如\",{\"1\":{\"214\":1,\"217\":1,\"315\":1,\"435\":1}}],[\"例如三角形等\",{\"1\":{\"97\":1}}],[\"例子\",{\"0\":{\"52\":1,\"54\":1,\"57\":1,\"369\":1,\"371\":1},\"1\":{\"60\":3,\"61\":1,\"299\":1,\"321\":1,\"322\":1,\"323\":1}}],[\"然后从第二次循环开始\",{\"1\":{\"483\":1}}],[\"然后你可以向开发者提交\",{\"1\":{\"326\":1}}],[\"然后继续轮询查找\",{\"1\":{\"311\":1}}],[\"然后提交给\",{\"1\":{\"210\":1}}],[\"然后会断开\",{\"1\":{\"186\":1}}],[\"然后将它们链接起来形成一个\",{\"1\":{\"348\":1}}],[\"然后将签名和\",{\"1\":{\"180\":1}}],[\"然后将结果返回到一个或者多个缓冲区\",{\"1\":{\"97\":1}}],[\"然后通过在服务器和浏览器上进行不同的执行方法来组合\",{\"1\":{\"173\":1}}],[\"然后通过\",{\"1\":{\"97\":1}}],[\"然后\",{\"1\":{\"97\":1}}],[\"平移或透视等特定的效果将顶点在\",{\"1\":{\"97\":1}}],[\"顶点着色阶段\",{\"1\":{\"97\":1}}],[\"顶点着色器\",{\"1\":{\"95\":1,\"97\":1}}],[\"但不可枚举\",{\"1\":{\"420\":1}}],[\"但不能从中接收\",{\"1\":{\"309\":1}}],[\"但不能向其发送数据\",{\"1\":{\"309\":1}}],[\"但与字符串类型强制转换不同\",{\"1\":{\"412\":1}}],[\"但在局部作用域中可以改变undefined的值\",{\"1\":{\"406\":1}}],[\"但可以更精确地表示大整数\",{\"1\":{\"406\":1}}],[\"但可以发现\",{\"1\":{\"381\":1}}],[\"但可以获取\",{\"1\":{\"313\":1}}],[\"但优先级最高\",{\"1\":{\"315\":1}}],[\"但它的输出与输入是相关联的\",{\"1\":{\"309\":1}}],[\"但它也可以在画面之外的地方渲染图形\",{\"1\":{\"97\":1}}],[\"但服务端可以设置缓存这一个请求的options\",{\"1\":{\"214\":1}}],[\"但有限定值\",{\"1\":{\"214\":1}}],[\"但效率很低\",{\"1\":{\"201\":1}}],[\"但包含非默认的背景绘制\",{\"1\":{\"165\":1}}],[\"但是默认\",{\"1\":{\"468\":1}}],[\"但是慢\",{\"1\":{\"468\":1}}],[\"但是原型是object\",{\"1\":{\"401\":1}}],[\"但是处理慢\",{\"1\":{\"385\":1}}],[\"但是函数不挂载函数\",{\"1\":{\"361\":1}}],[\"但是在if\",{\"1\":{\"361\":1}}],[\"但是在\",{\"1\":{\"361\":1}}],[\"但是没有初始化和赋值\",{\"1\":{\"330\":1}}],[\"但是读取会\",{\"1\":{\"230\":1}}],[\"但是无法判断\",{\"1\":{\"221\":1}}],[\"但是这种方式虽然可以捕捉到网络请求的异常\",{\"1\":{\"221\":1}}],[\"但是会将网址保存为\",{\"1\":{\"190\":1}}],[\"但是响应需要按顺序\",{\"1\":{\"186\":1}}],[\"但是项目中也能直接去应用\",{\"1\":{\"160\":1}}],[\"但是由于\",{\"1\":{\"134\":1}}],[\"但是\",{\"1\":{\"126\":1,\"210\":1,\"339\":1,\"406\":1}}],[\"但是不保存所有数组\",{\"1\":{\"47\":1}}],[\"但是时间复杂\",{\"1\":{\"35\":1}}],[\"但是时间块\",{\"1\":{\"35\":1}}],[\"在这一次被调用\",{\"1\":{\"541\":1}}],[\"在渲染子组件的过程中\",{\"1\":{\"521\":1}}],[\"在渲染前的异步生命周期\",{\"1\":{\"308\":1}}],[\"在异步渲染下容易重复调用\",{\"1\":{\"507\":1}}],[\"在performsyncworkonroot中调用commitwork\",{\"1\":{\"478\":1}}],[\"在前一帧计算出下一帧要渲染的内容\",{\"1\":{\"469\":1}}],[\"在上面更新\",{\"1\":{\"442\":1}}],[\"在最顶层声明\",{\"1\":{\"430\":1}}],[\"在启动时加载\",{\"1\":{\"427\":1}}],[\"在全局作用域是只读的\",{\"1\":{\"406\":1}}],[\"在实践中\",{\"1\":{\"406\":1}}],[\"在随后的清除阶段中\",{\"1\":{\"384\":1}}],[\"在标记阶段遍历堆中所有对象\",{\"1\":{\"384\":1}}],[\"在对象内属性放满之后\",{\"1\":{\"370\":1}}],[\"在iife作用域已经声明为函数\",{\"1\":{\"363\":1}}],[\"在块内只是声明了\",{\"1\":{\"330\":1}}],[\"在重绘重排之前执行\",{\"1\":{\"312\":1}}],[\"在服务端和客户端间共享\",{\"1\":{\"307\":1}}],[\"在服务器和客户端之间共享\",{\"1\":{\"305\":1}}],[\"在每个请求中为整个应用创建一个全新的实例\",{\"1\":{\"307\":1}}],[\"在大文件读取上\",{\"1\":{\"280\":1}}],[\"在使用\",{\"1\":{\"280\":1}}],[\"在同步\",{\"1\":{\"234\":1}}],[\"在合成线程中\",{\"1\":{\"232\":1}}],[\"在合成线程中执行\",{\"1\":{\"229\":1}}],[\"在之后的时间遍历队列处理添加\",{\"1\":{\"221\":1}}],[\"在之后的请求中\",{\"1\":{\"131\":1}}],[\"在缓存有效期内\",{\"1\":{\"218\":1}}],[\"在它的\",{\"1\":{\"209\":1}}],[\"在请求中使用的任何对象上都没有注册事件侦听器\",{\"1\":{\"214\":1}}],[\"在请求地址中添加\",{\"1\":{\"203\":1}}],[\"在请求时建立了多个连接\",{\"1\":{\"134\":1}}],[\"在业界目前防御\",{\"1\":{\"203\":1}}],[\"在握手阶段升级为\",{\"1\":{\"199\":1}}],[\"在以下两种情况下\",{\"1\":{\"185\":1}}],[\"在工程\",{\"1\":{\"159\":1}}],[\"在头部请求\",{\"1\":{\"138\":1}}],[\"在解析主体\",{\"1\":{\"119\":1}}],[\"在指定数量的工作组之间并行处理数据\",{\"1\":{\"97\":1}}],[\"在该阶段中\",{\"1\":{\"97\":3}}],[\"在\",{\"1\":{\"95\":1,\"102\":1,\"135\":2,\"139\":1,\"159\":1,\"165\":1,\"183\":1,\"203\":1,\"209\":1,\"229\":1,\"326\":1,\"367\":1,\"373\":1,\"407\":1,\"451\":1,\"460\":5,\"529\":1}}],[\"在发布订阅模式里\",{\"1\":{\"65\":1}}],[\"就再预定下一个定时\",{\"1\":{\"480\":1}}],[\"就打断\",{\"1\":{\"480\":1}}],[\"就停止循环\",{\"1\":{\"480\":1}}],[\"就用\",{\"1\":{\"480\":1}}],[\"就完成当前work\",{\"1\":{\"475\":1}}],[\"就setstate\",{\"1\":{\"465\":1}}],[\"就没有同源限制\",{\"1\":{\"431\":1}}],[\"就执行\",{\"1\":{\"427\":1}}],[\"就不执行\",{\"1\":{\"507\":1}}],[\"就不可能修改它\",{\"1\":{\"406\":1}}],[\"就不会合并了\",{\"1\":{\"90\":1}}],[\"就让\",{\"1\":{\"386\":1}}],[\"就去除了没有用到的代码\",{\"1\":{\"348\":1}}],[\"就会触发渲染\",{\"1\":{\"534\":1}}],[\"就会重新渲染\",{\"1\":{\"534\":1}}],[\"就会终止执行整个代码\",{\"1\":{\"344\":1}}],[\"就会解析制定域名\",{\"1\":{\"119\":1}}],[\"就移动到\",{\"1\":{\"311\":1}}],[\"就证明注入的数据和请求中的其他内容有重复\",{\"1\":{\"131\":1}}],[\"就成了我们的维度\",{\"1\":{\"98\":1}}],[\"就是挂载的dom\",{\"1\":{\"475\":1}}],[\"就是数据结构\",{\"1\":{\"472\":1}}],[\"就是\",{\"1\":{\"443\":1,\"445\":1}}],[\"就是异步回调的实现原理\",{\"1\":{\"310\":1}}],[\"就是给整个进程\",{\"1\":{\"225\":1}}],[\"就是给指标附上一个具有统计意义的值\",{\"1\":{\"98\":1}}],[\"就是在它被用到之前就放到了浏览器的缓存里\",{\"1\":{\"133\":1}}],[\"就是我们的切分视⻆\",{\"1\":{\"98\":1}}],[\"就是管线上的自定义步骤\",{\"1\":{\"95\":1}}],[\"坐标转换为实际有颜色的像素输出到屏幕上面\",{\"1\":{\"95\":1}}],[\"坐标\",{\"1\":{\"95\":1}}],[\"将请求数据的逻辑收敛到路由方案中\",{\"0\":{\"502\":1}}],[\"将作为\",{\"1\":{\"493\":1}}],[\"将待更新的队列\",{\"1\":{\"444\":1}}],[\"将其中一个\",{\"1\":{\"439\":1}}],[\"将其转换为原始值\",{\"1\":{\"412\":1}}],[\"将活着的对象往一端移动\",{\"1\":{\"385\":1}}],[\"将堆分为两类\",{\"1\":{\"377\":1}}],[\"将属性的\",{\"1\":{\"368\":1}}],[\"将值传递\",{\"1\":{\"341\":1}}],[\"将异步任务交给其他线程处理\",{\"1\":{\"310\":1}}],[\"将服务阶段代码移动到启动阶段做\",{\"1\":{\"299\":1}}],[\"将每个media\",{\"1\":{\"278\":1}}],[\"将每一层分为多个小区域\",{\"1\":{\"229\":1}}],[\"将回调放入事件队列\",{\"1\":{\"241\":1}}],[\"将任务添加到队列中\",{\"1\":{\"241\":1}}],[\"将块信息给到\",{\"1\":{\"229\":1}}],[\"将没有处理异常的\",{\"1\":{\"221\":1}}],[\"将保存在一个特殊的分区\",{\"1\":{\"209\":1}}],[\"将访问不到\",{\"1\":{\"209\":1}}],[\"将\",{\"1\":{\"95\":3,\"106\":1,\"180\":1,\"287\":1,\"379\":1,\"412\":1,\"443\":1,\"490\":1}}],[\"将最后一个1的位变0\",{\"1\":{\"18\":1}}],[\"梳理渲染管线流程\",{\"1\":{\"95\":1}}],[\"ks\",{\"1\":{\"419\":3}}],[\"kaimo\",{\"1\":{\"369\":3}}],[\"kill\",{\"1\":{\"290\":1,\"291\":1}}],[\"key=\",{\"1\":{\"457\":1}}],[\"keys\",{\"0\":{\"416\":1},\"1\":{\"416\":1,\"419\":1,\"421\":2,\"489\":1}}],[\"keyfor\",{\"1\":{\"346\":1}}],[\"keyframe\",{\"1\":{\"94\":1}}],[\"key\",{\"1\":{\"200\":1,\"227\":3,\"282\":1,\"472\":1,\"489\":4}}],[\"keepalive\",{\"0\":{\"540\":1},\"1\":{\"539\":1}}],[\"keep\",{\"1\":{\"186\":1,\"201\":1}}],[\"k=0\",{\"1\":{\"12\":2}}],[\"支持二进制\",{\"1\":{\"200\":1}}],[\"支持双向绑定\",{\"1\":{\"103\":1}}],[\"支持通过关键帧\",{\"1\":{\"94\":1}}],[\"支持多种材质\",{\"1\":{\"94\":1}}],[\"动静分离\",{\"1\":{\"319\":1}}],[\"动作\",{\"1\":{\"230\":1}}],[\"动态数据\",{\"1\":{\"472\":1}}],[\"动态字体控制\",{\"1\":{\"169\":1}}],[\"动态加载\",{\"1\":{\"129\":2}}],[\"动态导入用\",{\"1\":{\"430\":1}}],[\"动态导入\",{\"1\":{\"128\":1,\"434\":1}}],[\"动态规划则会保存以前的运算结果\",{\"1\":{\"67\":1}}],[\"动态规划\",{\"0\":{\"23\":1},\"1\":{\"10\":1}}],[\"动画\",{\"1\":{\"94\":1,\"317\":1}}],[\"纹理是映射到几何体表面的图像\",{\"1\":{\"94\":1}}],[\"纹理\",{\"1\":{\"94\":1}}],[\"纹理等\",{\"1\":{\"94\":1}}],[\"等属性\",{\"1\":{\"505\":1}}],[\"等资源全部\",{\"1\":{\"234\":1}}],[\"等等参数对编译加以控制\",{\"1\":{\"325\":1}}],[\"等等\",{\"1\":{\"221\":1}}],[\"等方法必然会触发预检\",{\"1\":{\"214\":1}}],[\"等隐私信息\",{\"1\":{\"204\":1}}],[\"等待时机\",{\"1\":{\"311\":1}}],[\"等待足够的时间过去以确保远端\",{\"1\":{\"176\":1}}],[\"等待先前发送给远端\",{\"1\":{\"176\":1}}],[\"等待本地用户的连接终止请求\",{\"1\":{\"176\":1}}],[\"等待远端\",{\"1\":{\"176\":3}}],[\"等待从任何远端\",{\"1\":{\"176\":1}}],[\"等\",{\"1\":{\"94\":2,\"291\":1,\"460\":1}}],[\"颜色\",{\"1\":{\"94\":1}}],[\"材质\",{\"1\":{\"94\":1}}],[\"球体等\",{\"1\":{\"94\":1}}],[\"如何调用下一次任务\",{\"1\":{\"479\":1}}],[\"如何优化\",{\"0\":{\"169\":1}}],[\"如下\",{\"1\":{\"406\":1}}],[\"如有则移动到\",{\"1\":{\"311\":1}}],[\"如利用\",{\"1\":{\"235\":1}}],[\"如http\",{\"1\":{\"184\":1,\"185\":1}}],[\"如显示页面背景色\",{\"1\":{\"165\":1}}],[\"如图像\",{\"1\":{\"97\":1}}],[\"如环境光\",{\"1\":{\"94\":1}}],[\"如\",{\"1\":{\"94\":1,\"183\":1,\"204\":1,\"257\":1,\"311\":1}}],[\"如立方体\",{\"1\":{\"94\":1}}],[\"如果nexttick\",{\"1\":{\"541\":1}}],[\"如果被打断了\",{\"1\":{\"480\":1}}],[\"如果超时\",{\"1\":{\"480\":1}}],[\"如果history改变\",{\"1\":{\"465\":1}}],[\"如果不是\",{\"1\":{\"443\":1}}],[\"如果不是函数默认是\",{\"1\":{\"341\":1}}],[\"如果if内的语句执行了\",{\"1\":{\"361\":1}}],[\"如果抛出异常则返回异常\",{\"1\":{\"342\":1}}],[\"如果够用\",{\"1\":{\"283\":1}}],[\"如果需要的空间小于\",{\"1\":{\"283\":1}}],[\"如果直接用\",{\"1\":{\"229\":1}}],[\"如果请求的\",{\"1\":{\"214\":1}}],[\"如果缺失了该请求头则会返回\",{\"1\":{\"183\":1}}],[\"如果是普通组件\",{\"1\":{\"534\":1}}],[\"如果是文本节点committextupdate\",{\"1\":{\"460\":1}}],[\"如果是\",{\"1\":{\"344\":1,\"460\":5}}],[\"如果是xmlhttprequestupload发出的\",{\"1\":{\"214\":1}}],[\"如果是两次握手客户端没办法告诉服务端是不是旧的\",{\"1\":{\"177\":1}}],[\"如果是httponly不能获取cookie\",{\"1\":{\"163\":1}}],[\"如果有\",{\"1\":{\"159\":1,\"184\":1,\"507\":1,\"511\":1}}],[\"如果没有产生新的work\",{\"1\":{\"475\":1}}],[\"如果没有\",{\"1\":{\"159\":1,\"344\":1}}],[\"如果最终渲染成\",{\"1\":{\"143\":1}}],[\"如果推送的资源在客户端已经缓存过\",{\"1\":{\"134\":1}}],[\"如果唯一的连接发生了丢包\",{\"1\":{\"134\":1}}],[\"如果服务器决定推送一个对象\",{\"1\":{\"133\":1}}],[\"如果首部是相同的\",{\"1\":{\"131\":1}}],[\"如果变小了\",{\"1\":{\"131\":1}}],[\"如果我想看每个班学生的最高分呢\",{\"1\":{\"98\":1}}],[\"如果我想看大家的平均分\",{\"1\":{\"98\":1}}],[\"如果\",{\"1\":{\"47\":1,\"125\":1,\"165\":1,\"264\":1,\"326\":1,\"406\":1}}],[\"如果左右都不为null\",{\"1\":{\"7\":1}}],[\"如果左边null\",{\"1\":{\"7\":1}}],[\"如果右边null\",{\"1\":{\"7\":1}}],[\"渲染控制\",{\"0\":{\"526\":1}}],[\"渲染是指更新\",{\"1\":{\"514\":1}}],[\"渲染流程\",{\"0\":{\"474\":1}}],[\"渲染为最终的组件\",{\"1\":{\"465\":1}}],[\"渲染为json\",{\"1\":{\"465\":1}}],[\"渲染整个router树\",{\"1\":{\"465\":2}}],[\"渲染线程\",{\"1\":{\"241\":1}}],[\"渲染线程执行渲染任务\",{\"1\":{\"229\":1}}],[\"渲染进程\",{\"1\":{\"241\":1}}],[\"渲染过程\",{\"0\":{\"235\":1}}],[\"渲染主线程\",{\"1\":{\"229\":1,\"241\":1}}],[\"渲染优化\",{\"1\":{\"167\":1}}],[\"渲染引擎实现\",{\"1\":{\"145\":1}}],[\"渲染引擎模块分类\",{\"1\":{\"145\":1}}],[\"渲染引擎框架设计\",{\"1\":{\"145\":1}}],[\"渲染引擎设计\",{\"0\":{\"145\":1},\"1\":{\"144\":1}}],[\"渲染\",{\"1\":{\"138\":1,\"140\":1,\"143\":1,\"229\":2,\"313\":1,\"540\":1}}],[\"渲染管线用于渲染图形\",{\"1\":{\"97\":1}}],[\"渲染管线类似于流水线\",{\"1\":{\"95\":1}}],[\"渲染管线\",{\"0\":{\"95\":1}}],[\"渲染到屏幕\",{\"1\":{\"447\":1}}],[\"渲染到\",{\"1\":{\"94\":1}}],[\"渲染器用于计算并绘制最终的图像到屏幕上\",{\"1\":{\"94\":1}}],[\"渲染器\",{\"1\":{\"94\":1,\"143\":3}}],[\"它的生命周期等核心概念的特点\",{\"1\":{\"498\":1}}],[\"它的优点是\",{\"1\":{\"25\":1}}],[\"它们也被称为\",{\"1\":{\"495\":1}}],[\"它们传统上用于定义组件并管理其状态和生命周期\",{\"1\":{\"495\":1}}],[\"它们专门用于优化内存使用\",{\"1\":{\"411\":1}}],[\"它们的原生实现\",{\"1\":{\"411\":1}}],[\"它引用了构造函数本身\",{\"1\":{\"396\":1}}],[\"它会被缓冲\",{\"1\":{\"309\":1}}],[\"它融合了stun和turn\",{\"1\":{\"276\":1}}],[\"它只会在站点\",{\"1\":{\"209\":1}}],[\"它允许开发者将\",{\"1\":{\"209\":1}}],[\"它是单向的\",{\"1\":{\"201\":1}}],[\"它将发出一个\",{\"1\":{\"132\":1}}],[\"它提供的是通用逻辑\",{\"1\":{\"111\":1}}],[\"它有两个主要阶段\",{\"1\":{\"97\":1}}],[\"它模仿人眼所看到的视角\",{\"1\":{\"94\":1}}],[\"j++\",{\"1\":{\"424\":1}}],[\"j\",{\"1\":{\"406\":1,\"424\":15}}],[\"join\",{\"1\":{\"373\":3,\"374\":2}}],[\"jack\",{\"1\":{\"363\":2}}],[\"jar\",{\"1\":{\"209\":2}}],[\"javascript\",{\"1\":{\"166\":1,\"168\":1,\"171\":2,\"405\":1,\"406\":1,\"407\":1,\"495\":1}}],[\"jpg\",{\"1\":{\"169\":3}}],[\"js是弱类型\",{\"0\":{\"405\":1}}],[\"js是动态类型\",{\"0\":{\"404\":1}}],[\"js数据类型\",{\"0\":{\"403\":1}}],[\"json查询依赖关系\",{\"1\":{\"159\":1}}],[\"json\",{\"1\":{\"153\":1,\"214\":1,\"252\":1,\"253\":1,\"292\":1,\"336\":1,\"348\":2,\"352\":1,\"432\":1,\"463\":1,\"501\":1}}],[\"jsx\",{\"1\":{\"102\":1,\"105\":1,\"109\":1,\"471\":2,\"495\":1,\"515\":1}}],[\"js\",{\"0\":{\"260\":1,\"266\":1,\"290\":1,\"328\":1},\"1\":{\"94\":5,\"109\":2,\"111\":1,\"129\":1,\"158\":1,\"167\":2,\"168\":3,\"204\":1,\"220\":1,\"229\":4,\"230\":3,\"232\":2,\"234\":2,\"241\":3,\"257\":1,\"266\":1,\"288\":1,\"297\":1,\"298\":3,\"300\":2,\"303\":1,\"305\":8,\"307\":2,\"310\":1,\"312\":2,\"313\":1,\"365\":8,\"375\":1,\"386\":2,\"401\":1,\"429\":4,\"434\":2,\"482\":1,\"493\":2,\"551\":1}}],[\"jquery\",{\"1\":{\"61\":1}}],[\"场景\",{\"1\":{\"94\":1}}],[\"游戏\",{\"1\":{\"94\":1}}],[\"性能好\",{\"1\":{\"496\":1}}],[\"性能分析工具\",{\"0\":{\"298\":1}}],[\"性能和内存有明显优势\",{\"1\":{\"280\":1}}],[\"性能指标\",{\"0\":{\"165\":1},\"1\":{\"99\":1,\"297\":1}}],[\"性能足够好\",{\"1\":{\"93\":1}}],[\"性能\",{\"1\":{\"93\":1,\"94\":1}}],[\"矢量图\",{\"1\":{\"92\":1}}],[\"设为\",{\"1\":{\"432\":1}}],[\"设计优化\",{\"1\":{\"365\":1}}],[\"设计包括\",{\"1\":{\"365\":1}}],[\"设计更重要\",{\"1\":{\"365\":1}}],[\"设计模式\",{\"0\":{\"59\":1}}],[\"设备\",{\"1\":{\"297\":1}}],[\"设置远端的\",{\"1\":{\"278\":1}}],[\"设置本地端description\",{\"1\":{\"278\":1}}],[\"设置不会立刻导致\",{\"1\":{\"230\":1}}],[\"设置\",{\"1\":{\"169\":1,\"358\":1}}],[\"设置缓存时间为\",{\"1\":{\"126\":1}}],[\"设置父元素\",{\"1\":{\"90\":2}}],[\"设置父元素的\",{\"1\":{\"90\":1}}],[\"父级\",{\"1\":{\"472\":1}}],[\"父组件直接隔离子组件渲染\",{\"0\":{\"527\":1},\"1\":{\"452\":1}}],[\"父组件直接调用\",{\"1\":{\"449\":1}}],[\"父组件传递\",{\"1\":{\"449\":1}}],[\"父组件调用子组件内部方法\",{\"1\":{\"449\":1}}],[\"父传子\",{\"1\":{\"438\":1}}],[\"父\",{\"1\":{\"437\":1}}],[\"父页面window\",{\"1\":{\"162\":1}}],[\"父子组件间用\",{\"1\":{\"103\":2}}],[\"父子元素\",{\"1\":{\"90\":1}}],[\"父子元素之间也可以合并\",{\"1\":{\"90\":1}}],[\"父元素设置\",{\"1\":{\"90\":1}}],[\"父元素margin\",{\"1\":{\"90\":1}}],[\"父节点为\",{\"1\":{\"41\":1}}],[\"子节点\",{\"1\":{\"476\":1}}],[\"子组件\",{\"1\":{\"457\":1}}],[\"子组件利用useimperativehandle暴露子组件内部方法\",{\"1\":{\"449\":1}}],[\"子组件用\",{\"1\":{\"449\":1}}],[\"子传父\",{\"1\":{\"438\":1}}],[\"子\",{\"1\":{\"437\":1}}],[\"子类\",{\"1\":{\"355\":1}}],[\"子页面window\",{\"1\":{\"162\":1}}],[\"子元素间设置为\",{\"1\":{\"90\":1}}],[\"子元素margin\",{\"1\":{\"90\":1}}],[\"子元素之间外边距可以合并取较大值\",{\"1\":{\"90\":1}}],[\"子元素再通过设置水平外边距调节间距\",{\"1\":{\"89\":1}}],[\"子问题的最优解能递推到最终问题的最优解\",{\"1\":{\"67\":1}}],[\"这一次回调函数\",{\"1\":{\"478\":1}}],[\"这一步一般需要你有\",{\"1\":{\"327\":1}}],[\"这与数字类型强制转换的行为相似\",{\"1\":{\"412\":1}}],[\"这也可以说明\",{\"1\":{\"406\":1}}],[\"这也是本文的重点\",{\"1\":{\"98\":1}}],[\"这两个差异很小\",{\"1\":{\"406\":1}}],[\"这两个域名虽然是属于同一个组织\",{\"1\":{\"210\":1}}],[\"这两种类型都不能相互替代\",{\"1\":{\"406\":1}}],[\"这意味着一旦字符串被创建\",{\"1\":{\"406\":1}}],[\"这是由划分空间和复制机制所决定的\",{\"1\":{\"380\":1}}],[\"这是为方便描述假想的状态\",{\"1\":{\"176\":1}}],[\"这里为了不阻塞进程的运行\",{\"1\":{\"493\":1}}],[\"这里得到的是从delay函数中解析出的payload\",{\"1\":{\"493\":1}}],[\"这里给\",{\"1\":{\"458\":1}}],[\"这里执行可以用eval包裹\",{\"1\":{\"429\":1}}],[\"这里的垃圾回收也很快\",{\"1\":{\"377\":1}}],[\"这里就是g函数了\",{\"1\":{\"361\":1}}],[\"这里是函数声明g\",{\"1\":{\"361\":1}}],[\"这里f是赋值表达式\",{\"1\":{\"361\":1}}],[\"这条命令来进行安装\",{\"1\":{\"327\":1}}],[\"这种在内存中构建并直接替换的技术叫做双缓存\",{\"1\":{\"469\":1}}],[\"这种会缓冲整个文件相比\",{\"1\":{\"309\":1}}],[\"这种子问题最优解成为最优子结构\",{\"1\":{\"67\":1}}],[\"这使得前端页面可以按进度进行内容的渲染\",{\"1\":{\"173\":1}}],[\"这其实是\",{\"1\":{\"134\":1}}],[\"这可能是因为它知道客户端不久后将会用到该资源\",{\"1\":{\"133\":1}}],[\"这个是闭包\",{\"1\":{\"496\":2}}],[\"这个对象自从创建之后其内容就不能发生改变\",{\"1\":{\"406\":1}}],[\"这个后面会解释\",{\"1\":{\"217\":1}}],[\"这个\",{\"1\":{\"209\":1}}],[\"这个参数一般只存在于\",{\"1\":{\"184\":1}}],[\"这个指标计算过程略微复杂\",{\"1\":{\"165\":1}}],[\"这个指标用于记录页面第一次绘制像素的时间\",{\"1\":{\"165\":1}}],[\"这个值是从指标字段的明细数据中计算得来的\",{\"1\":{\"98\":1}}],[\"这个字段\",{\"1\":{\"98\":1}}],[\"这个空隙实际上是一个空格字符\",{\"1\":{\"89\":1}}],[\"这时候\",{\"1\":{\"98\":1}}],[\"这些键要么是对象\",{\"1\":{\"411\":1}}],[\"这些数据结构把对象的引用当作键\",{\"1\":{\"411\":1}}],[\"这些需要自己仔细研究错误代码\",{\"1\":{\"326\":1}}],[\"这些\",{\"1\":{\"221\":1}}],[\"这些不同的域名属于同一个组织\",{\"1\":{\"210\":1}}],[\"这些缓冲区可以包含任意类型的数据\",{\"1\":{\"97\":1}}],[\"这些计算通常使用输入\",{\"1\":{\"97\":1}}],[\"这些顶点会被组装成基本的渲染图元\",{\"1\":{\"97\":1}}],[\"换行符会合并成一个空格\",{\"1\":{\"89\":1}}],[\"换句话说\",{\"1\":{\"65\":1}}],[\"弹性盒\",{\"1\":{\"88\":1}}],[\"弹出堆顶\",{\"1\":{\"57\":1}}],[\"包\",{\"0\":{\"473\":1}}],[\"包拥抱\",{\"1\":{\"258\":1}}],[\"包不能直接在浏览器运行\",{\"1\":{\"257\":1}}],[\"包裹\",{\"1\":{\"224\":1,\"449\":1,\"457\":1}}],[\"包个数\",{\"1\":{\"129\":1}}],[\"包大小\",{\"1\":{\"129\":1}}],[\"包的大小\",{\"1\":{\"128\":1}}],[\"包的个数\",{\"1\":{\"128\":1}}],[\"包管理\",{\"0\":{\"154\":1},\"1\":{\"99\":1}}],[\"包含了\",{\"1\":{\"472\":1}}],[\"包含关系\",{\"1\":{\"443\":1}}],[\"包含标识符和属性\",{\"1\":{\"435\":1}}],[\"包含编码器\",{\"1\":{\"273\":1}}],[\"包含的\",{\"1\":{\"240\":2}}],[\"包含块\",{\"1\":{\"229\":1}}],[\"包含\",{\"1\":{\"88\":1}}],[\"包括两部分\",{\"1\":{\"490\":1}}],[\"包括symbols\",{\"1\":{\"418\":1}}],[\"包括不可枚举的和可枚举\",{\"1\":{\"417\":1}}],[\"包括它字节的连接终止请求的确认\",{\"1\":{\"176\":1}}],[\"包括\",{\"1\":{\"88\":1,\"307\":1,\"411\":1}}],[\"水平有效垂直不占用空间\",{\"1\":{\"88\":3}}],[\"无状态\",{\"1\":{\"499\":1}}],[\"无副作用\",{\"1\":{\"498\":1}}],[\"无线循环\",{\"1\":{\"289\":1}}],[\"无法打通\",{\"1\":{\"278\":1}}],[\"无法访问到对应的服务\",{\"1\":{\"183\":1}}],[\"无论是否同源\",{\"1\":{\"213\":1}}],[\"无关\",{\"1\":{\"139\":1,\"235\":1}}],[\"无效\",{\"1\":{\"88\":1}}],[\"无符号整型指针\",{\"1\":{\"1\":1}}],[\"盒模型\",{\"0\":{\"88\":1}}],[\"上一次销毁函数\",{\"1\":{\"478\":1}}],[\"上一次render时的state\",{\"1\":{\"443\":1}}],[\"上一次render时使用的reducer\",{\"1\":{\"443\":1}}],[\"上下文可以用apply\",{\"1\":{\"390\":1}}],[\"上下文\",{\"0\":{\"357\":1,\"358\":1},\"1\":{\"328\":1}}],[\"上位服务器\",{\"1\":{\"319\":1}}],[\"上\",{\"1\":{\"302\":1,\"443\":1,\"444\":1,\"448\":1,\"490\":2}}],[\"上用ts\",{\"1\":{\"253\":1}}],[\"上指定了\",{\"1\":{\"209\":1}}],[\"上调度更新\",{\"1\":{\"102\":1}}],[\"上的哪些像素\",{\"1\":{\"97\":1}}],[\"上手快\",{\"1\":{\"93\":1}}],[\"上挂了多个监听器监听同一个事件\",{\"1\":{\"82\":1}}],[\"上滤过程\",{\"1\":{\"42\":1}}],[\"上滤\",{\"1\":{\"42\":1,\"43\":3,\"57\":1}}],[\"冒泡\",{\"1\":{\"82\":1}}],[\"捕获错误\",{\"1\":{\"342\":2,\"521\":1}}],[\"捕获异步\",{\"0\":{\"227\":1}}],[\"捕获不到语法\",{\"1\":{\"221\":1}}],[\"捕获\",{\"1\":{\"82\":1,\"221\":1}}],[\"滚动事件\",{\"1\":{\"365\":1}}],[\"滚动相对距离\",{\"1\":{\"81\":1}}],[\"滚动绝对距离\",{\"1\":{\"81\":1}}],[\"滚动条滚动也在\",{\"1\":{\"232\":1}}],[\"滚动条\",{\"1\":{\"81\":1,\"229\":1}}],[\"边框\",{\"1\":{\"81\":1}}],[\"外\",{\"1\":{\"368\":1}}],[\"外观属性\",{\"1\":{\"140\":1}}],[\"外观模式\",{\"1\":{\"61\":1}}],[\"外联\",{\"1\":{\"139\":2}}],[\"外边距合并\",{\"0\":{\"90\":1}}],[\"外边距\",{\"1\":{\"87\":1}}],[\"外框\",{\"1\":{\"81\":1}}],[\"剪切板\",{\"1\":{\"80\":1}}],[\"剪枝判断\",{\"1\":{\"7\":1}}],[\"剪枝\",{\"0\":{\"21\":1},\"1\":{\"7\":1}}],[\"兼容性差\",{\"1\":{\"479\":1}}],[\"兼容性不同大小屏幕\",{\"1\":{\"81\":1}}],[\"兼容性\",{\"1\":{\"80\":1}}],[\"读取的内容是\",{\"1\":{\"280\":1}}],[\"读取样式\",{\"1\":{\"230\":1}}],[\"读取注册表可以订阅事件\",{\"1\":{\"111\":1}}],[\"读取\",{\"1\":{\"80\":1}}],[\"触发第一次\",{\"1\":{\"547\":1}}],[\"触发popstate\",{\"1\":{\"545\":1}}],[\"触发micro\",{\"1\":{\"541\":1}}],[\"触发异步的方法\",{\"1\":{\"541\":1}}],[\"触发\",{\"1\":{\"79\":1,\"221\":1,\"547\":1}}],[\"获取location\",{\"1\":{\"465\":1}}],[\"获取上下文信息\",{\"1\":{\"463\":1}}],[\"获取上下文的问题\",{\"0\":{\"270\":1}}],[\"获取跳转方法\",{\"1\":{\"463\":1}}],[\"获取当前hook\",{\"1\":{\"444\":1}}],[\"获取新的\",{\"1\":{\"444\":1}}],[\"获取最新的\",{\"1\":{\"443\":1}}],[\"获取最后的一个1位\",{\"1\":{\"20\":1}}],[\"获取打开的\",{\"1\":{\"437\":1}}],[\"获取response之后\",{\"1\":{\"345\":1}}],[\"获取本地流\",{\"1\":{\"278\":1}}],[\"获取\",{\"1\":{\"204\":1,\"229\":1,\"463\":1}}],[\"获取用户\",{\"1\":{\"204\":1}}],[\"获取版本信息\",{\"1\":{\"159\":1}}],[\"获取区域大小\",{\"1\":{\"81\":1}}],[\"获取栈顶到值\",{\"1\":{\"79\":1}}],[\"正则\",{\"1\":{\"78\":1}}],[\"正常退出设置\",{\"1\":{\"221\":1}}],[\"正常入\",{\"1\":{\"55\":1}}],[\"正常插入队列\",{\"1\":{\"44\":1}}],[\"处理provide\",{\"1\":{\"548\":1}}],[\"处理props\",{\"1\":{\"548\":1}}],[\"处理placement\",{\"1\":{\"478\":1}}],[\"处理inject\",{\"1\":{\"548\":1}}],[\"处理异步操作\",{\"1\":{\"492\":1}}],[\"处理更新的\",{\"1\":{\"460\":1}}],[\"处理网络\",{\"1\":{\"315\":1}}],[\"处理完将回调函数包装成任务放到任务队列等待主线程执行\",{\"1\":{\"310\":1}}],[\"处理数据花费的时间更少\",{\"1\":{\"309\":1}}],[\"处理数据之前\",{\"1\":{\"309\":1}}],[\"处理数据逻辑\",{\"1\":{\"296\":1}}],[\"处理环境逻辑的部分需要代码分割\",{\"1\":{\"296\":1}}],[\"处理粘包\",{\"1\":{\"293\":1}}],[\"处理二进制数据\",{\"1\":{\"280\":1}}],[\"处理图片\",{\"1\":{\"280\":1}}],[\"处理函数\",{\"1\":{\"221\":1}}],[\"处理成需要的指标\",{\"1\":{\"172\":1}}],[\"处理竞争\",{\"1\":{\"168\":1}}],[\"处理流程\",{\"1\":{\"159\":1}}],[\"处理事件容易\",{\"1\":{\"143\":1}}],[\"处理\",{\"0\":{\"78\":1},\"1\":{\"78\":1,\"221\":1,\"460\":1}}],[\"做浅比较\",{\"1\":{\"533\":1,\"534\":1}}],[\"做好标记\",{\"1\":{\"348\":2}}],[\"做静态资源\",{\"1\":{\"319\":1}}],[\"做数据劫持\",{\"1\":{\"101\":1}}],[\"做数据采集埋点\",{\"1\":{\"80\":1}}],[\"做\",{\"1\":{\"77\":1}}],[\"路径\",{\"1\":{\"430\":1}}],[\"路径处理\",{\"1\":{\"291\":1}}],[\"路径上经过的字符连接起来\",{\"1\":{\"28\":1}}],[\"路由json\",{\"1\":{\"546\":1}}],[\"路由变化\",{\"1\":{\"543\":1}}],[\"路由的本质\",{\"0\":{\"543\":1}}],[\"路由方案\",{\"1\":{\"502\":1}}],[\"路由\",{\"0\":{\"77\":1}}],[\"完全执行完了\",{\"1\":{\"480\":1}}],[\"完全二叉树\",{\"0\":{\"39\":1,\"40\":1}}],[\"完\",{\"1\":{\"234\":1}}],[\"完成这些复制后在将\",{\"1\":{\"379\":1}}],[\"完成\",{\"1\":{\"234\":1}}],[\"完整路径\",{\"1\":{\"76\":1}}],[\"属性用\",{\"1\":{\"540\":1}}],[\"属性代理\",{\"0\":{\"455\":1}}],[\"属性类型\",{\"1\":{\"421\":1}}],[\"属性的\",{\"1\":{\"368\":1}}],[\"属性或者\",{\"1\":{\"240\":1}}],[\"属性修改\",{\"1\":{\"232\":1}}],[\"属性\",{\"1\":{\"76\":1,\"79\":1,\"141\":1,\"167\":1,\"209\":1,\"229\":1,\"421\":1,\"460\":1,\"476\":1}}],[\"求众数\",{\"1\":{\"74\":1}}],[\"奇结果y∗y∗x\",{\"1\":{\"74\":1}}],[\"偶结果y∗y\",{\"1\":{\"74\":1}}],[\"计时器\",{\"1\":{\"315\":1}}],[\"计时完毕添加到事件队列\",{\"1\":{\"241\":1}}],[\"计时\",{\"1\":{\"117\":1}}],[\"计算基于\",{\"1\":{\"180\":1}}],[\"计算出\",{\"1\":{\"179\":1}}],[\"计算出每个顶点应该覆盖在\",{\"1\":{\"97\":1}}],[\"计算变量\",{\"1\":{\"150\":1}}],[\"计算着色器\",{\"1\":{\"97\":1}}],[\"计算管线包含单独的计算阶段\",{\"1\":{\"97\":1}}],[\"计算管线用于通用计算\",{\"1\":{\"97\":1}}],[\"计算由顶点着色器生成的基本图元所覆盖的每个像素的颜色\",{\"1\":{\"97\":1}}],[\"计算n拆分成n−1和n−2\",{\"1\":{\"72\":1}}],[\"计数\",{\"1\":{\"36\":1,\"74\":1}}],[\"会在\",{\"1\":{\"493\":1}}],[\"会调用removechild\",{\"1\":{\"460\":1}}],[\"会调用removechildfromcontainer\",{\"1\":{\"460\":1}}],[\"会调用appendchild\",{\"1\":{\"460\":1}}],[\"会调用appendchildtocontainer\",{\"1\":{\"460\":1}}],[\"会调用函数的\",{\"1\":{\"343\":1}}],[\"会渲染\",{\"1\":{\"457\":1}}],[\"会用\",{\"1\":{\"447\":1}}],[\"会运行\",{\"1\":{\"442\":1}}],[\"会记录模块的加载状态\",{\"1\":{\"433\":1}}],[\"会记录所有创建过的\",{\"1\":{\"300\":1}}],[\"会延迟执行\",{\"1\":{\"431\":1}}],[\"会导致这几个生命周期重复调用\",{\"1\":{\"523\":1}}],[\"会导致\",{\"1\":{\"386\":1}}],[\"会晋升到老生代\",{\"1\":{\"382\":1}}],[\"会开辟\",{\"1\":{\"375\":1}}],[\"会变味稀疏数组\",{\"1\":{\"372\":1}}],[\"会将属性的完整结构存储\",{\"1\":{\"370\":1}}],[\"会以快属性存放\",{\"1\":{\"370\":1}}],[\"会同时下载额外的\",{\"1\":{\"365\":1}}],[\"会一致找到全局作用域\",{\"1\":{\"364\":1}}],[\"会提升\",{\"1\":{\"361\":1}}],[\"会提示安装以下\",{\"1\":{\"252\":1}}],[\"会死循环\",{\"1\":{\"341\":1}}],[\"会打印\",{\"1\":{\"340\":1}}],[\"会先\",{\"1\":{\"311\":1}}],[\"会把同时发的多个小包合成一个大包一次发送\",{\"1\":{\"293\":1}}],[\"会根据实例化时的大小去申请内存空间\",{\"1\":{\"283\":1}}],[\"会影响\",{\"1\":{\"232\":1}}],[\"会引发\",{\"1\":{\"231\":1}}],[\"会产生同步\",{\"1\":{\"230\":1}}],[\"会合并所有\",{\"1\":{\"230\":1}}],[\"会阻塞\",{\"1\":{\"229\":1}}],[\"会阻止之后的回调触发\",{\"1\":{\"82\":1}}],[\"会携带\",{\"1\":{\"222\":1}}],[\"会有网址劫持风险\",{\"1\":{\"190\":1}}],[\"会有大量重复计算\",{\"1\":{\"70\":1}}],[\"会使用原始路径\",{\"1\":{\"158\":1}}],[\"会启动一个无\",{\"1\":{\"135\":1}}],[\"会通过\",{\"1\":{\"133\":1}}],[\"会多出\",{\"1\":{\"81\":1}}],[\"会被编译为\",{\"1\":{\"331\":1}}],[\"会被\",{\"1\":{\"79\":1}}],[\"会话历史栈\",{\"1\":{\"79\":1}}],[\"会话历史栈增加了一个条目\",{\"1\":{\"77\":1}}],[\"会替换当前浏览历史并且跳转\",{\"1\":{\"76\":1}}],[\"会跳转过去\",{\"1\":{\"76\":1}}],[\"会出现集群现象\",{\"1\":{\"33\":1}}],[\"相同的输入应该产生相同的输出\",{\"1\":{\"498\":1}}],[\"相当于\",{\"1\":{\"401\":1,\"431\":1,\"488\":1}}],[\"相当于不加括号\",{\"1\":{\"363\":1}}],[\"相当于先在外面声明\",{\"1\":{\"355\":1}}],[\"相当于父类的\",{\"1\":{\"355\":1}}],[\"相当于调用\",{\"1\":{\"340\":4}}],[\"相当于所有的情况遍历一遍\",{\"1\":{\"68\":1}}],[\"相比\",{\"1\":{\"309\":1}}],[\"相比于字符串\",{\"1\":{\"280\":1}}],[\"相关属性\",{\"1\":{\"472\":1}}],[\"相关概念\",{\"0\":{\"467\":1}}],[\"相关\",{\"0\":{\"254\":1},\"1\":{\"254\":1,\"291\":1,\"473\":1}}],[\"相似的逻辑抽象\",{\"1\":{\"244\":1}}],[\"相机决定了哪部分的场景会被渲染\",{\"1\":{\"94\":1}}],[\"相机\",{\"1\":{\"94\":1}}],[\"相对路径\",{\"1\":{\"434\":1}}],[\"相对简单\",{\"1\":{\"93\":1}}],[\"相对有序的排列\",{\"1\":{\"35\":1}}],[\"股票持股\",{\"1\":{\"68\":1}}],[\"合成层上面\",{\"1\":{\"240\":1}}],[\"合成线程还会启动多个工作线程来分块\",{\"1\":{\"229\":1}}],[\"合成线程\",{\"1\":{\"229\":2,\"232\":1,\"241\":1}}],[\"合并到\",{\"1\":{\"444\":1}}],[\"合并\",{\"1\":{\"365\":1,\"489\":1}}],[\"合并后父元素距上一个元素距离为\",{\"1\":{\"90\":1}}],[\"合并重复代码片段\",{\"1\":{\"66\":1}}],[\"合理使用链式调用\",{\"1\":{\"66\":1}}],[\"合理使用循环\",{\"1\":{\"66\":1}}],[\"更现代的方式\",{\"1\":{\"495\":1}}],[\"更多\",{\"0\":{\"441\":1}}],[\"更好的做法是标记为只有name的类型\",{\"1\":{\"355\":1}}],[\"更安全\",{\"1\":{\"355\":1}}],[\"更快更及时\",{\"1\":{\"312\":1}}],[\"更容易管理\",{\"1\":{\"246\":1}}],[\"更方便\",{\"1\":{\"143\":1}}],[\"更灵活\",{\"1\":{\"102\":1}}],[\"更新事件监听\",{\"1\":{\"548\":1}}],[\"更新阶段\",{\"0\":{\"510\":1}}],[\"更新就更新组件\",{\"1\":{\"490\":1}}],[\"更新函数用于强制更新\",{\"1\":{\"490\":1}}],[\"更新订阅的方法\",{\"1\":{\"485\":1}}],[\"更新渲染\",{\"1\":{\"482\":1}}],[\"更新超时时间\",{\"1\":{\"480\":1}}],[\"更新后\",{\"1\":{\"478\":2}}],[\"更新完切换双缓存\",{\"1\":{\"478\":1}}],[\"更新时\",{\"1\":{\"478\":1}}],[\"更新前调用\",{\"1\":{\"478\":1}}],[\"更新前\",{\"1\":{\"478\":1}}],[\"更新要对应的fiber\",{\"1\":{\"472\":1}}],[\"更新ref对象的依赖\",{\"1\":{\"449\":1}}],[\"更新hook中的basestate\",{\"1\":{\"443\":1}}],[\"更新的函数\",{\"1\":{\"443\":1}}],[\"更新\",{\"0\":{\"487\":1},\"1\":{\"102\":2,\"229\":1,\"443\":1,\"506\":1,\"516\":1,\"537\":1}}],[\"更新流程\",{\"0\":{\"102\":1}}],[\"更新bits\",{\"1\":{\"20\":1}}],[\"更通用\",{\"1\":{\"68\":1}}],[\"更易于单一原则\",{\"1\":{\"66\":1}}],[\"提交\",{\"1\":{\"493\":1}}],[\"提交到\",{\"1\":{\"487\":1}}],[\"提交代码\",{\"1\":{\"204\":1}}],[\"提前计算\",{\"1\":{\"299\":1}}],[\"提升了前端的速度\",{\"1\":{\"173\":1}}],[\"提升单个资源性能的最佳方式\",{\"1\":{\"133\":1}}],[\"提供用户相关\",{\"1\":{\"473\":1}}],[\"提供\",{\"1\":{\"473\":1}}],[\"提供最快的访问速度\",{\"1\":{\"370\":1}}],[\"提供应用级别的\",{\"1\":{\"307\":1}}],[\"提供后端存储\",{\"0\":{\"240\":1}}],[\"提供的信息多长时间\",{\"1\":{\"217\":1}}],[\"提供的特殊的方式来读取这些域名集合下共享的\",{\"1\":{\"210\":1}}],[\"提供表面细节以及虚拟化光源的位置和颜色\",{\"1\":{\"97\":1}}],[\"提供了resolver\",{\"1\":{\"295\":1}}],[\"提供了多种光源\",{\"1\":{\"94\":1}}],[\"提供了多种预定义的几何体\",{\"1\":{\"94\":1}}],[\"提供了更底层的图形\",{\"1\":{\"94\":1}}],[\"提供多种相机\",{\"1\":{\"94\":1}}],[\"提供底层图形渲染能力\",{\"1\":{\"94\":1}}],[\"提供方法能顺序访问一个聚合对象中的各个元素\",{\"1\":{\"60\":1}}],[\"提高\",{\"1\":{\"88\":1}}],[\"提炼函数\",{\"1\":{\"66\":1}}],[\"要根据\",{\"1\":{\"498\":1}}],[\"要么是未注册的\",{\"1\":{\"411\":1}}],[\"要生成相同的隐藏类\",{\"1\":{\"368\":1}}],[\"要进行系统调用\",{\"1\":{\"229\":1}}],[\"要尽量拖慢重构发生时间\",{\"1\":{\"66\":1}}],[\"要求maxleft​<root<minright​\",{\"1\":{\"47\":1}}],[\"早晚的问题而已\",{\"1\":{\"66\":1}}],[\"重试执行一个函数\",{\"1\":{\"343\":1}}],[\"重绘重排\",{\"1\":{\"241\":1}}],[\"重绘\",{\"0\":{\"231\":1}}],[\"重排\",{\"0\":{\"230\":1}}],[\"重写添加try\",{\"1\":{\"227\":1}}],[\"重用原始方法和消息主体\",{\"1\":{\"193\":1,\"194\":1}}],[\"重定向方法改为\",{\"1\":{\"191\":1}}],[\"重构必然会发生\",{\"1\":{\"66\":1}}],[\"重复过程\",{\"1\":{\"57\":1}}],[\"重复计算\",{\"1\":{\"24\":1}}],[\"彼此互不相识\",{\"1\":{\"65\":1}}],[\"供被观察者调用\",{\"1\":{\"64\":1}}],[\"职责链模式\",{\"1\":{\"62\":1}}],[\"wrappedapi\",{\"1\":{\"457\":2}}],[\"wrappedapi=\",{\"1\":{\"457\":1}}],[\"wrap\",{\"1\":{\"457\":3}}],[\"writable\",{\"1\":{\"309\":1,\"408\":1,\"419\":1}}],[\"write\",{\"1\":{\"293\":3}}],[\"writeint16bewriteint16le\",{\"1\":{\"281\":1}}],[\"writeint8\",{\"1\":{\"281\":1}}],[\"welcome\",{\"0\":{\"551\":1}}],[\"weakset\",{\"0\":{\"411\":1},\"1\":{\"411\":2}}],[\"weakmap\",{\"0\":{\"411\":1},\"1\":{\"411\":3}}],[\"webrtc\",{\"0\":{\"272\":1,\"277\":1},\"1\":{\"268\":1}}],[\"websocket\",{\"0\":{\"199\":1},\"1\":{\"199\":1,\"200\":9,\"267\":1,\"268\":1}}],[\"web\",{\"1\":{\"121\":1,\"168\":1,\"265\":1,\"451\":1}}],[\"webgpu\",{\"0\":{\"97\":1}}],[\"webglrenderer\",{\"1\":{\"94\":1}}],[\"webgl\",{\"0\":{\"91\":1,\"94\":1},\"1\":{\"94\":1,\"99\":1,\"240\":1}}],[\"webpack\",{\"0\":{\"108\":1,\"112\":1,\"129\":1,\"141\":1,\"254\":1,\"429\":1},\"1\":{\"62\":1,\"99\":1,\"111\":1,\"112\":1,\"128\":1,\"129\":1,\"167\":1,\"253\":1,\"254\":7,\"257\":1,\"348\":1}}],[\"w\",{\"1\":{\"251\":1}}],[\"w3c\",{\"1\":{\"201\":1,\"312\":1}}],[\"w4v7o6xfti36lq3rncgctw==\",{\"1\":{\"200\":1}}],[\"workloopconcurrent\",{\"1\":{\"475\":1,\"480\":1}}],[\"workloopsync\",{\"1\":{\"475\":2}}],[\"workinprogressfiber\",{\"1\":{\"476\":1}}],[\"workinprogresshook\",{\"1\":{\"443\":1}}],[\"workinprogress\",{\"1\":{\"442\":1,\"469\":1,\"472\":1,\"475\":5,\"476\":2,\"480\":8}}],[\"worker\",{\"0\":{\"113\":1,\"114\":1},\"1\":{\"99\":1,\"114\":3,\"117\":1,\"122\":1,\"164\":1,\"168\":4,\"221\":1,\"439\":2}}],[\"world\",{\"1\":{\"363\":1,\"460\":1}}],[\"woff2\",{\"1\":{\"169\":1}}],[\"watch\",{\"1\":{\"548\":1}}],[\"watcher\",{\"1\":{\"102\":1,\"547\":1}}],[\"wang\",{\"1\":{\"185\":2}}],[\"wait\",{\"1\":{\"176\":5}}],[\"warn\",{\"1\":{\"109\":1}}],[\"wip\",{\"1\":{\"472\":1}}],[\"withresolvers\",{\"1\":{\"334\":2}}],[\"without\",{\"1\":{\"325\":1}}],[\"with\",{\"1\":{\"266\":1,\"325\":1,\"364\":1}}],[\"will\",{\"1\":{\"229\":1,\"458\":1}}],[\"widtth\",{\"1\":{\"169\":2}}],[\"width=\",{\"1\":{\"438\":1}}],[\"width\",{\"1\":{\"88\":1,\"169\":1,\"214\":2}}],[\"window\",{\"0\":{\"437\":1},\"1\":{\"81\":1,\"116\":1,\"132\":1,\"207\":1,\"220\":5,\"221\":7,\"266\":1,\"358\":2,\"360\":1,\"437\":10,\"438\":7,\"546\":2}}],[\"www\",{\"1\":{\"76\":1,\"119\":1,\"120\":1,\"185\":1,\"214\":1}}],[\"where\",{\"1\":{\"12\":3}}],[\"while\",{\"1\":{\"4\":1,\"6\":1,\"11\":1,\"15\":1,\"20\":1,\"345\":2,\"475\":2,\"480\":1}}],[\"而类组件里\",{\"1\":{\"498\":1}}],[\"而函数式组件的写法\",{\"1\":{\"498\":1}}],[\"而且不阻塞渲染\",{\"1\":{\"479\":1}}],[\"而且不用心增一个无\",{\"1\":{\"135\":1}}],[\"而\",{\"1\":{\"379\":1,\"411\":1}}],[\"而少数对象的存活周期将会很长\",{\"1\":{\"377\":1}}],[\"而是nextprops与prevstate中的值\",{\"1\":{\"506\":1}}],[\"而是更新后的最新的值\",{\"1\":{\"498\":1}}],[\"而是新生成了一个状态\",{\"1\":{\"482\":1}}],[\"而是语法\",{\"1\":{\"430\":1}}],[\"而是宽松的相等\",{\"1\":{\"406\":1}}],[\"而是返回\",{\"1\":{\"299\":1}}],[\"而是放到全局中\",{\"1\":{\"299\":1}}],[\"而是基于\",{\"1\":{\"292\":1}}],[\"而是整个页面生命周期中\",{\"1\":{\"170\":1}}],[\"而来源页面采用的是安全协议\",{\"1\":{\"185\":1}}],[\"而符号链接始终和之前链接的文件关联\",{\"1\":{\"158\":1}}],[\"而符号链接可以链接目录\",{\"1\":{\"158\":1}}],[\"而不嵌套在条件语句中\",{\"1\":{\"349\":1}}],[\"而不依赖学号\",{\"1\":{\"322\":1}}],[\"而不是更新\",{\"1\":{\"514\":1}}],[\"而不是默认的\",{\"1\":{\"325\":2}}],[\"而不是等到整个数据有效负载才启动\",{\"1\":{\"309\":1}}],[\"而不是全部读取到内存再处理\",{\"1\":{\"309\":1}}],[\"而不是每次都新建\",{\"1\":{\"301\":1}}],[\"而不是直接触发布局改变\",{\"1\":{\"169\":1}}],[\"而不在\",{\"1\":{\"299\":1}}],[\"而不在渲染主线程上\",{\"1\":{\"229\":1}}],[\"而不仅仅是延迟\",{\"1\":{\"170\":1}}],[\"而不用发送整个头\",{\"1\":{\"131\":1}}],[\"而不应该修改\",{\"1\":{\"62\":1}}],[\"而哈希表中的键进行哈希函数运算才能得到内存地址\",{\"1\":{\"31\":1}}],[\"函数负责根据传入的\",{\"1\":{\"540\":1}}],[\"函数式组件\",{\"1\":{\"496\":1}}],[\"函数式组件的函数被调用了\",{\"1\":{\"496\":1}}],[\"函数式编程\",{\"0\":{\"499\":1},\"1\":{\"104\":1}}],[\"函数接收\",{\"1\":{\"492\":1}}],[\"函数组件内部决定是否渲染\",{\"1\":{\"533\":1}}],[\"函数组件主要是函数式编程\",{\"1\":{\"498\":1}}],[\"函数组件问题\",{\"0\":{\"497\":1}}],[\"函数组件优势\",{\"0\":{\"496\":1}}],[\"函数组件本质上是返回\",{\"1\":{\"495\":1}}],[\"函数组件是定义\",{\"1\":{\"495\":1}}],[\"函数组件用memo包裹\",{\"1\":{\"472\":1}}],[\"函数组件\",{\"0\":{\"524\":1,\"531\":1},\"1\":{\"442\":1}}],[\"函数也是具有额外可调用能力的对象\",{\"1\":{\"407\":1}}],[\"函数的上下文\",{\"0\":{\"390\":1}}],[\"函数名称是只读的\",{\"1\":{\"363\":1}}],[\"函数名\",{\"1\":{\"363\":1}}],[\"函数内部提升的g\",{\"1\":{\"361\":1}}],[\"函数内调用两次自己\",{\"1\":{\"70\":1}}],[\"函数内调用一次自己\",{\"1\":{\"70\":1}}],[\"函数声明\",{\"1\":{\"361\":2}}],[\"函数声明提前\",{\"1\":{\"360\":1}}],[\"函数预编译\",{\"0\":{\"361\":1}}],[\"函数会覆盖相同的变量名\",{\"1\":{\"360\":1}}],[\"函数上下文执行之后从作用域链弹出\",{\"1\":{\"358\":1}}],[\"函数上下文创建\",{\"1\":{\"358\":1}}],[\"函数上下文\",{\"1\":{\"358\":1}}],[\"函数敲定之后都是最终\",{\"1\":{\"343\":1}}],[\"函数中不写\",{\"1\":{\"343\":1}}],[\"函数中\",{\"1\":{\"343\":2}}],[\"函数返回\",{\"1\":{\"343\":1,\"352\":1}}],[\"函数或全局作用域\",{\"1\":{\"330\":1}}],[\"函数\",{\"0\":{\"388\":1},\"1\":{\"62\":1,\"104\":1,\"295\":1,\"313\":2,\"328\":1,\"356\":1,\"457\":1,\"495\":1}}],[\"类的组件主要是面向对象编程\",{\"1\":{\"498\":1}}],[\"类和函数组件\",{\"0\":{\"495\":1}}],[\"类组件声明周期\",{\"0\":{\"503\":1}}],[\"类组件扩展了\",{\"1\":{\"495\":1}}],[\"类组件\",{\"0\":{\"528\":1},\"1\":{\"476\":1,\"495\":1}}],[\"类修饰器\",{\"1\":{\"227\":1}}],[\"类似于组件渲染方法\",{\"1\":{\"546\":1}}],[\"类似于vue\",{\"1\":{\"480\":1}}],[\"类似于\",{\"1\":{\"480\":3,\"535\":1}}],[\"类似于npm\",{\"1\":{\"251\":1}}],[\"类似于生命周期\",{\"1\":{\"111\":1}}],[\"类似host\",{\"1\":{\"200\":1}}],[\"类\",{\"0\":{\"391\":1},\"1\":{\"62\":1,\"92\":1,\"283\":1,\"495\":1}}],[\"类型强制转换\",{\"1\":{\"412\":2}}],[\"类型化数组\",{\"0\":{\"410\":1}}],[\"类型注释\",{\"0\":{\"352\":1}}],[\"类型是\",{\"1\":{\"351\":1}}],[\"类型的背后是值所拥有的属性和方法\",{\"1\":{\"351\":1}}],[\"类型检查\",{\"1\":{\"253\":2,\"435\":1}}],[\"类型\",{\"0\":{\"1\":1,\"351\":1},\"1\":{\"0\":1}}],[\"封装\",{\"0\":{\"394\":1},\"1\":{\"394\":1}}],[\"封装公共能力\",{\"1\":{\"244\":1}}],[\"封装了方法\",{\"1\":{\"61\":1}}],[\"封闭寻址法\",{\"1\":{\"33\":1}}],[\"迪米特法则\",{\"0\":{\"61\":1}}],[\"装饰者模式\",{\"1\":{\"60\":1}}],[\"内调用\",{\"1\":{\"485\":1}}],[\"内可以像同步一样使用\",{\"1\":{\"457\":1}}],[\"内的子组件\",{\"1\":{\"457\":1}}],[\"内预编译\",{\"1\":{\"363\":1}}],[\"内置组件\",{\"1\":{\"548\":1}}],[\"内置\",{\"1\":{\"346\":1}}],[\"内接受一个函数\",{\"1\":{\"341\":1}}],[\"内同时\",{\"0\":{\"340\":1}}],[\"内容了\",{\"1\":{\"313\":1}}],[\"内存泄漏\",{\"1\":{\"499\":1}}],[\"内存碎片化\",{\"1\":{\"384\":1}}],[\"内存控制的特点\",{\"1\":{\"309\":1}}],[\"内存效率\",{\"1\":{\"309\":1}}],[\"内存复用\",{\"1\":{\"301\":1}}],[\"内存分配策略由\",{\"1\":{\"301\":1}}],[\"内存\",{\"1\":{\"297\":1,\"328\":1,\"366\":1,\"375\":1}}],[\"内存等\",{\"1\":{\"291\":1}}],[\"内存回收\",{\"1\":{\"289\":1}}],[\"内存中存储\",{\"1\":{\"169\":1}}],[\"内存中连续的一段区域\",{\"1\":{\"50\":1}}],[\"内联\",{\"1\":{\"139\":1}}],[\"内联资源\",{\"1\":{\"135\":1}}],[\"内核驱动\",{\"1\":{\"111\":1}}],[\"内核不需要修改\",{\"1\":{\"111\":1}}],[\"内外边距\",{\"1\":{\"88\":1}}],[\"内边距\",{\"1\":{\"87\":1}}],[\"内框\",{\"1\":{\"81\":1}}],[\"内部生成\",{\"1\":{\"443\":1}}],[\"内部有\",{\"1\":{\"443\":1}}],[\"内部的\",{\"1\":{\"443\":1}}],[\"内部也有\",{\"1\":{\"443\":1}}],[\"内部会生成内存模型\",{\"1\":{\"375\":1}}],[\"内部都有\",{\"1\":{\"372\":1}}],[\"内部再定义函数\",{\"1\":{\"361\":1}}],[\"内部必须要super\",{\"1\":{\"355\":1}}],[\"内部必须实现所有的interface\",{\"1\":{\"355\":1}}],[\"内部赋值this\",{\"1\":{\"355\":1}}],[\"内部捕获\",{\"1\":{\"340\":1}}],[\"内部使用\",{\"1\":{\"315\":1}}],[\"内部不能有异步或者有副作用代码\",{\"1\":{\"306\":1}}],[\"内部兼容各种浏览器的实现\",{\"1\":{\"61\":1}}],[\"内部如何实现\",{\"1\":{\"60\":1}}],[\"又不需要暴露该对象内部表示\",{\"1\":{\"60\":1}}],[\"迭代容易出错\",{\"1\":{\"499\":1}}],[\"迭代器\",{\"1\":{\"493\":1}}],[\"迭代器执行后有next方法\",{\"1\":{\"419\":1}}],[\"迭代器模式\",{\"1\":{\"60\":1,\"419\":1}}],[\"迭代次数为logn\",{\"1\":{\"11\":1}}],[\"代表\",{\"1\":{\"343\":2}}],[\"代表一个缓冲区\",{\"1\":{\"280\":1}}],[\"代理\",{\"1\":{\"548\":1}}],[\"代理的响应式数据对象\",{\"1\":{\"547\":1}}],[\"代理的缓存\",{\"1\":{\"124\":1}}],[\"代理模式\",{\"1\":{\"60\":1,\"62\":1}}],[\"代替undefined\",{\"1\":{\"406\":1}}],[\"代替\",{\"1\":{\"66\":1,\"183\":1}}],[\"代替嵌套条件分支\",{\"1\":{\"66\":1}}],[\"代码少\",{\"1\":{\"496\":1}}],[\"代码生成\",{\"1\":{\"435\":1}}],[\"代码字符串\",{\"1\":{\"435\":1}}],[\"代码层面\",{\"1\":{\"365\":1}}],[\"代码注释\",{\"1\":{\"365\":1}}],[\"代码之前的优化\",{\"1\":{\"365\":1}}],[\"代码依赖关系与顺序管理\",{\"1\":{\"257\":1}}],[\"代码目录中用硬连接放入源码\",{\"1\":{\"159\":1}}],[\"代码分割策略\",{\"1\":{\"129\":1}}],[\"代码重构原则\",{\"0\":{\"66\":1}}],[\"代码\",{\"0\":{\"6\":1,\"112\":1},\"1\":{\"229\":1}}],[\"代码模版\",{\"0\":{\"4\":1}}],[\"保存dispatchaction\",{\"1\":{\"443\":1}}],[\"保存update对象\",{\"1\":{\"443\":1}}],[\"保存最新的更新队列\",{\"1\":{\"443\":1}}],[\"保存待更新的队列\",{\"1\":{\"443\":2}}],[\"保存在局部变量\",{\"1\":{\"364\":1}}],[\"保证让你玩转\",{\"1\":{\"441\":1}}],[\"保证主线程足够处理下一个用户事件\",{\"1\":{\"317\":1}}],[\"保证一个类只有一个模式\",{\"1\":{\"60\":1}}],[\"保护原标签页\",{\"1\":{\"207\":1}}],[\"保护前端网站\",{\"1\":{\"204\":1}}],[\"保持原本的模块方案\",{\"1\":{\"258\":1}}],[\"保持较小的\",{\"1\":{\"171\":1}}],[\"保持最左边的为队列中最大值\",{\"1\":{\"57\":1}}],[\"可做性能优化\",{\"1\":{\"513\":1}}],[\"可中断更新\",{\"0\":{\"479\":1}}],[\"可中断\",{\"1\":{\"475\":1}}],[\"可修改组件的声明周期\",{\"1\":{\"456\":1}}],[\"可遍历原型上的\",{\"1\":{\"421\":1}}],[\"可索引属性和命名属性\",{\"0\":{\"372\":1}}],[\"可用\",{\"1\":{\"280\":1}}],[\"可见样式更改\",{\"1\":{\"231\":1}}],[\"可疑区域增加\",{\"1\":{\"220\":1}}],[\"可能是在事件回调或副作用中触发的更新或者是\",{\"1\":{\"445\":1}}],[\"可能会成百倍增加\",{\"1\":{\"375\":1}}],[\"可能会以此进行统计分析\",{\"1\":{\"185\":1}}],[\"可能导致性能问题\",{\"1\":{\"374\":1}}],[\"可能被这四个因素影响\",{\"0\":{\"166\":1,\"168\":1}}],[\"可通过\",{\"1\":{\"183\":1}}],[\"可靠的实现\",{\"1\":{\"176\":1}}],[\"可交互时间\",{\"1\":{\"165\":1}}],[\"可存于中间服务器\",{\"1\":{\"124\":1}}],[\"可视化展示\",{\"1\":{\"172\":1}}],[\"可视化三个具有前后顺序的动作\",{\"1\":{\"98\":1}}],[\"可视化\",{\"0\":{\"98\":1}}],[\"可视化模拟\",{\"1\":{\"94\":1}}],[\"可滚动的\",{\"1\":{\"87\":1}}],[\"可重用的面相对向的准则\",{\"1\":{\"59\":1}}],[\"可以开始下一次了\",{\"1\":{\"541\":1}}],[\"可以被暂停重启\",{\"1\":{\"523\":1}}],[\"可以被支持\",{\"1\":{\"217\":1}}],[\"可以获取组件重新渲染之前的状态\",{\"1\":{\"514\":1}}],[\"可以为函数\",{\"1\":{\"492\":1}}],[\"可以传入\",{\"1\":{\"463\":1}}],[\"可以自定义\",{\"1\":{\"460\":1}}],[\"可以包装一个\",{\"1\":{\"457\":1}}],[\"可以组合多种操作\",{\"1\":{\"449\":1}}],[\"可以理解为action\",{\"1\":{\"443\":1}}],[\"可以理解为一个容器\",{\"1\":{\"94\":1}}],[\"可以\",{\"1\":{\"434\":1,\"479\":1,\"492\":1}}],[\"可以做\",{\"1\":{\"434\":1}}],[\"可以放在判断中\",{\"1\":{\"427\":1}}],[\"可以给对象添加\",{\"1\":{\"419\":1}}],[\"可以拿到可枚举属性\",{\"1\":{\"415\":1}}],[\"可以达到近似对数到常数时间的查找性能\",{\"1\":{\"411\":1}}],[\"可以试验\",{\"1\":{\"375\":1}}],[\"可以先隐藏元素\",{\"1\":{\"365\":1}}],[\"可以多域名\",{\"1\":{\"365\":1}}],[\"可以直接推断出aa\",{\"1\":{\"356\":1}}],[\"可以直接在\",{\"1\":{\"82\":1}}],[\"可以将在\",{\"1\":{\"355\":1}}],[\"可以将流看作在连接上的一系列帧\",{\"1\":{\"132\":1}}],[\"可以帮助判断代码错误\",{\"1\":{\"351\":1}}],[\"可以知道每个\",{\"1\":{\"334\":1}}],[\"可以发送数据\",{\"1\":{\"309\":1}}],[\"可以接收数据\",{\"1\":{\"309\":1}}],[\"可以免去编码和解码的过程\",{\"1\":{\"280\":1}}],[\"可以作为中继\",{\"1\":{\"275\":1}}],[\"可以作为其中一个功能\",{\"1\":{\"143\":1}}],[\"可以让nat后的客户端找到公网地址\",{\"1\":{\"274\":1}}],[\"可以让多个请求在同一个\",{\"1\":{\"134\":1}}],[\"可以复用\",{\"1\":{\"246\":1}}],[\"可以抽象\",{\"1\":{\"245\":1}}],[\"可以不在每次请求都调用\",{\"1\":{\"299\":1}}],[\"可以不单独写\",{\"1\":{\"221\":1}}],[\"可以不携带\",{\"1\":{\"206\":1}}],[\"可以访问原标签页的\",{\"1\":{\"207\":1}}],[\"可以在全局共享数据\",{\"1\":{\"482\":1}}],[\"可以在编译时确定\",{\"1\":{\"430\":1}}],[\"可以在浏览器端渲染\",{\"1\":{\"296\":1}}],[\"可以在一个\",{\"1\":{\"186\":1}}],[\"可以在不同平台渲染为需要的元素\",{\"1\":{\"107\":1}}],[\"可以一次发送多个\",{\"1\":{\"186\":1}}],[\"可以根据\",{\"1\":{\"179\":1}}],[\"可以加锁\",{\"1\":{\"168\":1}}],[\"可以跨域\",{\"1\":{\"143\":1}}],[\"可以进行图形操作\",{\"1\":{\"143\":1}}],[\"可以统一缩放\",{\"1\":{\"143\":1}}],[\"可以真实呈现\",{\"1\":{\"143\":1}}],[\"可以告诉服务器如何确定具有共同依赖关系的对象的优先级\",{\"1\":{\"132\":1}}],[\"可以省略的文件后缀\",{\"1\":{\"109\":1}}],[\"可以创建复杂的\",{\"1\":{\"94\":1}}],[\"可以设置父元素字体大小font\",{\"1\":{\"89\":1}}],[\"可以设置宽高\",{\"1\":{\"88\":1}}],[\"可以优化页面重排\",{\"1\":{\"88\":1}}],[\"可以用来比较\",{\"1\":{\"480\":1}}],[\"可以用来创建复杂的\",{\"1\":{\"94\":1}}],[\"可以用一个\",{\"1\":{\"447\":1}}],[\"可以用于请求的超时\",{\"0\":{\"336\":1}}],[\"可以用返回按钮跳到之前页面\",{\"1\":{\"76\":1}}],[\"可以用数组或链表实现\",{\"1\":{\"53\":1}}],[\"可以用二分法\",{\"1\":{\"15\":1}}],[\"可以双向走\",{\"1\":{\"51\":1}}],[\"可以通过值来判断左右子树\",{\"1\":{\"47\":1}}],[\"可以通过索引找到元素\",{\"1\":{\"14\":1}}],[\"且在\",{\"1\":{\"434\":1}}],[\"且不能导入动态的\",{\"1\":{\"430\":1}}],[\"且没办法\",{\"1\":{\"375\":1}}],[\"且只关心最大值\",{\"1\":{\"57\":1}}],[\"且最后一行必须从左到右排序\",{\"1\":{\"40\":1}}],[\"维护总体缓存个数\",{\"1\":{\"540\":1}}],[\"维护的复杂度为1\",{\"1\":{\"57\":1}}],[\"维护计数器\",{\"1\":{\"9\":1}}],[\"双方都创建peerconnection\",{\"1\":{\"278\":1}}],[\"双向\",{\"1\":{\"199\":1}}],[\"双向的帧序列交换\",{\"1\":{\"132\":1}}],[\"双内核\",{\"1\":{\"153\":1}}],[\"双缓存\",{\"0\":{\"469\":1},\"1\":{\"102\":1,\"472\":1}}],[\"双端队列\",{\"1\":{\"57\":1}}],[\"双链表\",{\"1\":{\"51\":1}}],[\"窗口中k个元素放入大顶堆中\",{\"1\":{\"57\":1}}],[\"滑动窗口最大值\",{\"1\":{\"57\":1}}],[\"返回代理\",{\"1\":{\"547\":1}}],[\"返回值传递给\",{\"1\":{\"516\":1}}],[\"返回值将和之前的\",{\"1\":{\"506\":1}}],[\"返回generator\",{\"1\":{\"493\":1}}],[\"返回增强的\",{\"1\":{\"487\":1}}],[\"返回修改过的\",{\"1\":{\"487\":1}}],[\"返回开始计时的函数\",{\"1\":{\"480\":1}}],[\"返回element\",{\"1\":{\"465\":1}}],[\"返回整个\",{\"1\":{\"463\":1}}],[\"返回的第二个参数\",{\"1\":{\"443\":1}}],[\"返回的结果就是\",{\"1\":{\"442\":1}}],[\"返回的是上一次\",{\"1\":{\"342\":1}}],[\"返回当前\",{\"1\":{\"438\":1}}],[\"返回当前节点\",{\"1\":{\"47\":1}}],[\"返回父\",{\"1\":{\"438\":1}}],[\"返回打开窗口的\",{\"1\":{\"437\":1}}],[\"返回自身的所有属性\",{\"1\":{\"418\":1}}],[\"返回自身的属性\",{\"1\":{\"417\":1}}],[\"返回自身的可枚举属性\",{\"1\":{\"416\":1}}],[\"返回迭代器实例\",{\"1\":{\"416\":1}}],[\"返回promise\",{\"1\":{\"345\":1}}],[\"返回一个新组件\",{\"1\":{\"455\":1}}],[\"返回一个对象作为暴露的ref\",{\"1\":{\"449\":1}}],[\"返回一个迭代器\",{\"1\":{\"419\":1}}],[\"返回一个\",{\"1\":{\"343\":1,\"513\":1,\"547\":1}}],[\"返回一个方法可以修改\",{\"1\":{\"60\":1}}],[\"返回渲染好的html\",{\"1\":{\"308\":1}}],[\"返回给浏览器\",{\"1\":{\"229\":1}}],[\"返回钓鱼网页\",{\"1\":{\"206\":1}}],[\"返回\",{\"1\":{\"125\":2,\"352\":1,\"374\":1,\"443\":1,\"457\":1,\"486\":2}}],[\"返回堆顶元素\",{\"1\":{\"57\":1}}],[\"把所有的异步请求放在了\",{\"1\":{\"493\":1}}],[\"把\",{\"1\":{\"490\":1}}],[\"把变量和函数进行隔离\",{\"1\":{\"426\":1}}],[\"把child构造函数还回去\",{\"1\":{\"396\":1}}],[\"把重复的计算缓存\",{\"1\":{\"299\":1}}],[\"把想要共享\",{\"1\":{\"210\":1}}],[\"把原来堆中小的剔除\",{\"1\":{\"57\":1}}],[\"把这一位置1\",{\"1\":{\"20\":1}}],[\"思路2\",{\"1\":{\"57\":2}}],[\"思路1\",{\"1\":{\"57\":2}}],[\"实参\",{\"1\":{\"361\":1}}],[\"实例缓存在里面\",{\"1\":{\"540\":1}}],[\"实例保存在当前的\",{\"1\":{\"283\":1}}],[\"实例化一个新的\",{\"1\":{\"283\":1}}],[\"实例\",{\"1\":{\"214\":1,\"283\":1,\"307\":1}}],[\"实时性\",{\"1\":{\"268\":1}}],[\"实时通信的技术\",{\"1\":{\"199\":1}}],[\"实时判断第k大元素\",{\"1\":{\"57\":1}}],[\"实际的nexttick函数\",{\"1\":{\"541\":1}}],[\"实际就是组件内部有一个\",{\"1\":{\"540\":1}}],[\"实际调用\",{\"1\":{\"419\":1}}],[\"实际不存在\",{\"1\":{\"176\":1}}],[\"实际上用来处理副作用\",{\"1\":{\"524\":1}}],[\"实际上字符串本身是一种经过由语言封装后的基础类型\",{\"1\":{\"406\":1}}],[\"实际上是将这个函数的\",{\"1\":{\"343\":1}}],[\"实际上\",{\"1\":{\"158\":1}}],[\"实现对象属性的快速存取\",{\"1\":{\"368\":1}}],[\"实现原理\",{\"0\":{\"348\":1}}],[\"实现超时\",{\"1\":{\"336\":2}}],[\"实现沙箱\",{\"1\":{\"266\":1}}],[\"实现多层级数据流\",{\"1\":{\"152\":1}}],[\"实现代码\",{\"0\":{\"429\":1},\"1\":{\"112\":1}}],[\"实现tab之间通信\",{\"0\":{\"161\":1},\"1\":{\"99\":1}}],[\"实现\",{\"0\":{\"56\":1,\"247\":1},\"1\":{\"153\":1,\"436\":1,\"439\":1,\"461\":1,\"493\":1}}],[\"实现查找o\",{\"1\":{\"35\":1}}],[\"实现hashmap\",{\"1\":{\"34\":1}}],[\"详见完全二叉树\",{\"1\":{\"56\":1}}],[\"次数\",{\"1\":{\"55\":1}}],[\"用锚点\",{\"1\":{\"544\":1}}],[\"用useref\",{\"1\":{\"537\":1}}],[\"用compose将middleware串起来\",{\"1\":{\"487\":1}}],[\"用法\",{\"0\":{\"463\":1}}],[\"用suspence\",{\"1\":{\"457\":1}}],[\"用一个标记变量\",{\"1\":{\"445\":1}}],[\"用viod\",{\"1\":{\"406\":1}}],[\"用逗号<sctipt\",{\"1\":{\"365\":1}}],[\"用到过的代码\",{\"1\":{\"348\":1}}],[\"用事件\",{\"1\":{\"309\":1}}],[\"用作数据结构\",{\"1\":{\"280\":1}}],[\"用帧和流实现多路复用\",{\"1\":{\"186\":1}}],[\"用户事件\",{\"1\":{\"317\":1}}],[\"用户代理会在以下情况中添加\",{\"1\":{\"184\":1}}],[\"用户信息\",{\"1\":{\"182\":1}}],[\"用\",{\"1\":{\"143\":1,\"153\":1,\"229\":1,\"375\":1,\"424\":1,\"447\":1,\"506\":1,\"543\":1}}],[\"用内联样式\",{\"1\":{\"143\":1}}],[\"用来执行每一个middleware\",{\"1\":{\"487\":1}}],[\"用来处理还没执行完的\",{\"1\":{\"478\":1}}],[\"用来处理二进制或非\",{\"1\":{\"280\":1}}],[\"用来实现双缓存\",{\"1\":{\"472\":1}}],[\"用来实现异步可中断更新\",{\"1\":{\"468\":1}}],[\"用来绑定在当前组件的\",{\"1\":{\"448\":1}}],[\"用来保存待更新的队列或更新的函数\",{\"1\":{\"443\":1}}],[\"用来描述\",{\"1\":{\"354\":1}}],[\"用来计数\",{\"1\":{\"241\":1}}],[\"用来说明请求从哪里发起的\",{\"1\":{\"184\":1}}],[\"用来减少不必要的\",{\"1\":{\"135\":1}}],[\"用来减少客户端发起请求数量\",{\"1\":{\"134\":1}}],[\"用来表示其更新后的处理字节的能力\",{\"1\":{\"132\":1}}],[\"用的就是求最大值函数\",{\"1\":{\"98\":1}}],[\"用map\",{\"1\":{\"74\":1}}],[\"用多个\",{\"1\":{\"66\":1}}],[\"用提前\",{\"1\":{\"66\":1}}],[\"用栈实现队列\",{\"1\":{\"54\":1}}],[\"用栈或者字符串replace\",{\"1\":{\"54\":1}}],[\"用于子组件封装逻辑\",{\"1\":{\"449\":1}}],[\"用于触发更新\",{\"1\":{\"444\":1}}],[\"用于记录更新的信息\",{\"1\":{\"443\":1}}],[\"用于记录视窗内最大的元素绘制的时间\",{\"1\":{\"165\":1}}],[\"用于\",{\"1\":{\"376\":2,\"506\":1}}],[\"用于存放对象的属性\",{\"1\":{\"367\":1}}],[\"用于存储二进制数据\",{\"1\":{\"280\":1}}],[\"用于限制同时执行\",{\"0\":{\"338\":1}}],[\"用于查看\",{\"0\":{\"337\":1}}],[\"用于进行\",{\"1\":{\"286\":1}}],[\"用于对文件进行描述\",{\"1\":{\"285\":1}}],[\"用于字符转码\",{\"1\":{\"280\":1}}],[\"用于大文件的读取和写入\",{\"1\":{\"280\":1}}],[\"用于确认请求的来源页面\",{\"1\":{\"182\":1}}],[\"用于增加物体的细节和真实感\",{\"1\":{\"94\":1}}],[\"用于设置和存放渲染的世界\",{\"1\":{\"94\":1}}],[\"用于插入新元素到堆中\",{\"1\":{\"42\":1}}],[\"用于统计排序大量字符串\",{\"1\":{\"25\":1}}],[\"队列优先级\",{\"0\":{\"315\":1}}],[\"队列按顺序执行\",{\"1\":{\"312\":1}}],[\"队列插入\",{\"1\":{\"57\":1}}],[\"队列弹出最小元素\",{\"1\":{\"57\":1}}],[\"队列\",{\"0\":{\"53\":1},\"1\":{\"315\":1,\"487\":1}}],[\"栈\",{\"0\":{\"53\":1},\"1\":{\"422\":1}}],[\"两层循环跳出\",{\"0\":{\"424\":1}}],[\"两边为不同基本类型\",{\"1\":{\"398\":1}}],[\"两边不同类型\",{\"1\":{\"398\":1}}],[\"两边相同类型\",{\"1\":{\"398\":1}}],[\"两种路由区别\",{\"1\":{\"544\":1}}],[\"两种获取数据方式\",{\"0\":{\"308\":1}}],[\"两种方案\",{\"1\":{\"253\":1}}],[\"两种方法\",{\"1\":{\"33\":1}}],[\"两个功能对\",{\"1\":{\"352\":1}}],[\"两个参数\",{\"1\":{\"180\":1}}],[\"两个存在的理由\",{\"1\":{\"176\":1}}],[\"两个文件都能找到相同的磁盘内容\",{\"1\":{\"156\":1}}],[\"两指标在\",{\"1\":{\"165\":1}}],[\"两步骤\",{\"1\":{\"95\":1}}],[\"两者完全解耦\",{\"1\":{\"65\":1}}],[\"两者松耦合\",{\"1\":{\"64\":1}}],[\"两辆交换节点\",{\"1\":{\"52\":1}}],[\"应用逻辑执行一小会\",{\"1\":{\"386\":1}}],[\"应用场景\",{\"0\":{\"117\":1}}],[\"应用\",{\"1\":{\"51\":1,\"280\":1,\"543\":1}}],[\"缺点就是编辑时和产出会不一致\",{\"1\":{\"143\":1}}],[\"缺点\",{\"1\":{\"51\":1,\"201\":1,\"246\":1}}],[\"优势\",{\"1\":{\"309\":1}}],[\"优缺点\",{\"0\":{\"246\":1}}],[\"优化第一步是确定指标\",{\"1\":{\"365\":1}}],[\"优化方案\",{\"0\":{\"365\":1},\"1\":{\"328\":1}}],[\"优化的方法\",{\"0\":{\"299\":1},\"1\":{\"386\":1}}],[\"优化\",{\"0\":{\"96\":1,\"118\":1,\"316\":1},\"1\":{\"99\":1,\"109\":1,\"179\":2}}],[\"优先\",{\"1\":{\"229\":1}}],[\"优先级\",{\"1\":{\"132\":1}}],[\"优先级更高\",{\"1\":{\"124\":1,\"125\":1}}],[\"优先级高于\",{\"1\":{\"124\":1}}],[\"优先级高\",{\"1\":{\"124\":1,\"125\":1,\"139\":1}}],[\"优先级有关性能\",{\"1\":{\"109\":1}}],[\"优先级大小\",{\"1\":{\"55\":1}}],[\"优先队列\",{\"0\":{\"55\":1},\"1\":{\"44\":1}}],[\"优点\",{\"1\":{\"51\":1,\"125\":1,\"246\":1}}],[\"单实例\",{\"1\":{\"266\":1}}],[\"单位秒\",{\"1\":{\"217\":1}}],[\"单项流\",{\"1\":{\"103\":1}}],[\"单次递归处理逻辑\",{\"1\":{\"71\":1}}],[\"单例模式\",{\"1\":{\"60\":1}}],[\"单一职责原则\",{\"0\":{\"60\":1}}],[\"单链表\",{\"1\":{\"51\":1}}],[\"单词查找树\",{\"1\":{\"9\":1}}],[\"都是新的\",{\"1\":{\"447\":1}}],[\"都是基于虚拟\",{\"0\":{\"107\":1}}],[\"都要删除\",{\"1\":{\"375\":1}}],[\"都一样\",{\"1\":{\"343\":1}}],[\"都没被清理掉的进入老生代\",{\"1\":{\"300\":1}}],[\"都会重新定义一个新的子函数\",{\"1\":{\"496\":2}}],[\"都会占内存\",{\"1\":{\"375\":2}}],[\"都会生成新的隐藏类\",{\"1\":{\"368\":1}}],[\"都会有\",{\"1\":{\"365\":1}}],[\"都会打印错误到控制台\",{\"1\":{\"340\":1}}],[\"都会先由\",{\"1\":{\"288\":1}}],[\"都会用到\",{\"1\":{\"280\":1}}],[\"都会触发预检\",{\"1\":{\"214\":1}}],[\"都有默认的统一处理方式\",{\"1\":{\"225\":1}}],[\"都应该可以扩展\",{\"1\":{\"62\":1}}],[\"都在右子树\",{\"1\":{\"47\":1}}],[\"都在左子树\",{\"1\":{\"47\":1}}],[\"都不为空返回当前节点\",{\"1\":{\"47\":1}}],[\"qps\",{\"1\":{\"297\":1}}],[\"qps每秒能承载的请求量\",{\"1\":{\"297\":1}}],[\"qiankun\",{\"1\":{\"265\":1}}],[\"query\",{\"1\":{\"295\":1}}],[\"queuemicrotask\",{\"1\":{\"312\":1}}],[\"queue\",{\"1\":{\"4\":5,\"9\":1,\"311\":2,\"338\":3,\"443\":8,\"444\":4}}],[\"quad\",{\"1\":{\"229\":2}}],[\"quic\",{\"1\":{\"136\":1}}],[\"q\",{\"1\":{\"47\":1}}],[\"任意二叉树\",{\"1\":{\"47\":1}}],[\"任意一个变量x与0进行异或运算\",{\"1\":{\"17\":1}}],[\"任意一个变量x与其自身进行异或运算\",{\"1\":{\"17\":1}}],[\"只会执行一次\",{\"1\":{\"445\":1}}],[\"只会将函数名设为\",{\"1\":{\"361\":1}}],[\"只遍历可枚举的有\",{\"1\":{\"421\":1}}],[\"只允许将可垃圾回收的值作为键\",{\"1\":{\"411\":1}}],[\"只允许最后一行不满\",{\"1\":{\"40\":1}}],[\"只比较同类型\",{\"1\":{\"399\":1}}],[\"只读属性\",{\"0\":{\"392\":1}}],[\"只清理死亡对象\",{\"1\":{\"384\":1}}],[\"只清除没有被标记的对象\",{\"1\":{\"384\":1}}],[\"只是赋值给外部的f\",{\"1\":{\"361\":1}}],[\"只对文件进行字符串读取\",{\"1\":{\"349\":1}}],[\"只要\",{\"1\":{\"342\":1}}],[\"只跟第一个敲定的有关\",{\"1\":{\"334\":1}}],[\"只用作检查\",{\"1\":{\"253\":1}}],[\"只用发送表中对应的索引\",{\"1\":{\"131\":1}}],[\"只发布有改动的包\",{\"1\":{\"249\":1}}],[\"只发送文本消息\",{\"1\":{\"201\":1}}],[\"只绘制可视区域\",{\"1\":{\"235\":1}}],[\"只影响最后\",{\"1\":{\"232\":1}}],[\"只在最后\",{\"1\":{\"232\":1}}],[\"只有+0\",{\"1\":{\"400\":1}}],[\"只有当空间不足以对从新生代中晋升过来的对象进行分配时才使用\",{\"1\":{\"385\":1}}],[\"只有\",{\"1\":{\"339\":1}}],[\"只有created\",{\"1\":{\"306\":1}}],[\"只有以下\",{\"1\":{\"214\":1}}],[\"只有在服务端没有返回明确的缓存策略时才会激活浏览器的启发式缓存策略\",{\"1\":{\"126\":1}}],[\"只能使用堆内存中的一半\",{\"1\":{\"380\":1}}],[\"只能拥有i1\",{\"1\":{\"355\":1}}],[\"只能在当前\",{\"1\":{\"355\":1}}],[\"只能在访问\",{\"1\":{\"209\":1}}],[\"只能作为模块顶层的语句出现\",{\"1\":{\"349\":1}}],[\"只能捕获到同步的运行时错误\",{\"1\":{\"221\":1}}],[\"只能由服务端发送给客户端\",{\"1\":{\"201\":1}}],[\"只能被浏览器缓存\",{\"1\":{\"124\":1}}],[\"只设置\",{\"1\":{\"88\":1,\"392\":1}}],[\"只\",{\"1\":{\"60\":1}}],[\"只记录前继节点\",{\"1\":{\"47\":1}}],[\"比较生成\",{\"1\":{\"472\":1}}],[\"比较规则同===\",{\"1\":{\"400\":1}}],[\"比较占空间\",{\"1\":{\"47\":1}}],[\"比\",{\"1\":{\"139\":1}}],[\"比如记录更新前的\",{\"1\":{\"516\":1}}],[\"比如原型上的属性\",{\"1\":{\"374\":1}}],[\"比如代码\",{\"1\":{\"325\":1}}],[\"比如\",{\"1\":{\"98\":1,\"111\":2}}],[\"比如消息中间件\",{\"1\":{\"65\":1}}],[\"比入数小的都pop出去\",{\"1\":{\"57\":1}}],[\"比特位计数\",{\"1\":{\"20\":1}}],[\"得到最终要安装的包\",{\"1\":{\"159\":1}}],[\"得到从小到大排序\",{\"1\":{\"57\":1}}],[\"得到\",{\"1\":{\"47\":1}}],[\"得到n个1\",{\"1\":{\"20\":1}}],[\"得到n位的空的位置\",{\"1\":{\"20\":1}}],[\"后\",{\"1\":{\"493\":1}}],[\"后者需要区别对待\",{\"1\":{\"445\":1}}],[\"后的路径不能省略\",{\"1\":{\"434\":1}}],[\"后面的是值\",{\"1\":{\"430\":1}}],[\"后面的元素也需要向前移动\",{\"1\":{\"50\":1}}],[\"后面的元素需要向后挪动\",{\"1\":{\"50\":1}}],[\"后加上参数来对安装进行控制\",{\"1\":{\"325\":1}}],[\"后来都改用\",{\"1\":{\"280\":1}}],[\"后端服务器都会接到请求\",{\"1\":{\"213\":1}}],[\"后继\",{\"1\":{\"51\":1}}],[\"后序\",{\"1\":{\"46\":1}}],[\"后两个数双指针\",{\"1\":{\"36\":1}}],[\"中用\",{\"1\":{\"547\":1}}],[\"中嵌套nexttick\",{\"1\":{\"541\":1}}],[\"中判断\",{\"0\":{\"529\":1}}],[\"中监测到\",{\"1\":{\"493\":1}}],[\"中调用\",{\"1\":{\"490\":1}}],[\"中传入\",{\"1\":{\"487\":1}}],[\"中提供的方法\",{\"1\":{\"486\":1}}],[\"中数据需要多个组件间共享\",{\"1\":{\"482\":1}}],[\"中数据结构\",{\"0\":{\"470\":1}}],[\"中有两个\",{\"1\":{\"472\":1}}],[\"中action为hook上的lastrenderedreducer\",{\"1\":{\"443\":1}}],[\"中执行\",{\"1\":{\"442\":1}}],[\"中使用\",{\"1\":{\"431\":1,\"461\":1}}],[\"中只复制活着的对象\",{\"1\":{\"384\":1}}],[\"中只安排渲染有关逻辑\",{\"1\":{\"171\":1}}],[\"中没有存活的对象将会被释放\",{\"1\":{\"379\":1}}],[\"中没有用到的代码\",{\"1\":{\"348\":1}}],[\"中命名属性有三种的不同存储方式\",{\"1\":{\"370\":1}}],[\"中为\",{\"1\":{\"367\":1}}],[\"中对象的结构\",{\"0\":{\"367\":1}}],[\"中属性名和值的\",{\"1\":{\"354\":1}}],[\"中配置\",{\"1\":{\"348\":1}}],[\"中回调默认返回\",{\"1\":{\"344\":1}}],[\"中必须显式调用\",{\"1\":{\"344\":1}}],[\"中宏任务有优先级\",{\"1\":{\"315\":1}}],[\"中由\",{\"1\":{\"310\":1}}],[\"中写数据\",{\"1\":{\"302\":1}}],[\"中管理变量的生命周期\",{\"1\":{\"243\":1}}],[\"中等待更新\",{\"1\":{\"230\":1}}],[\"中可以监听处理过了的\",{\"1\":{\"221\":1}}],[\"中通过\",{\"1\":{\"209\":1}}],[\"中进行\",{\"1\":{\"186\":1}}],[\"中创建\",{\"1\":{\"159\":1}}],[\"中比较大的坑\",{\"1\":{\"134\":1}}],[\"中一个请求或一个响应\",{\"1\":{\"132\":1}}],[\"中的类通常被称为\",{\"1\":{\"495\":1}}],[\"中的queue\",{\"1\":{\"443\":1}}],[\"中的值\",{\"1\":{\"394\":1}}],[\"中的索引变成了毫无规律的数\",{\"1\":{\"373\":1}}],[\"中的语句如果\",{\"1\":{\"344\":1}}],[\"中的回调不接受任何参数\",{\"1\":{\"342\":1}}],[\"中的代码也看作宏任务\",{\"1\":{\"312\":1}}],[\"中的方法\",{\"1\":{\"286\":1}}],[\"中的优先画\",{\"1\":{\"229\":1}}],[\"中的\",{\"1\":{\"96\":1,\"261\":1,\"269\":1,\"315\":1,\"355\":1,\"394\":1,\"442\":1,\"461\":1,\"487\":1,\"490\":1}}],[\"中间一半分开\",{\"1\":{\"74\":1}}],[\"中介者\",{\"1\":{\"61\":1}}],[\"中介者模式\",{\"1\":{\"61\":1}}],[\"中\",{\"0\":{\"431\":1,\"432\":1,\"461\":1},\"1\":{\"47\":1,\"135\":2,\"183\":1,\"209\":1,\"221\":1,\"344\":2,\"355\":1,\"361\":2,\"365\":1,\"367\":1,\"407\":1,\"432\":1,\"442\":1,\"475\":1,\"477\":1,\"486\":1,\"547\":1}}],[\"中序遍历\",{\"1\":{\"47\":2}}],[\"中序\",{\"1\":{\"46\":1,\"47\":1}}],[\"中放需要的\",{\"1\":{\"36\":1}}],[\"中放自己\",{\"1\":{\"36\":1}}],[\"前后端同构\",{\"0\":{\"296\":1}}],[\"前后都可以进出\",{\"1\":{\"57\":1}}],[\"前的\",{\"1\":{\"139\":1}}],[\"前端性能瓶颈\",{\"1\":{\"365\":1}}],[\"前端工程会用到\",{\"1\":{\"257\":1}}],[\"前端构建\",{\"0\":{\"256\":1}}],[\"前端\",{\"0\":{\"99\":1,\"220\":1}}],[\"前k大元素放到小顶堆中\",{\"1\":{\"57\":1}}],[\"前序\",{\"1\":{\"46\":1}}],[\"前两个树嵌套循环\",{\"1\":{\"36\":1}}],[\"则不会执行\",{\"1\":{\"511\":1}}],[\"则抛出\",{\"1\":{\"406\":1}}],[\"则将新的\",{\"1\":{\"283\":1}}],[\"则会多一次判定\",{\"1\":{\"283\":1}}],[\"则使用turn进行中转\",{\"1\":{\"276\":1}}],[\"则进入下一步\",{\"1\":{\"159\":1}}],[\"则右子树上所有结点的值均大于它的根结点的值\",{\"1\":{\"45\":1}}],[\"则左子树上所有结点的值均小于它的根结点的值\",{\"1\":{\"45\":1}}],[\"若是take到对应的actiontype来到执行next继续往下\",{\"1\":{\"493\":1}}],[\"若失败\",{\"1\":{\"276\":1}}],[\"若通过\",{\"1\":{\"180\":1}}],[\"若它的右子树不空\",{\"1\":{\"45\":1}}],[\"若节点为\",{\"1\":{\"41\":1}}],[\"下一次flush执行还能找到当前的task\",{\"1\":{\"480\":1}}],[\"下一个宏任务执行\",{\"1\":{\"480\":1}}],[\"下一个宏任务\",{\"1\":{\"480\":1}}],[\"下一帧再渲染\",{\"1\":{\"469\":1}}],[\"下按创建顺序存放\",{\"1\":{\"373\":1}}],[\"下面我们看下es\",{\"0\":{\"349\":1}}],[\"下面的语句相当于放到\",{\"1\":{\"344\":1}}],[\"下面\",{\"1\":{\"325\":1}}],[\"下面就分别对这三种策略进行详细介绍\",{\"1\":{\"203\":1}}],[\"下\",{\"1\":{\"311\":1}}],[\"下载合并\",{\"1\":{\"365\":1}}],[\"下载完成之后\",{\"1\":{\"169\":1}}],[\"下载到缓存中\",{\"1\":{\"159\":1}}],[\"下到最底层\",{\"1\":{\"43\":1}}],[\"下滤第一排\",{\"1\":{\"43\":1}}],[\"下滤过程\",{\"1\":{\"42\":1}}],[\"下滤\",{\"1\":{\"42\":1,\"43\":1,\"57\":1}}],[\"第三范式\",{\"0\":{\"323\":1}}],[\"第三方中转\",{\"0\":{\"164\":1}}],[\"第三方存储\",{\"0\":{\"163\":1}}],[\"第二个也是函数\",{\"1\":{\"341\":1}}],[\"第二个参数可以不用\",{\"1\":{\"299\":1}}],[\"第二范式\",{\"0\":{\"322\":1}}],[\"第二排下滤\",{\"1\":{\"43\":1}}],[\"第一次定义的\",{\"1\":{\"496\":1}}],[\"第一次绘制\",{\"1\":{\"235\":1}}],[\"第一范式\",{\"0\":{\"321\":1}}],[\"第一方集\",{\"0\":{\"210\":1}}],[\"第几层存第几位字母\",{\"1\":{\"26\":1}}],[\"对比\",{\"1\":{\"476\":1}}],[\"对每个请求都创建新的\",{\"1\":{\"307\":1}}],[\"对每个父节点下滤\",{\"1\":{\"43\":1}}],[\"对外部访问修改可控\",{\"1\":{\"266\":1}}],[\"对\",{\"0\":{\"240\":1},\"1\":{\"287\":1,\"492\":1,\"514\":1}}],[\"对应的\",{\"1\":{\"339\":1}}],[\"对应\",{\"1\":{\"217\":1}}],[\"对应字段为\",{\"1\":{\"182\":1}}],[\"对输入脚本进行过滤或转码\",{\"1\":{\"204\":1}}],[\"对不同域名的配置\",{\"1\":{\"185\":1}}],[\"对于\",{\"1\":{\"405\":1}}],[\"对于小于\",{\"1\":{\"301\":1}}],[\"对于每个api接口\",{\"1\":{\"295\":1}}],[\"对于语法和异步错误无能为力\",{\"1\":{\"221\":1}}],[\"对于不需要复杂\",{\"1\":{\"93\":1}}],[\"对于图需要判重的操作\",{\"1\":{\"3\":1}}],[\"对结果进行处理\",{\"1\":{\"73\":1}}],[\"对子问题递归\",{\"1\":{\"73\":1}}],[\"对象包含以下方法\",{\"1\":{\"460\":1}}],[\"对象指针\",{\"0\":{\"422\":1}}],[\"对象循环遍历方法\",{\"0\":{\"414\":1}}],[\"对象将依次调用它的\",{\"1\":{\"412\":1}}],[\"对象是唯一可变的值\",{\"1\":{\"407\":1}}],[\"对象需要相同引用\",{\"1\":{\"400\":1}}],[\"对象用\",{\"1\":{\"398\":1}}],[\"对象从新生代中移动到老生代中的过程称为晋升\",{\"1\":{\"382\":1}}],[\"对象内\",{\"0\":{\"373\":1}}],[\"对象内属性保存在对象本身\",{\"1\":{\"370\":1}}],[\"对象内属性\",{\"1\":{\"370\":1}}],[\"对象主要由三个指针构成\",{\"1\":{\"367\":1}}],[\"对象类型可以欺骗\",{\"1\":{\"351\":1}}],[\"对象类型\",{\"1\":{\"351\":1}}],[\"对象结构更新\",{\"1\":{\"313\":1}}],[\"对象监听相应的错误事件\",{\"1\":{\"225\":1}}],[\"对象的\",{\"1\":{\"220\":1,\"221\":1}}],[\"对象\",{\"0\":{\"291\":1,\"413\":1},\"1\":{\"66\":1,\"289\":1,\"300\":1,\"328\":1,\"398\":1,\"401\":1,\"443\":3}}],[\"对修改关闭\",{\"1\":{\"62\":1}}],[\"对扩展开放\",{\"1\":{\"62\":1}}],[\"自动采用严格模式\",{\"1\":{\"430\":1}}],[\"自动找出变量引用值的类型\",{\"1\":{\"352\":1}}],[\"自身\",{\"1\":{\"421\":5}}],[\"自身属性\",{\"1\":{\"421\":1}}],[\"自己构造的\",{\"1\":{\"355\":1}}],[\"自己写\",{\"1\":{\"264\":1}}],[\"自建\",{\"1\":{\"264\":1}}],[\"自定义渲染\",{\"1\":{\"461\":1}}],[\"自定义的类型\",{\"1\":{\"351\":1}}],[\"自定义\",{\"0\":{\"211\":1,\"460\":1}}],[\"自定义vite插件\",{\"1\":{\"99\":1}}],[\"自下而上建堆\",{\"1\":{\"43\":1}}],[\"自顶向下建堆\",{\"1\":{\"43\":1}}],[\"再修改\",{\"1\":{\"496\":1}}],[\"再预定下一个宏任务\",{\"1\":{\"480\":1}}],[\"再调用\",{\"1\":{\"412\":1}}],[\"再次查看a和b的map\",{\"1\":{\"369\":1}}],[\"再查看a的map地址指向\",{\"1\":{\"369\":1}}],[\"再在constructor\",{\"1\":{\"355\":1}}],[\"再将\",{\"1\":{\"348\":1}}],[\"再\",{\"1\":{\"326\":1}}],[\"再替换成后续字体\",{\"1\":{\"169\":1}}],[\"再跟旧的对比\",{\"1\":{\"102\":1}}],[\"再恢复子元素\",{\"1\":{\"89\":1}}],[\"再比较返回较大的值\",{\"1\":{\"74\":1}}],[\"再下滤\",{\"1\":{\"57\":1}}],[\"再更新剩下的元素成堆\",{\"1\":{\"57\":1}}],[\"再插入\",{\"1\":{\"43\":2}}],[\"再右移o\",{\"1\":{\"20\":1}}],[\"先点击这个按钮\",{\"1\":{\"496\":1}}],[\"先点\",{\"1\":{\"496\":1}}],[\"先发送过去\",{\"1\":{\"439\":1}}],[\"先设计并\",{\"1\":{\"365\":1}}],[\"先写一个\",{\"1\":{\"282\":1}}],[\"先验证数字证书和\",{\"1\":{\"180\":1}}],[\"先验证数字证书和签名\",{\"1\":{\"179\":1}}],[\"先验证数字证书\",{\"1\":{\"180\":1}}],[\"先用默认字体渲染\",{\"1\":{\"169\":1}}],[\"先插入\",{\"1\":{\"43\":1}}],[\"先排序o\",{\"1\":{\"36\":1}}],[\"8mb\",{\"1\":{\"377\":1}}],[\"8kb\",{\"0\":{\"283\":1},\"1\":{\"283\":3,\"301\":3,\"309\":1}}],[\"8080\",{\"1\":{\"200\":1}}],[\"8081\",{\"1\":{\"184\":1}}],[\"8090\",{\"1\":{\"183\":1}}],[\"800px\",{\"1\":{\"169\":1}}],[\"8\",{\"1\":{\"43\":6,\"201\":1,\"214\":1,\"299\":1,\"369\":1,\"374\":1}}],[\"7\",{\"1\":{\"43\":6}}],[\"6\",{\"1\":{\"43\":6,\"134\":1,\"186\":1,\"201\":1}}],[\"64\",{\"1\":{\"1\":1}}],[\"5ms\",{\"1\":{\"480\":1}}],[\"500px\",{\"1\":{\"438\":2}}],[\"5000\",{\"1\":{\"336\":1}}],[\"500\",{\"1\":{\"221\":1}}],[\"50ms\",{\"1\":{\"171\":1}}],[\"5s\",{\"1\":{\"166\":1}}],[\"5\",{\"0\":{\"289\":1},\"1\":{\"43\":9,\"165\":1,\"261\":1,\"336\":1,\"480\":1,\"535\":1}}],[\"512\",{\"1\":{\"33\":1}}],[\"346\",{\"1\":{\"394\":1}}],[\"333\",{\"1\":{\"390\":1}}],[\"3nf\",{\"0\":{\"323\":1}}],[\"3xx\",{\"0\":{\"188\":1}}],[\"30\",{\"1\":{\"373\":1}}],[\"3001\",{\"1\":{\"319\":1}}],[\"3000\",{\"1\":{\"185\":1,\"200\":2,\"319\":1,\"496\":1}}],[\"308\",{\"0\":{\"194\":1}}],[\"307\",{\"0\":{\"193\":1}}],[\"303\",{\"0\":{\"191\":1}}],[\"302\",{\"0\":{\"190\":1}}],[\"301\",{\"0\":{\"189\":1}}],[\"304\",{\"0\":{\"192\":1},\"1\":{\"125\":2}}],[\"3d\",{\"1\":{\"93\":1,\"94\":6,\"95\":2,\"97\":1,\"240\":1}}],[\"3\",{\"0\":{\"179\":1,\"287\":1},\"1\":{\"43\":9,\"47\":1,\"136\":1,\"179\":2,\"180\":1,\"183\":1,\"252\":1,\"281\":1,\"330\":2,\"339\":1,\"340\":3,\"345\":1,\"356\":1,\"361\":2,\"396\":1,\"424\":2,\"461\":1,\"487\":1,\"548\":1}}],[\"321\",{\"1\":{\"353\":2}}],[\"320p\",{\"1\":{\"169\":1}}],[\"320w\",{\"1\":{\"169\":2}}],[\"32\",{\"1\":{\"1\":1}}],[\"大多数的源代码包都经过这一步进行编译\",{\"1\":{\"326\":1}}],[\"大端放低位\",{\"1\":{\"281\":1}}],[\"大端放高位\",{\"1\":{\"281\":1}}],[\"大厂监控体系\",{\"0\":{\"172\":1}}],[\"大大减少了首部字节\",{\"1\":{\"135\":1}}],[\"大包个数及大小优化\",{\"0\":{\"128\":1}}],[\"大计算\",{\"1\":{\"117\":1}}],[\"大化小\",{\"1\":{\"72\":1}}],[\"大根堆\",{\"1\":{\"57\":1}}],[\"大于\",{\"1\":{\"47\":1}}],[\"大于则交换\",{\"1\":{\"42\":2}}],[\"大于目标右指针左移\",{\"1\":{\"36\":1}}],[\"大顶堆\",{\"1\":{\"42\":2,\"56\":1}}],[\"根声明变量表现一致\",{\"1\":{\"361\":1}}],[\"根目录\",{\"1\":{\"251\":1}}],[\"根目录中查看\",{\"1\":{\"159\":1}}],[\"根节点\",{\"1\":{\"239\":1,\"460\":2}}],[\"根节点不包含字符\",{\"1\":{\"28\":1}}],[\"根本无从知晓该文件是不是一个硬链接\",{\"1\":{\"158\":1}}],[\"根据传入的\",{\"1\":{\"511\":1}}],[\"根据这些决定数据存在那里\",{\"1\":{\"482\":1}}],[\"根据当前路径\",{\"1\":{\"465\":1}}],[\"根据性能指标找性能瓶颈\",{\"1\":{\"297\":1}}],[\"根据动词\",{\"1\":{\"294\":1}}],[\"根据位图生成\",{\"1\":{\"229\":1}}],[\"根据\",{\"1\":{\"229\":1,\"235\":1,\"442\":1,\"476\":1,\"477\":1,\"540\":1,\"543\":1}}],[\"根据指标要求进行数据圈层\",{\"1\":{\"172\":1}}],[\"根据文件自身内容\",{\"1\":{\"110\":1}}],[\"根据入口\",{\"1\":{\"110\":1}}],[\"根元素与最后元素交换\",{\"1\":{\"57\":1}}],[\"根电节点向下调整\",{\"1\":{\"42\":2}}],[\"右边第一个兄弟\",{\"1\":{\"472\":1}}],[\"右边直接加1\",{\"1\":{\"7\":1}}],[\"右节点为空返回左节点\",{\"1\":{\"47\":1}}],[\"右子树最小值minright​\",{\"1\":{\"47\":1}}],[\"右子节点为2i+2\",{\"1\":{\"41\":1}}],[\"右\",{\"1\":{\"47\":1}}],[\"堆叠上下文z\",{\"1\":{\"229\":1}}],[\"堆顶为k中的最大值\",{\"1\":{\"57\":1}}],[\"堆顶为第k大的元素\",{\"1\":{\"57\":1}}],[\"堆中最小值\",{\"1\":{\"57\":1}}],[\"堆排序\",{\"1\":{\"57\":1}}],[\"堆的时间复杂度\",{\"0\":{\"58\":1}}],[\"堆的应用\",{\"0\":{\"44\":1}}],[\"堆的操作\",{\"0\":{\"42\":1}}],[\"堆的实现\",{\"0\":{\"41\":1}}],[\"堆\",{\"0\":{\"39\":1},\"1\":{\"56\":1,\"57\":1,\"422\":1}}],[\"小垃圾回收只收集新生代\",{\"1\":{\"386\":1}}],[\"小体积\",{\"1\":{\"365\":1}}],[\"小顶二叉堆\",{\"1\":{\"56\":1}}],[\"小顶堆\",{\"1\":{\"42\":2,\"57\":1}}],[\"小于\",{\"1\":{\"47\":1,\"170\":1}}],[\"小于则交换\",{\"1\":{\"42\":2}}],[\"小于目标左指针右移\",{\"1\":{\"36\":1}}],[\"小数舍弃小数部分\",{\"1\":{\"19\":1}}],[\"放入等待更新的\",{\"1\":{\"443\":1}}],[\"放入微队列\",{\"1\":{\"339\":4}}],[\"放去作用域链\",{\"1\":{\"358\":1}}],[\"放到\",{\"1\":{\"230\":1,\"477\":1}}],[\"放到队列中\",{\"1\":{\"221\":1}}],[\"放自己\",{\"1\":{\"36\":1}}],[\"放需要的\",{\"1\":{\"36\":1}}],[\"是建立在继承之上\",{\"1\":{\"498\":1}}],[\"是嵌套的结构\",{\"1\":{\"471\":1}}],[\"是链表\",{\"1\":{\"443\":1}}],[\"是复制于\",{\"1\":{\"442\":1}}],[\"是当前\",{\"1\":{\"442\":1}}],[\"是在\",{\"1\":{\"442\":1}}],[\"是自身属性\",{\"1\":{\"420\":1}}],[\"是自己\",{\"1\":{\"36\":2}}],[\"是一个\",{\"1\":{\"490\":1}}],[\"是一个普通的标识符\",{\"1\":{\"406\":1}}],[\"是一个关键字\",{\"1\":{\"406\":1}}],[\"是一种复制算法\",{\"1\":{\"379\":1}}],[\"是唯一并且不可变的原始值并且可以用来作为对象属性的键\",{\"1\":{\"406\":1}}],[\"是唯一一个type是function\",{\"1\":{\"401\":1}}],[\"是唯一客户端必须携带的请求头\",{\"1\":{\"183\":1}}],[\"是构造器\",{\"1\":{\"401\":1}}],[\"是私有属性\",{\"1\":{\"394\":1}}],[\"是典型的牺牲空间换取时间的算法\",{\"1\":{\"381\":1}}],[\"是微任务\",{\"1\":{\"344\":1}}],[\"是同步执行\",{\"1\":{\"344\":1}}],[\"是单线程\",{\"1\":{\"310\":1}}],[\"是单链接架构\",{\"1\":{\"134\":1}}],[\"是由渲染引起的副作用\",{\"1\":{\"451\":1}}],[\"是由\",{\"1\":{\"301\":1}}],[\"是定义在\",{\"1\":{\"286\":1}}],[\"是stun\",{\"1\":{\"275\":1}}],[\"是数据格式\",{\"1\":{\"273\":1}}],[\"是否需要更新子组件\",{\"0\":{\"529\":1}}],[\"是否改变\",{\"1\":{\"511\":1}}],[\"是否携带票据访问\",{\"1\":{\"217\":1}}],[\"是否已经有缓存\",{\"1\":{\"159\":1}}],[\"是指页面开始加载到最大文本块内容或图片显示在页面中的时间\",{\"1\":{\"165\":1}}],[\"是以文本来分隔\",{\"1\":{\"131\":1}}],[\"是基于帧的协议\",{\"1\":{\"131\":1}}],[\"是路径相关\",{\"1\":{\"109\":1}}],[\"是\",{\"1\":{\"107\":1,\"280\":1,\"356\":1,\"421\":8,\"468\":1}}],[\"是虚拟\",{\"1\":{\"107\":1}}],[\"是最常用的渲染器\",{\"1\":{\"94\":1}}],[\"是有序的\",{\"1\":{\"15\":1}}],[\"空树\",{\"1\":{\"45\":1}}],[\"空间之间进行复制\",{\"1\":{\"379\":1}}],[\"空间中或者提升到老生代空间中\",{\"1\":{\"379\":1}}],[\"空间中存活的对象复制到\",{\"1\":{\"379\":1}}],[\"空间中定位\",{\"1\":{\"97\":1}}],[\"空间换时间\",{\"1\":{\"299\":1}}],[\"空间坐标转换和投影为\",{\"1\":{\"95\":1}}],[\"空间转换为\",{\"1\":{\"95\":1}}],[\"空间复杂度小\",{\"1\":{\"36\":1}}],[\"空间不需要set\",{\"1\":{\"36\":1}}],[\"空间o\",{\"1\":{\"36\":1}}],[\"空位为1\",{\"1\":{\"20\":1}}],[\"或相关初始化\",{\"1\":{\"445\":1}}],[\"或子\",{\"1\":{\"355\":1}}],[\"或等待\",{\"1\":{\"229\":1}}],[\"或文本\",{\"1\":{\"200\":1}}],[\"或双链表\",{\"1\":{\"53\":1}}],[\"或\",{\"1\":{\"47\":1,\"90\":2,\"169\":1,\"280\":1,\"292\":1,\"312\":1,\"340\":1,\"343\":1,\"448\":1,\"507\":1,\"545\":1}}],[\"或set\",{\"1\":{\"36\":1}}],[\"或者设置memo在parent中\",{\"1\":{\"530\":1}}],[\"或者返回新的\",{\"1\":{\"492\":1}}],[\"或者它们相互隐式转换\",{\"1\":{\"406\":1}}],[\"或者package\",{\"1\":{\"348\":1}}],[\"或者利用\",{\"1\":{\"336\":1}}],[\"或者你的系统少了一些依赖库等\",{\"1\":{\"326\":1}}],[\"或者用isinputpending模拟更高优先级任务\",{\"1\":{\"480\":1}}],[\"或者用不会渲染的元素<script\",{\"1\":{\"365\":1}}],[\"或者用pipe\",{\"1\":{\"309\":1}}],[\"或者用事件与回调来控制\",{\"1\":{\"168\":1}}],[\"或者setup\",{\"1\":{\"306\":1}}],[\"或者逻辑流程\",{\"1\":{\"244\":1}}],[\"或者更新了\",{\"1\":{\"230\":1}}],[\"或者等待之前发送的连接终止请求的确认\",{\"1\":{\"176\":1}}],[\"或者使用\",{\"1\":{\"169\":1}}],[\"或者给他们保留一个空间大小\",{\"1\":{\"169\":1}}],[\"或者\",{\"1\":{\"103\":2,\"106\":1,\"159\":1,\"185\":1,\"340\":1,\"396\":1,\"443\":1}}],[\"或者某个属性\",{\"1\":{\"55\":1}}],[\"或者若它的左子树不空\",{\"1\":{\"45\":1}}],[\"或者移动到底部为止\",{\"1\":{\"42\":2}}],[\"或者x\",{\"1\":{\"20\":1}}],[\"或者每个节点带上level\",{\"1\":{\"7\":1}}],[\"排序\",{\"1\":{\"36\":1,\"74\":1}}],[\"字符串类型强制转换\",{\"1\":{\"412\":1}}],[\"字符串是不可变的\",{\"1\":{\"406\":1}}],[\"字符串\",{\"1\":{\"398\":1}}],[\"字段和非简单值的字段\",{\"1\":{\"217\":1}}],[\"字段允许被修改或被设置\",{\"1\":{\"214\":1}}],[\"字段\",{\"1\":{\"203\":1,\"216\":1}}],[\"字体子集化\",{\"1\":{\"129\":1}}],[\"字体大小font\",{\"1\":{\"89\":1}}],[\"字母异位\",{\"1\":{\"36\":1}}],[\"字典搜索\",{\"1\":{\"29\":1}}],[\"字典树\",{\"0\":{\"25\":1}}],[\"元素状态会不一致\",{\"1\":{\"514\":1}}],[\"元素的\",{\"1\":{\"495\":1}}],[\"元素类型\",{\"1\":{\"472\":1}}],[\"元素顺序是固定的\",{\"1\":{\"353\":1}}],[\"元素或者\",{\"1\":{\"240\":1}}],[\"元素\",{\"1\":{\"240\":1}}],[\"元素中\",{\"1\":{\"97\":1}}],[\"元素作为\",{\"1\":{\"92\":1}}],[\"元素之间有空隙\",{\"1\":{\"89\":1}}],[\"元素都是盒模型\",{\"1\":{\"88\":1}}],[\"元素排列有序\",{\"1\":{\"38\":1}}],[\"元素可重复\",{\"1\":{\"34\":1}}],[\"元素指向下一个节点\",{\"1\":{\"26\":1}}],[\"vm\",{\"1\":{\"540\":1,\"548\":15}}],[\"vnode\",{\"1\":{\"515\":1,\"540\":1}}],[\"v18\",{\"1\":{\"468\":1}}],[\"v17\",{\"1\":{\"468\":2}}],[\"v16\",{\"1\":{\"468\":2}}],[\"v8\",{\"0\":{\"288\":1,\"367\":1},\"1\":{\"241\":1,\"287\":1,\"288\":1,\"303\":1,\"309\":1,\"367\":2,\"370\":1,\"376\":2,\"377\":1}}],[\"void\",{\"1\":{\"227\":2,\"351\":1,\"355\":2,\"389\":1}}],[\"view\",{\"1\":{\"243\":1}}],[\"viewport\",{\"1\":{\"214\":1,\"229\":2}}],[\"videoelem\",{\"1\":{\"278\":1}}],[\"video\",{\"1\":{\"239\":1,\"240\":1}}],[\"vite\",{\"0\":{\"211\":1},\"1\":{\"211\":1}}],[\"visibility\",{\"1\":{\"171\":1}}],[\"visible\",{\"1\":{\"90\":1}}],[\"visited\",{\"1\":{\"4\":2,\"6\":7}}],[\"version\",{\"1\":{\"200\":1}}],[\"vertex\",{\"1\":{\"95\":1,\"97\":1}}],[\"vendors\",{\"1\":{\"109\":1}}],[\"vendor\",{\"1\":{\"109\":1,\"128\":1}}],[\"vdom\",{\"0\":{\"470\":1,\"471\":1},\"1\":{\"107\":1,\"471\":3,\"472\":1,\"473\":1,\"514\":1}}],[\"v\",{\"1\":{\"103\":1,\"476\":1}}],[\"vue中serverprefetch\",{\"1\":{\"308\":1}}],[\"vueserverrenderer\",{\"1\":{\"296\":1}}],[\"vuex\",{\"0\":{\"106\":1},\"1\":{\"106\":1}}],[\"vue3\",{\"1\":{\"104\":1,\"461\":1}}],[\"vue2\",{\"1\":{\"104\":1}}],[\"vue\",{\"0\":{\"100\":1,\"223\":1,\"461\":1,\"539\":1,\"542\":1},\"1\":{\"99\":1,\"101\":1,\"102\":3,\"103\":1,\"105\":1,\"106\":1,\"107\":1,\"143\":1,\"220\":1,\"223\":1,\"261\":1,\"305\":3,\"307\":1,\"461\":3,\"480\":1,\"539\":1,\"542\":1,\"548\":13,\"551\":1}}],[\"value=\",{\"1\":{\"450\":1,\"465\":2,\"496\":1}}],[\"values\",{\"0\":{\"416\":1},\"1\":{\"421\":1}}],[\"valueof\",{\"1\":{\"412\":5}}],[\"value\",{\"1\":{\"227\":1,\"282\":1,\"293\":1,\"337\":4,\"345\":2,\"355\":4,\"368\":2,\"408\":1,\"419\":6,\"450\":2,\"457\":2,\"491\":1,\"493\":2}}],[\"val\",{\"1\":{\"47\":6,\"355\":4,\"390\":2,\"394\":2}}],[\"variable\",{\"1\":{\"358\":1,\"433\":1}}],[\"variables\",{\"1\":{\"352\":1}}],[\"var\",{\"0\":{\"329\":1,\"330\":1,\"331\":1,\"332\":1},\"1\":{\"47\":1,\"74\":1,\"201\":1,\"295\":2,\"328\":1,\"330\":4,\"331\":2,\"332\":1,\"345\":1,\"358\":3,\"360\":3,\"361\":1,\"363\":7,\"369\":2,\"372\":2,\"373\":6,\"374\":3,\"389\":4,\"406\":1,\"419\":4,\"424\":1}}],[\"vscode\",{\"1\":{\"252\":1}}],[\"vs\",{\"0\":{\"34\":2},\"1\":{\"292\":1}}],[\"集群现象\",{\"1\":{\"33\":1}}],[\"集合\",{\"0\":{\"30\":1}}],[\"占用大\",{\"1\":{\"297\":1}}],[\"占用了放nn的位置中\",{\"1\":{\"33\":1}}],[\"占用了就放下一个位置中\",{\"1\":{\"33\":1}}],[\"占位\",{\"1\":{\"20\":1}}],[\"开发环境\",{\"1\":{\"548\":1}}],[\"开发流程优化\",{\"1\":{\"365\":1}}],[\"开发策略\",{\"1\":{\"245\":1}}],[\"开发一个\",{\"1\":{\"211\":1}}],[\"开始\",{\"0\":{\"475\":1}}],[\"开始执行第一行代码\",{\"1\":{\"360\":1}}],[\"开始执行\",{\"1\":{\"339\":1}}],[\"开始工作\",{\"1\":{\"311\":1}}],[\"开始p2p\",{\"1\":{\"278\":1}}],[\"开始显示页面\",{\"1\":{\"234\":1}}],[\"开始属性计算\",{\"1\":{\"229\":1}}],[\"开始统一发出去\",{\"1\":{\"229\":1}}],[\"开始增加\",{\"1\":{\"23\":1}}],[\"开启一次调度\",{\"1\":{\"480\":1}}],[\"开启局部作用域\",{\"1\":{\"261\":1}}],[\"开启\",{\"0\":{\"114\":1},\"1\":{\"289\":1}}],[\"开放封闭原则\",{\"0\":{\"62\":1}}],[\"开放寻址法\",{\"1\":{\"33\":1}}],[\"哈希文件名\",{\"1\":{\"129\":1}}],[\"哈希算法\",{\"1\":{\"33\":1}}],[\"哈希需要不可逆\",{\"1\":{\"32\":1}}],[\"哈希之后不可逆\",{\"1\":{\"31\":1}}],[\"哈希hash\",{\"1\":{\"31\":1}}],[\"哈希函数\",{\"0\":{\"31\":1,\"32\":1}}],[\"哈希表或二叉搜索树实现\",{\"1\":{\"34\":1}}],[\"哈希表就是键值对\",{\"1\":{\"31\":1}}],[\"哈希表\",{\"0\":{\"31\":1}}],[\"多缓存\",{\"1\":{\"365\":1}}],[\"多级嵌套\",{\"0\":{\"339\":1}}],[\"多久并发量能得到结果\",{\"1\":{\"297\":1}}],[\"多实例\",{\"1\":{\"266\":1}}],[\"多路并用\",{\"1\":{\"258\":1}}],[\"多路复用\",{\"1\":{\"131\":1}}],[\"多对多\",{\"1\":{\"181\":1}}],[\"多线程执行光栅化\",{\"1\":{\"229\":1}}],[\"多线程\",{\"1\":{\"141\":1}}],[\"多个项目用一个代码仓库来管理依赖关系\",{\"1\":{\"245\":1}}],[\"多个服务\",{\"1\":{\"183\":1}}],[\"多个插入改为整体化内容插入\",{\"1\":{\"169\":1}}],[\"多个\",{\"1\":{\"135\":1,\"183\":1,\"186\":1}}],[\"多入口\",{\"1\":{\"128\":1,\"129\":1,\"258\":1}}],[\"多大的文件才提取\",{\"1\":{\"109\":1}}],[\"多层嵌套\",{\"1\":{\"66\":1}}],[\"多用于跨应用\",{\"1\":{\"65\":1}}],[\"多用于查询和计数\",{\"1\":{\"30\":1}}],[\"多种记录值\",{\"1\":{\"24\":1}}],[\"和组件的关系触发组件的\",{\"1\":{\"543\":1}}],[\"和局部变量\",{\"1\":{\"498\":1}}],[\"和慢属性\",{\"1\":{\"370\":1}}],[\"和其他\",{\"1\":{\"368\":1}}],[\"和抽象类的方法\",{\"1\":{\"355\":1}}],[\"和非阻塞式\",{\"1\":{\"310\":1}}],[\"和全局\",{\"1\":{\"307\":1}}],[\"和candidate\",{\"1\":{\"273\":1}}],[\"和客户端证书等票据\",{\"1\":{\"222\":1}}],[\"和端口的连接请求\",{\"1\":{\"176\":1}}],[\"和文件内容不直接相关\",{\"1\":{\"158\":1}}],[\"和之前链接的文件没有任何关系\",{\"1\":{\"158\":1}}],[\"和骨骼动画\",{\"1\":{\"94\":1}}],[\"和返回前进按钮触发\",{\"1\":{\"79\":1}}],[\"和\",{\"0\":{\"544\":1},\"1\":{\"30\":1,\"88\":1,\"139\":1,\"143\":1,\"159\":2,\"162\":1,\"165\":1,\"166\":1,\"171\":1,\"182\":1,\"184\":2,\"201\":1,\"204\":1,\"217\":1,\"220\":2,\"221\":1,\"229\":2,\"235\":1,\"297\":1,\"312\":2,\"313\":1,\"315\":1,\"358\":1,\"365\":1,\"367\":1,\"379\":2,\"405\":1,\"411\":3,\"412\":1,\"418\":1,\"430\":1,\"458\":1,\"464\":1,\"469\":1,\"472\":2,\"476\":1,\"487\":1,\"490\":2,\"506\":1,\"543\":1}}],[\"映射\",{\"0\":{\"30\":1}}],[\"经历这样一个过程后\",{\"1\":{\"348\":1}}],[\"经常被搜索引擎系统用于文本词频统计\",{\"1\":{\"25\":1}}],[\"经典题目\",{\"1\":{\"10\":1}}],[\"查看快照\",{\"1\":{\"374\":1}}],[\"查看a和b的map\",{\"1\":{\"369\":1}}],[\"查看a的map地址指向\",{\"1\":{\"369\":1}}],[\"查看哪些代码是用到过的\",{\"1\":{\"348\":1}}],[\"查看详细的说明帮助\",{\"1\":{\"325\":1}}],[\"查看\",{\"1\":{\"297\":1}}],[\"查看长度\",{\"1\":{\"1\":1}}],[\"查询优化\",{\"0\":{\"119\":1}}],[\"查询效率比哈希表高\",{\"1\":{\"25\":1}}],[\"查找需要\",{\"1\":{\"51\":1}}],[\"查找需要的\",{\"1\":{\"36\":1}}],[\"查找块\",{\"1\":{\"38\":1}}],[\"查找自己有没有被需要\",{\"1\":{\"36\":1}}],[\"查找就找自己\",{\"1\":{\"36\":1}}],[\"查找就找我需要的\",{\"1\":{\"36\":1}}],[\"查找o\",{\"1\":{\"34\":2,\"50\":1}}],[\"斐波那契问题\",{\"1\":{\"72\":1}}],[\"斐波那契数列\",{\"1\":{\"70\":2}}],[\"斐波那契\",{\"0\":{\"24\":1}}],[\"斐波那契+memo\",{\"1\":{\"23\":1}}],[\"状态管理需要实现的功能\",{\"1\":{\"482\":1}}],[\"状态管理\",{\"0\":{\"482\":1}}],[\"状态类\",{\"1\":{\"472\":1}}],[\"状态变为\",{\"1\":{\"340\":2}}],[\"状态\",{\"0\":{\"337\":1}}],[\"状态码进行握手\",{\"1\":{\"200\":1}}],[\"状态码\",{\"0\":{\"187\":1},\"1\":{\"183\":1}}],[\"状态转移方程\",{\"1\":{\"23\":1}}],[\"状态的定义\",{\"1\":{\"23\":1}}],[\"需要将回调放到全局变量中\",{\"1\":{\"547\":1}}],[\"需要拦截调用\",{\"1\":{\"545\":1}}],[\"需要后端返回同一个页面\",{\"1\":{\"544\":1}}],[\"需要一个判断函数controlchildrender\",{\"1\":{\"529\":1}}],[\"需要同时实现componentdidmount\",{\"1\":{\"522\":1}}],[\"需要同源\",{\"1\":{\"431\":1}}],[\"需要按照一定规则修改\",{\"1\":{\"482\":1}}],[\"需要监听方法\",{\"1\":{\"482\":1}}],[\"需要执行flush\",{\"1\":{\"480\":1}}],[\"需要执行到\",{\"1\":{\"361\":1}}],[\"需要在渲染后执行\",{\"1\":{\"479\":1}}],[\"需要宏任务\",{\"1\":{\"479\":1}}],[\"需要定义到静态属性上\",{\"1\":{\"450\":1}}],[\"需要通过\",{\"1\":{\"439\":1}}],[\"需要对每个节点递归\",{\"1\":{\"375\":1}}],[\"需要的数据接口\",{\"1\":{\"365\":1}}],[\"需要的组件\",{\"1\":{\"365\":1}}],[\"需要的设计\",{\"1\":{\"365\":1}}],[\"需要明确类型\",{\"1\":{\"352\":1}}],[\"需要注释的情况\",{\"1\":{\"352\":1}}],[\"需要拆分为两个表\",{\"1\":{\"322\":1}}],[\"需要什么返回什么\",{\"1\":{\"295\":1}}],[\"需要少的数据会有冗余\",{\"1\":{\"294\":1}}],[\"需要更多数据需要拉很多接口\",{\"1\":{\"294\":1}}],[\"需要更新解决不兼容问题\",{\"1\":{\"246\":1}}],[\"需要粘包切分\",{\"1\":{\"293\":1}}],[\"需要重新计算绘制指令集\",{\"1\":{\"231\":1}}],[\"需要重新生成\",{\"1\":{\"230\":1}}],[\"需要允许跨域\",{\"1\":{\"221\":1}}],[\"需要链接\",{\"1\":{\"181\":1}}],[\"需要编译时处理\",{\"1\":{\"143\":1}}],[\"需要转换\",{\"1\":{\"143\":1}}],[\"需要使用缓存协商\",{\"1\":{\"124\":1}}],[\"需要从头完全跑一次\",{\"1\":{\"102\":1}}],[\"需要encodeuricomponent转码\",{\"1\":{\"84\":1}}],[\"需要服务器将所有地址都代理到一个页面\",{\"1\":{\"77\":1}}],[\"需要\",{\"1\":{\"65\":1,\"106\":1,\"229\":1,\"368\":1}}],[\"需要时是升序的\",{\"1\":{\"47\":1}}],[\"需要搜索的放入trie\",{\"1\":{\"29\":1}}],[\"需要求的结果为每一步的状态\",{\"1\":{\"23\":1}}],[\"需要记录列\",{\"1\":{\"22\":1}}],[\"需要记录level\",{\"1\":{\"7\":1}}],[\"需要记录每一层结束的节点\",{\"1\":{\"7\":1}}],[\"从外到内渲染直接阻断\",{\"1\":{\"527\":1}}],[\"从根节点开始递归\",{\"1\":{\"468\":1}}],[\"从根节点到某一节点\",{\"1\":{\"28\":1}}],[\"从而进行更新\",{\"1\":{\"443\":1}}],[\"从概念上讲\",{\"1\":{\"406\":1}}],[\"从相同的起点\",{\"1\":{\"368\":1}}],[\"从开始执行\",{\"1\":{\"361\":1}}],[\"从入口文件遍历所有模块\",{\"1\":{\"348\":1}}],[\"从文本解析\",{\"0\":{\"233\":1}}],[\"从广义上讲\",{\"1\":{\"184\":1}}],[\"从数据采集\",{\"1\":{\"172\":1}}],[\"从窗口的右侧开始遍历\",{\"1\":{\"57\":1}}],[\"从倒数第二排开始\",{\"1\":{\"43\":1}}],[\"从\",{\"1\":{\"23\":1}}],[\"递推就返过来\",{\"1\":{\"23\":1}}],[\"递归这个\",{\"1\":{\"442\":1}}],[\"递归可以用于实现分治\",{\"1\":{\"72\":1}}],[\"递归可能会出现重复计算\",{\"1\":{\"70\":1}}],[\"递归调用\",{\"1\":{\"71\":1}}],[\"递归终止条件\",{\"1\":{\"71\":1,\"73\":1}}],[\"递归模版\",{\"0\":{\"71\":1}}],[\"递归+记忆化\",{\"1\":{\"23\":1}}],[\"递归之后需要恢复现场\",{\"1\":{\"22\":1}}],[\"递归\",{\"0\":{\"69\":1,\"70\":1},\"1\":{\"7\":1,\"10\":1,\"24\":1,\"47\":1,\"493\":1,\"499\":1}}],[\"数字类型强制转换\",{\"1\":{\"412\":1}}],[\"数字\",{\"1\":{\"400\":1}}],[\"数值\",{\"1\":{\"398\":1}}],[\"数学\",{\"1\":{\"322\":2}}],[\"数\",{\"0\":{\"37\":1}}],[\"数组\",{\"0\":{\"50\":1,\"410\":1},\"1\":{\"34\":1}}],[\"数组中的索引对应于数据的内存地址\",{\"1\":{\"31\":1}}],[\"数据变化\",{\"1\":{\"543\":1}}],[\"数据请求方案\",{\"1\":{\"502\":1}}],[\"数据可以被修改的方法\",{\"1\":{\"482\":1}}],[\"数据可能聚集在某几个键里\",{\"1\":{\"33\":1}}],[\"数据属性\",{\"0\":{\"408\":1}}],[\"数据注入到外部对象\",{\"1\":{\"308\":2}}],[\"数据聚合不好\",{\"1\":{\"294\":1}}],[\"数据包格式使用二进制\",{\"1\":{\"292\":1}}],[\"数据库设计的三范式\",{\"0\":{\"320\":1}}],[\"数据库\",{\"1\":{\"280\":1}}],[\"数据的增删改查\",{\"1\":{\"243\":1}}],[\"数据重组\",{\"1\":{\"172\":1}}],[\"数据分类\",{\"1\":{\"172\":1}}],[\"数据分组是确定从什么视⻆看什么数据\",{\"1\":{\"98\":1}}],[\"数据分组\",{\"1\":{\"98\":1}}],[\"数据清洗\",{\"1\":{\"172\":1}}],[\"数据处理\",{\"1\":{\"172\":1}}],[\"数据协议以及导入\",{\"1\":{\"150\":1}}],[\"数据源加载\",{\"1\":{\"150\":1}}],[\"数据源配置开发\",{\"1\":{\"150\":1}}],[\"数据源配置\",{\"1\":{\"144\":1}}],[\"数据\",{\"1\":{\"145\":1}}],[\"数据隔离\",{\"1\":{\"143\":1}}],[\"数据拦截\",{\"1\":{\"106\":1}}],[\"数据流向\",{\"0\":{\"103\":1}}],[\"数据计算\",{\"1\":{\"98\":1}}],[\"数据计算和可视化\",{\"1\":{\"98\":1}}],[\"数据运算为固定长度的值\",{\"1\":{\"33\":1}}],[\"数据结构\",{\"0\":{\"8\":1,\"9\":1,\"26\":1}}],[\"数独\",{\"1\":{\"22\":1}}],[\"捺n=i−j\",{\"1\":{\"22\":1}}],[\"撇m=i+j\",{\"1\":{\"22\":1}}],[\"撇的位置要左移\",{\"1\":{\"20\":1}}],[\"按顺序执行\",{\"1\":{\"419\":1}}],[\"按流的方式处理逐块读取文件内容\",{\"1\":{\"309\":1}}],[\"按需求重组\",{\"1\":{\"172\":1}}],[\"按需加载\",{\"1\":{\"128\":1}}],[\"按类型\",{\"1\":{\"172\":1}}],[\"按端\",{\"1\":{\"172\":1}}],[\"按键\",{\"1\":{\"165\":1}}],[\"按照优先级出\",{\"1\":{\"55\":1}}],[\"按照行来遍历dfs\",{\"1\":{\"22\":1}}],[\"按优先级弹出\",{\"1\":{\"44\":1}}],[\"按level放入对应位置数组中\",{\"1\":{\"7\":1}}],[\"遍历时在每个节点做异步可中断更新\",{\"1\":{\"468\":1}}],[\"遍历执行queue中的actions\",{\"1\":{\"443\":1}}],[\"遍历不可枚举属性\",{\"1\":{\"421\":1}}],[\"遍历原型链\",{\"1\":{\"421\":1}}],[\"遍历基本属性\",{\"1\":{\"421\":1}}],[\"遍历方法\",{\"1\":{\"421\":1}}],[\"遍历modulegraph\",{\"1\":{\"348\":1}}],[\"遍历每一个属性\",{\"1\":{\"227\":1}}],[\"遍历一个数\",{\"1\":{\"36\":1}}],[\"遍历表格\",{\"1\":{\"29\":1}}],[\"遍历树的时候可以剪枝\",{\"1\":{\"21\":1}}],[\"遍历n\",{\"1\":{\"20\":1}}],[\"每调用一次父函数\",{\"1\":{\"496\":2}}],[\"每做完一\",{\"1\":{\"386\":1}}],[\"每添加一个命名属性\",{\"1\":{\"368\":1}}],[\"每秒数据的流量\",{\"1\":{\"297\":1}}],[\"每天可以买卖无数次\",{\"1\":{\"68\":1}}],[\"每次执行引用不同的i实例\",{\"1\":{\"535\":1}}],[\"每次读取数据\",{\"1\":{\"498\":1}}],[\"每次更新用\",{\"1\":{\"472\":1}}],[\"每次调用函数都创建函数上下文\",{\"1\":{\"358\":1}}],[\"每次请求时调用\",{\"1\":{\"307\":1}}],[\"每次请求都会下载完整资源\",{\"1\":{\"124\":1}}],[\"每次扩展\",{\"1\":{\"111\":1}}],[\"每次都是新的对象\",{\"1\":{\"106\":1}}],[\"每次入元素就维护队列\",{\"1\":{\"57\":1}}],[\"每次滑动移除或添加新的元素到堆中\",{\"1\":{\"57\":1}}],[\"每次进来元素调整堆\",{\"1\":{\"57\":1}}],[\"每次进来元素都需要排序\",{\"1\":{\"57\":1}}],[\"每次递归得到左子树最大值maxleft​\",{\"1\":{\"47\":1}}],[\"每次递归数组需要存储\",{\"1\":{\"47\":1}}],[\"每次查找一半o\",{\"1\":{\"38\":1}}],[\"每次消除一个1\",{\"1\":{\"20\":1}}],[\"每个闭包里保存在父函数的当前形参\",{\"1\":{\"498\":1}}],[\"每个模块有单独作用域\",{\"1\":{\"427\":1}}],[\"每个模块专注于自己的职责\",{\"1\":{\"60\":1}}],[\"每个文件就是一个模块\",{\"1\":{\"427\":1}}],[\"每个值都具有类型\",{\"1\":{\"351\":1}}],[\"每个字段都是原子\",{\"1\":{\"321\":1}}],[\"每个字母ascii\",{\"1\":{\"32\":1}}],[\"每个\",{\"1\":{\"241\":1,\"430\":1,\"431\":1,\"487\":1}}],[\"每个属性都有值\",{\"1\":{\"229\":1}}],[\"每个顶级站点都有单独的\",{\"1\":{\"209\":1}}],[\"每个浏览器最多\",{\"1\":{\"201\":1}}],[\"每个代码直接依赖用软连接放入代码目录\",{\"1\":{\"159\":1}}],[\"每个观察者实现相同接口\",{\"1\":{\"64\":1}}],[\"每个父节点元素大于左右子节点元素\",{\"1\":{\"56\":1}}],[\"每个父节点元素小于左右子节点元素\",{\"1\":{\"56\":1}}],[\"每个节点是包围盒\",{\"1\":{\"96\":1}}],[\"每个节点是一个数组\",{\"1\":{\"26\":1}}],[\"每个节点只遍历一次\",{\"1\":{\"47\":2}}],[\"每个节点的所有子节点包含的字符都不相同\",{\"1\":{\"28\":1}}],[\"每个节点选择最优的优先遍历\",{\"1\":{\"21\":1}}],[\"每一次\",{\"1\":{\"447\":1}}],[\"每一步递推的递推公式\",{\"1\":{\"23\":1}}],[\"每一行中遍历列的时候剪枝\",{\"1\":{\"22\":1}}],[\"每一层单独扫描\",{\"1\":{\"7\":1}}],[\">about<\",{\"1\":{\"463\":1,\"546\":1}}],[\">list<\",{\"1\":{\"463\":1,\"546\":1}}],[\">link<\",{\"1\":{\"182\":1,\"206\":1,\"207\":1}}],[\">home<\",{\"1\":{\"463\":1,\"546\":1}}],[\">$\",{\"1\":{\"305\":1}}],[\"><\",{\"1\":{\"221\":1,\"305\":1,\"438\":1,\"546\":1}}],[\">>1\",{\"1\":{\"41\":1}}],[\">>\",{\"1\":{\"20\":1}}],[\">\",{\"1\":{\"20\":1,\"71\":1,\"102\":12,\"119\":1,\"120\":1,\"122\":2,\"169\":2,\"191\":1,\"224\":1,\"243\":1,\"298\":1,\"305\":4,\"343\":1,\"356\":3,\"365\":2,\"419\":1,\"431\":1,\"435\":2,\"449\":2,\"450\":4,\"457\":3,\"463\":7,\"464\":3,\"465\":4,\"475\":7,\"490\":1,\"496\":2,\"501\":1,\"529\":1,\"530\":1,\"532\":2,\"536\":1,\"537\":2,\"541\":3,\"543\":2,\"546\":1}}],[\">=\",{\"1\":{\"20\":1,\"47\":1,\"125\":1,\"480\":1}}],[\"~\",{\"1\":{\"20\":1,\"319\":1}}],[\"冗余的1\",{\"1\":{\"20\":1}}],[\"||\",{\"1\":{\"47\":1,\"480\":1,\"546\":1}}],[\"|\",{\"1\":{\"20\":9,\"168\":1,\"353\":2,\"355\":1,\"443\":1,\"444\":1}}],[\"消除传递依赖\",{\"0\":{\"323\":1}}],[\"消除部分依赖\",{\"0\":{\"322\":1}}],[\"消除微应用对全局变量\",{\"1\":{\"266\":1}}],[\"消除~\",{\"1\":{\"20\":1}}],[\"消息推送\",{\"0\":{\"267\":1}}],[\"消息\",{\"1\":{\"132\":1}}],[\"消掉x中的最后的1\",{\"1\":{\"20\":1}}],[\"结偶\",{\"1\":{\"365\":1}}],[\"结束生成器并允许生成器与\",{\"1\":{\"493\":1}}],[\"结束后\",{\"1\":{\"478\":1}}],[\"结束track\",{\"1\":{\"278\":1}}],[\"结束通话\",{\"1\":{\"278\":1}}],[\"结束条件\",{\"1\":{\"20\":1}}],[\"结合\",{\"1\":{\"229\":1}}],[\"结构优化\",{\"1\":{\"365\":1}}],[\"结构化数据格式\",{\"1\":{\"282\":1}}],[\"结构\",{\"0\":{\"109\":1},\"1\":{\"107\":1,\"143\":1,\"145\":1,\"171\":1,\"468\":1}}],[\"结果\",{\"1\":{\"295\":1,\"334\":1}}],[\"结果是视觉反馈\",{\"1\":{\"170\":1}}],[\"结果不变\",{\"1\":{\"17\":1}}],[\"结果为0\",{\"1\":{\"17\":1}}],[\"一组路由\",{\"1\":{\"463\":1}}],[\"一边基本\",{\"1\":{\"398\":1}}],[\"一边为对象\",{\"1\":{\"398\":1}}],[\"一边为\",{\"1\":{\"398\":1}}],[\"一致\",{\"1\":{\"368\":1}}],[\"一行行执行\",{\"1\":{\"358\":1}}],[\"一行一行放在\",{\"1\":{\"311\":1}}],[\"一段代码用来告诉\",{\"1\":{\"352\":1}}],[\"一下\",{\"1\":{\"326\":1}}],[\"一样是可写又可读的\",{\"1\":{\"309\":1}}],[\"一样监听具体改变\",{\"1\":{\"102\":1}}],[\"一方发送offer\",{\"1\":{\"278\":1}}],[\"一种是代码运行中\",{\"1\":{\"225\":1}}],[\"一般情况都用推断\",{\"1\":{\"352\":1}}],[\"一般不直接用\",{\"1\":{\"253\":1}}],[\"一般至少\",{\"1\":{\"241\":1}}],[\"一般更迟出发\",{\"1\":{\"234\":1}}],[\"一般为10分钟\",{\"1\":{\"217\":1}}],[\"一般跳转会携带\",{\"1\":{\"206\":1}}],[\"一般转为\",{\"1\":{\"189\":1,\"190\":1}}],[\"一开始就不要发送太大的\",{\"1\":{\"171\":1}}],[\"一旦下载完就执行\",{\"1\":{\"139\":1}}],[\"一定要和客户端的缓存策略结合起来\",{\"1\":{\"134\":1}}],[\"一次\",{\"1\":{\"60\":1}}],[\"一个值可以满足多种类型\",{\"1\":{\"355\":1}}],[\"一个渲染进程\",{\"1\":{\"241\":1}}],[\"一个标签页一个渲染进程\",{\"1\":{\"241\":1}}],[\"一个服务器\",{\"1\":{\"183\":1}}],[\"一个场景包含所有你想渲染的物体\",{\"1\":{\"94\":1}}],[\"一个\",{\"1\":{\"82\":1,\"241\":2,\"343\":1,\"457\":1,\"490\":1}}],[\"一个对象应当尽可能少的与其他对象发生相互作用\",{\"1\":{\"61\":1}}],[\"一个对象或方法只做一件事情\",{\"1\":{\"60\":1}}],[\"一个对象通过函数生成一个数组的下标\",{\"1\":{\"32\":1}}],[\"一个输出栈\",{\"1\":{\"54\":1}}],[\"一个输入栈\",{\"1\":{\"54\":1}}],[\"一个堆可以用一个一维数组来描述\",{\"1\":{\"41\":1}}],[\"一个指针的长度\",{\"1\":{\"1\":1}}],[\"一＞递推\",{\"1\":{\"23\":1}}],[\"一共有几种放置方法\",{\"1\":{\"20\":1}}],[\"皇后\",{\"1\":{\"20\":2}}],[\"的实现原理\",{\"1\":{\"542\":1}}],[\"的实例上\",{\"1\":{\"396\":1}}],[\"的实例将不会访问到instaa\",{\"1\":{\"355\":1}}],[\"的实例设置为\",{\"1\":{\"355\":1}}],[\"的改变\",{\"0\":{\"529\":1}}],[\"的改变来决定\",{\"1\":{\"511\":1}}],[\"的功能\",{\"1\":{\"487\":1}}],[\"的这个过程\",{\"1\":{\"487\":1}}],[\"的属性\",{\"1\":{\"460\":1}}],[\"的情况下\",{\"1\":{\"460\":4}}],[\"的异步变同步\",{\"0\":{\"457\":1}}],[\"的异常\",{\"1\":{\"221\":1}}],[\"的子\",{\"1\":{\"438\":1}}],[\"的模块是\",{\"1\":{\"433\":1}}],[\"的模块名只能是字符串常量\",{\"1\":{\"349\":1}}],[\"的文件\",{\"1\":{\"427\":1}}],[\"的原因\",{\"1\":{\"406\":1}}],[\"的原型是null\",{\"1\":{\"401\":1}}],[\"的局限\",{\"1\":{\"383\":1}}],[\"的优点\",{\"0\":{\"381\":1}}],[\"的优先级高于\",{\"1\":{\"125\":1}}],[\"的缺点\",{\"0\":{\"380\":1},\"1\":{\"374\":1}}],[\"的properties\",{\"1\":{\"373\":1}}],[\"的类型\",{\"1\":{\"356\":1}}],[\"的返回类型\",{\"1\":{\"356\":1}}],[\"的返回类型是\",{\"1\":{\"356\":1}}],[\"的返回值不能是自身\",{\"1\":{\"341\":1}}],[\"的somemethods\",{\"1\":{\"355\":1}}],[\"的方法和属性\",{\"1\":{\"351\":1}}],[\"的结果传入\",{\"1\":{\"493\":1}}],[\"的结果\",{\"1\":{\"343\":1}}],[\"的值\",{\"1\":{\"342\":1,\"443\":1}}],[\"的值只被允许设置为以下三个之一\",{\"1\":{\"214\":1}}],[\"的声明提升了\",{\"1\":{\"332\":1}}],[\"的错误回调\",{\"1\":{\"315\":1}}],[\"的回调\",{\"1\":{\"315\":1}}],[\"的内存碎片问题\",{\"1\":{\"385\":1}}],[\"的内存占比\",{\"1\":{\"382\":1}}],[\"的内存策略\",{\"1\":{\"301\":1}}],[\"的内容\",{\"1\":{\"189\":1,\"457\":1}}],[\"的运算能力会可能导致\",{\"1\":{\"297\":1}}],[\"的设置和读取\",{\"1\":{\"286\":1}}],[\"的基础\",{\"1\":{\"280\":1}}],[\"的前世今生和未来穿针引线之\",{\"1\":{\"269\":1}}],[\"的后代中包括了一个合成层\",{\"1\":{\"240\":1}}],[\"的步骤\",{\"1\":{\"232\":1}}],[\"的几何信息\",{\"1\":{\"230\":1}}],[\"的失败回调函数\",{\"1\":{\"225\":1}}],[\"的状态是\",{\"1\":{\"221\":1}}],[\"的不同域名放到一个集合里\",{\"1\":{\"210\":1}}],[\"的连接终止请求的确认\",{\"1\":{\"176\":1}}],[\"的连接终止请求确认\",{\"1\":{\"176\":1}}],[\"的连接终止请求\",{\"1\":{\"176\":2}}],[\"的执行时间\",{\"1\":{\"168\":2}}],[\"的依赖状态\",{\"1\":{\"451\":1}}],[\"的依赖包\",{\"1\":{\"160\":1}}],[\"的依赖会放在和\",{\"1\":{\"160\":1}}],[\"的时候\",{\"1\":{\"160\":1,\"374\":1}}],[\"的服务器\",{\"1\":{\"135\":1}}],[\"的服务器专门用来存放某些静态资源\",{\"1\":{\"135\":1}}],[\"的域名\",{\"1\":{\"135\":1}}],[\"的坑\",{\"0\":{\"134\":1}}],[\"的首部还会被深度压缩\",{\"1\":{\"131\":1}}],[\"的分帧层是基于帧的二进制协议\",{\"1\":{\"131\":1}}],[\"的同时\",{\"1\":{\"119\":1}}],[\"的\",{\"0\":{\"420\":1},\"1\":{\"111\":1,\"182\":1,\"186\":1,\"190\":2,\"220\":1,\"240\":1,\"287\":1,\"302\":1,\"343\":1,\"420\":1,\"443\":1,\"464\":1,\"480\":2,\"493\":2}}],[\"的空间数组\",{\"1\":{\"95\":1}}],[\"的宽高\",{\"1\":{\"88\":2}}],[\"的元素事件\",{\"1\":{\"61\":1}}],[\"的幂\",{\"1\":{\"20\":1}}],[\"的平方根\",{\"1\":{\"15\":1}}],[\"循环执行\",{\"1\":{\"480\":1}}],[\"循环引用\",{\"0\":{\"428\":1,\"433\":1}}],[\"循环依赖\",{\"1\":{\"427\":1}}],[\"循环剩余的队列\",{\"1\":{\"338\":1}}],[\"循环\",{\"1\":{\"20\":1}}],[\"循环写法\",{\"1\":{\"6\":1}}],[\"模拟\",{\"1\":{\"458\":1}}],[\"模拟实现\",{\"0\":{\"458\":1,\"480\":1}}],[\"模式可以高优先级打断低优先级执行\",{\"1\":{\"468\":1}}],[\"模式\",{\"0\":{\"249\":1,\"250\":1},\"1\":{\"248\":1,\"468\":2}}],[\"模块相互通信\",{\"1\":{\"426\":1}}],[\"模块引入依赖顺序\",{\"1\":{\"426\":1}}],[\"模块私有变量内存永驻\",{\"1\":{\"387\":1}}],[\"模块化需要解决\",{\"1\":{\"426\":1}}],[\"模块化\",{\"0\":{\"425\":1},\"1\":{\"328\":1}}],[\"模块接受网络数据时\",{\"1\":{\"280\":1}}],[\"模块依赖关系图\",{\"1\":{\"348\":1}}],[\"模块依赖\",{\"1\":{\"261\":1}}],[\"模块懒加载\",{\"1\":{\"168\":1}}],[\"模块优化\",{\"1\":{\"167\":1}}],[\"模块\",{\"0\":{\"279\":1,\"293\":1},\"1\":{\"62\":1,\"144\":1,\"264\":1,\"365\":1}}],[\"模2循环\",{\"1\":{\"20\":1}}],[\"模2判断\",{\"1\":{\"20\":1}}],[\"模版方法模式\",{\"1\":{\"62\":1}}],[\"模版\",{\"0\":{\"15\":1,\"105\":1},\"1\":{\"144\":1}}],[\"4ms\",{\"1\":{\"479\":1}}],[\"42\",{\"1\":{\"404\":1}}],[\"404\",{\"0\":{\"198\":1},\"1\":{\"221\":1}}],[\"403\",{\"0\":{\"197\":1},\"1\":{\"197\":1}}],[\"401\",{\"0\":{\"196\":1}}],[\"4000\",{\"1\":{\"293\":2}}],[\"400\",{\"1\":{\"183\":1}}],[\"4xx\",{\"0\":{\"195\":1}}],[\"440px\",{\"1\":{\"169\":1}}],[\"480p\",{\"1\":{\"169\":1}}],[\"480w\",{\"1\":{\"169\":2}}],[\"4为完成请求\",{\"1\":{\"84\":1}}],[\"4\",{\"0\":{\"288\":1},\"1\":{\"19\":1,\"20\":2,\"43\":9,\"84\":1,\"180\":1,\"241\":1,\"332\":1,\"340\":1,\"361\":1,\"548\":1}}],[\"9999\",{\"1\":{\"271\":2}}],[\"9\",{\"1\":{\"19\":1,\"468\":1}}],[\"非自身属性\",{\"1\":{\"415\":1}}],[\"非常适合应用在新生代中\",{\"1\":{\"381\":1}}],[\"非脚本\",{\"1\":{\"365\":1}}],[\"非主键只能依赖主键\",{\"1\":{\"323\":1}}],[\"非主键要完全依赖主键\",{\"1\":{\"322\":1}}],[\"非阻塞试\",{\"1\":{\"310\":1}}],[\"非简单的\",{\"1\":{\"216\":1}}],[\"非简单请求\",{\"0\":{\"215\":1}}],[\"非对称加密\",{\"1\":{\"180\":1}}],[\"非对称\",{\"1\":{\"179\":1}}],[\"非扁平化\",{\"1\":{\"159\":1}}],[\"非标准\",{\"1\":{\"82\":1,\"204\":1}}],[\"非\",{\"0\":{\"19\":1}}],[\"为什么选择函数组件\",{\"0\":{\"494\":1},\"1\":{\"459\":1}}],[\"为什么模块化\",{\"0\":{\"426\":1}}],[\"为了避免组件无限循环更新\",{\"1\":{\"445\":1}}],[\"为了利用这种情况\",{\"1\":{\"377\":1}}],[\"为引用\",{\"1\":{\"434\":1}}],[\"为可索引属性\",{\"1\":{\"372\":1}}],[\"为原型链属性\",{\"1\":{\"372\":1}}],[\"为隐藏类\",{\"1\":{\"372\":1}}],[\"为undefined\",{\"1\":{\"363\":1}}],[\"为下一步的编译做准备\",{\"1\":{\"325\":1}}],[\"为空\",{\"1\":{\"311\":1}}],[\"为事件循环位置了一个队列\",{\"1\":{\"291\":1}}],[\"为16位\",{\"1\":{\"281\":1}}],[\"为8位\",{\"1\":{\"281\":1}}],[\"为每一层生成绘制的指令\",{\"1\":{\"229\":1}}],[\"为正常退出状态\",{\"1\":{\"221\":1}}],[\"为\",{\"1\":{\"180\":2}}],[\"为非\",{\"1\":{\"90\":1}}],[\"为捕获\",{\"1\":{\"82\":1}}],[\"为其他对象提供一种代理以控制对这个对象的访问\",{\"1\":{\"60\":1}}],[\"为堆顶\",{\"1\":{\"43\":2}}],[\"为该节点对应的字符串\",{\"1\":{\"28\":1}}],[\"为该层的最大\",{\"1\":{\"7\":1}}],[\"为偶\",{\"1\":{\"18\":1}}],[\"为奇\",{\"1\":{\"18\":1}}],[\"^c=a^\",{\"1\":{\"17\":1}}],[\"即使键仍在集合中\",{\"1\":{\"411\":1}}],[\"即使重新验证也不会改变该状态\",{\"1\":{\"197\":1}}],[\"即可一次性处理完\",{\"1\":{\"312\":1}}],[\"即可读也可写\",{\"1\":{\"309\":1}}],[\"即同步代码执行完\",{\"1\":{\"311\":1}}],[\"即\",{\"1\":{\"280\":1,\"312\":1}}],[\"即表示当前页面是通过此来源页面里的链接进入的\",{\"1\":{\"185\":1}}],[\"即它会被添加到同源的\",{\"1\":{\"184\":1}}],[\"即交互元素变得响应之前所需的时间\",{\"1\":{\"170\":1}}],[\"即a^b=b^a\",{\"1\":{\"17\":1}}],[\"即a^b^c=\",{\"1\":{\"17\":1}}],[\"即x^0=x\",{\"1\":{\"17\":1}}],[\"即x^x=0\",{\"1\":{\"17\":1}}],[\"有副作用时或与外部同步\",{\"1\":{\"522\":1}}],[\"有陷阱\",{\"1\":{\"497\":1}}],[\"有兄弟节点就返回兄弟节点\",{\"1\":{\"477\":1}}],[\"有循环引用的话\",{\"1\":{\"428\":1}}],[\"有三种不同的路径可以将对象转换为原始值\",{\"1\":{\"412\":1}}],[\"有意禁止了某些隐式类型转换\",{\"1\":{\"405\":1}}],[\"有强制类型转换\",{\"1\":{\"398\":1}}],[\"有properties\",{\"1\":{\"373\":1}}],[\"有继承\",{\"1\":{\"355\":1}}],[\"有哪些方法或属性可用\",{\"1\":{\"351\":1}}],[\"有一个兑现就兑现\",{\"1\":{\"334\":1}}],[\"有一个拒绝就拒绝\",{\"1\":{\"334\":1}}],[\"有一些软件还可以加上\",{\"1\":{\"325\":1}}],[\"有提升\",{\"1\":{\"330\":1}}],[\"有些优势\",{\"1\":{\"309\":1}}],[\"有单独线程\",{\"1\":{\"229\":1}}],[\"有预编译过程\",{\"1\":{\"229\":1}}],[\"有预检\",{\"1\":{\"215\":1}}],[\"有堆头阻塞\",{\"1\":{\"186\":1}}],[\"有\",{\"1\":{\"186\":1,\"235\":1,\"443\":1,\"468\":1,\"469\":1,\"480\":1}}],[\"有对应的\",{\"1\":{\"184\":1}}],[\"有重传机制\",{\"1\":{\"181\":1}}],[\"有模版语法\",{\"1\":{\"143\":1}}],[\"有独立上下文\",{\"1\":{\"116\":1}}],[\"有效但不影响背景\",{\"1\":{\"88\":1}}],[\"有效\",{\"1\":{\"88\":10}}],[\"有效的完全平方数\",{\"1\":{\"15\":1}}],[\"有回退功能\",{\"1\":{\"67\":1}}],[\"有前驱\",{\"1\":{\"51\":1}}],[\"有关\",{\"1\":{\"1\":1}}],[\"牛顿迭代法\",{\"1\":{\"15\":1}}],[\"x是iife内的\",{\"1\":{\"363\":1}}],[\"xss\",{\"0\":{\"204\":1},\"1\":{\"204\":1}}],[\"xml\",{\"1\":{\"92\":1}}],[\"xmlhttprequest\",{\"0\":{\"84\":1},\"1\":{\"84\":1,\"214\":1}}],[\"xxxx\",{\"1\":{\"169\":1}}],[\"xxx\",{\"1\":{\"87\":3,\"119\":1,\"120\":1,\"169\":2,\"298\":1}}],[\"xhr\",{\"1\":{\"84\":10,\"214\":2}}],[\"x10100\",{\"1\":{\"18\":1}}],[\"xn+1​=21​xn​+2xn​1​y0​\",{\"1\":{\"15\":1}}],[\"x\",{\"1\":{\"15\":1,\"18\":4,\"20\":5,\"74\":6,\"204\":2,\"214\":2,\"341\":4,\"363\":4}}],[\"+0\",{\"1\":{\"398\":1,\"400\":4}}],[\"+=\",{\"1\":{\"309\":1,\"345\":1}}],[\"+因\",{\"1\":{\"180\":1}}],[\"+4\",{\"1\":{\"180\":1}}],[\"+若通过\",{\"1\":{\"180\":1}}],[\"+3\",{\"1\":{\"180\":1}}],[\"+这里的\",{\"1\":{\"180\":2}}],[\"+生成服务器签名\",{\"1\":{\"180\":1}}],[\"+同时服务器利用私钥将\",{\"1\":{\"180\":1}}],[\"+以及数字证书\",{\"1\":{\"180\":1}}],[\"+现在双方都有\",{\"1\":{\"179\":1}}],[\"+浏览器接收\",{\"1\":{\"179\":1}}],[\"+2\",{\"1\":{\"179\":1,\"180\":1}}],[\"+1\",{\"1\":{\"179\":1}}],[\"++\",{\"1\":{\"20\":1,\"71\":1,\"102\":1}}],[\"+\",{\"1\":{\"15\":1,\"20\":2,\"24\":1,\"47\":2,\"81\":2,\"144\":3,\"145\":3,\"150\":2,\"172\":3,\"201\":6,\"253\":2,\"258\":1,\"264\":2,\"278\":1,\"363\":2,\"373\":3,\"374\":2,\"424\":3,\"480\":1,\"496\":1,\"536\":4,\"537\":4,\"541\":1}}],[\"+o\",{\"1\":{\"12\":4}}],[\"effecttag\",{\"1\":{\"472\":1,\"476\":1,\"477\":1}}],[\"effectlist\",{\"1\":{\"460\":1,\"472\":1,\"477\":1}}],[\"effect\",{\"1\":{\"443\":1,\"451\":4,\"472\":2,\"493\":4}}],[\"e\",{\"1\":{\"437\":3,\"465\":2,\"546\":3}}],[\"ectries\",{\"0\":{\"416\":1}}],[\"ecdhe\",{\"1\":{\"179\":1,\"180\":1}}],[\"epipe\",{\"1\":{\"302\":1}}],[\"ephemeral\",{\"1\":{\"179\":1}}],[\"emotedescription\",{\"1\":{\"278\":1}}],[\"emotion\",{\"1\":{\"260\":1}}],[\"err\",{\"1\":{\"225\":2,\"226\":1,\"336\":2,\"338\":2,\"340\":2,\"341\":1,\"342\":2,\"343\":2,\"356\":2,\"457\":3}}],[\"errorboundary\",{\"1\":{\"224\":1}}],[\"errorhandler\",{\"1\":{\"220\":1,\"223\":1,\"227\":6}}],[\"error\",{\"1\":{\"201\":1,\"220\":2,\"221\":5,\"225\":1,\"227\":8,\"326\":1,\"336\":1,\"338\":1,\"340\":9,\"342\":2,\"458\":4}}],[\"eentsource\",{\"1\":{\"201\":1}}],[\"es\",{\"1\":{\"312\":1}}],[\"es6\",{\"1\":{\"312\":1,\"406\":3}}],[\"esmodule\",{\"0\":{\"430\":1},\"1\":{\"430\":1,\"431\":1}}],[\"esm\",{\"0\":{\"434\":1},\"1\":{\"258\":2,\"427\":1,\"430\":1,\"434\":4}}],[\"eslint\",{\"1\":{\"252\":6}}],[\"established\",{\"1\":{\"176\":1,\"201\":1}}],[\"esbuild\",{\"1\":{\"141\":1}}],[\"etag\",{\"1\":{\"123\":1,\"125\":3,\"192\":1}}],[\"eval\",{\"1\":{\"109\":1}}],[\"eventloop\",{\"0\":{\"339\":1},\"1\":{\"230\":1,\"289\":1}}],[\"event=type2\",{\"1\":{\"201\":2}}],[\"event=type1\",{\"1\":{\"201\":2}}],[\"eventsource\",{\"1\":{\"201\":10}}],[\"events\",{\"0\":{\"201\":1},\"1\":{\"267\":1,\"493\":1}}],[\"event\",{\"0\":{\"310\":1,\"311\":1,\"313\":1},\"1\":{\"61\":1,\"82\":4,\"103\":1,\"201\":7,\"221\":1,\"229\":1,\"241\":1,\"310\":2,\"311\":1}}],[\"example<\",{\"1\":{\"305\":1}}],[\"exit\",{\"1\":{\"290\":1,\"291\":1}}],[\"exec\",{\"0\":{\"287\":2,\"289\":2}}],[\"extraargument\",{\"1\":{\"492\":1}}],[\"extract\",{\"1\":{\"254\":1}}],[\"extends\",{\"1\":{\"355\":1,\"450\":1,\"456\":1,\"458\":1,\"490\":1,\"529\":1,\"530\":1,\"534\":1}}],[\"extension\",{\"1\":{\"109\":1}}],[\"exports\",{\"1\":{\"426\":1,\"427\":1,\"429\":8,\"434\":1}}],[\"export\",{\"1\":{\"305\":1,\"307\":1,\"430\":2,\"433\":1,\"449\":1,\"457\":1,\"458\":1,\"465\":4}}],[\"expose\",{\"0\":{\"449\":1},\"1\":{\"217\":1}}],[\"express\",{\"0\":{\"226\":1},\"1\":{\"305\":1}}],[\"expires\",{\"1\":{\"124\":2}}],[\"exclude\",{\"1\":{\"141\":1,\"540\":1}}],[\"exchange\",{\"1\":{\"17\":1}}],[\"entries\",{\"1\":{\"421\":1}}],[\"entry\",{\"1\":{\"109\":1}}],[\"enumerable\",{\"1\":{\"408\":1,\"409\":1,\"419\":1}}],[\"enable\",{\"1\":{\"325\":1}}],[\"encode\",{\"1\":{\"282\":1}}],[\"encoding\",{\"1\":{\"201\":1}}],[\"environment\",{\"1\":{\"358\":2}}],[\"env\",{\"1\":{\"254\":2,\"289\":1,\"290\":1,\"291\":1,\"548\":2}}],[\"enqueuesetstate\",{\"1\":{\"102\":1}}],[\"end\",{\"1\":{\"4\":1,\"6\":1,\"270\":1,\"271\":1,\"309\":1}}],[\"elliptic\",{\"1\":{\"179\":1}}],[\"el\",{\"1\":{\"81\":1,\"82\":2,\"546\":3,\"548\":2}}],[\"elementtype\",{\"1\":{\"472\":1}}],[\"element=\",{\"1\":{\"463\":3,\"464\":1}}],[\"element\",{\"0\":{\"471\":1},\"1\":{\"261\":1,\"367\":3,\"372\":1,\"460\":1,\"465\":4}}],[\"elem\",{\"1\":{\"61\":1}}],[\"else\",{\"1\":{\"15\":2,\"36\":2,\"66\":1,\"74\":2,\"343\":1,\"356\":1,\"363\":1,\"475\":1,\"541\":3,\"548\":1}}],[\"00\",{\"1\":{\"281\":3}}],[\"001\",{\"1\":{\"185\":1}}],[\"0且没有\",{\"1\":{\"90\":1}}],[\"0\",{\"0\":{\"186\":1},\"1\":{\"15\":1,\"18\":1,\"20\":6,\"73\":1,\"74\":2,\"89\":1,\"126\":1,\"186\":1,\"200\":4,\"258\":1,\"293\":2,\"319\":4,\"338\":1,\"345\":2,\"355\":2,\"361\":2,\"364\":2,\"373\":4,\"389\":3,\"398\":4,\"400\":6,\"406\":2,\"419\":1,\"424\":8,\"438\":1,\"465\":1,\"468\":2,\"480\":1,\"483\":2,\"529\":1,\"532\":1,\"534\":1,\"535\":2,\"536\":2,\"537\":2,\"541\":4}}],[\"必须是有序的\",{\"1\":{\"14\":1}}],[\"条件分支语句提炼成函数\",{\"1\":{\"66\":1}}],[\"条件\",{\"0\":{\"14\":1}}],[\"归并排序\",{\"1\":{\"12\":1}}],[\"mjs\",{\"1\":{\"432\":1}}],[\"msg\",{\"1\":{\"364\":6,\"437\":2,\"438\":2}}],[\"mutationobserver\",{\"1\":{\"541\":3}}],[\"mutationobsever\",{\"1\":{\"312\":1}}],[\"mutation阶段\",{\"1\":{\"478\":1}}],[\"mutation\",{\"1\":{\"460\":1}}],[\"multipart\",{\"1\":{\"214\":1}}],[\"md\",{\"1\":{\"309\":1}}],[\"md5\",{\"1\":{\"33\":1}}],[\"mountworkinprogresshook\",{\"1\":{\"443\":2}}],[\"mountstate<s>\",{\"1\":{\"443\":1}}],[\"mountstate\",{\"0\":{\"443\":1}}],[\"mount\",{\"0\":{\"443\":1},\"1\":{\"305\":1,\"442\":1,\"445\":1,\"460\":3,\"543\":1}}],[\"monorepo\",{\"0\":{\"245\":1}}],[\"moved\",{\"0\":{\"189\":1}}],[\"mode\",{\"1\":{\"472\":1}}],[\"model\",{\"1\":{\"103\":1}}],[\"modal\",{\"1\":{\"243\":1,\"449\":1}}],[\"modified\",{\"0\":{\"192\":1},\"1\":{\"125\":5,\"126\":2,\"192\":2,\"261\":1}}],[\"moduleid\",{\"1\":{\"429\":5}}],[\"modulecache\",{\"1\":{\"429\":4}}],[\"module的特性\",{\"0\":{\"349\":1}}],[\"modulegraph\",{\"1\":{\"348\":1}}],[\"modules中用软连接放置项目直接依赖\",{\"1\":{\"159\":1}}],[\"modules\",{\"1\":{\"159\":2,\"246\":1,\"261\":1,\"429\":2}}],[\"module\",{\"0\":{\"261\":1},\"1\":{\"109\":3,\"265\":1,\"305\":1,\"426\":1,\"427\":1,\"429\":8,\"431\":2,\"432\":1,\"434\":1}}],[\"mysaga\",{\"1\":{\"493\":2}}],[\"mysql\",{\"1\":{\"315\":1}}],[\"my\",{\"1\":{\"184\":1,\"185\":1}}],[\"mypow\",{\"1\":{\"74\":4}}],[\"microtaskqueue\",{\"1\":{\"313\":2}}],[\"micro\",{\"1\":{\"312\":1}}],[\"microapp\",{\"1\":{\"265\":1}}],[\"mini\",{\"1\":{\"254\":1}}],[\"minify\",{\"1\":{\"128\":2}}],[\"minicssextractplugin\",{\"1\":{\"128\":1}}],[\"minimizer\",{\"1\":{\"109\":1,\"128\":1,\"129\":1,\"254\":1}}],[\"minimize\",{\"1\":{\"109\":1}}],[\"minsize\",{\"1\":{\"109\":1}}],[\"minchunk\",{\"1\":{\"109\":1}}],[\"mixin\",{\"1\":{\"104\":1}}],[\"middle\",{\"1\":{\"487\":2}}],[\"middlewarearr\",{\"1\":{\"487\":2}}],[\"middlewares\",{\"1\":{\"487\":2}}],[\"middleware\",{\"0\":{\"487\":1},\"1\":{\"487\":3}}],[\"mid\",{\"1\":{\"15\":6}}],[\"menu\",{\"1\":{\"546\":2}}],[\"memochild\",{\"1\":{\"532\":1}}],[\"memo\",{\"0\":{\"530\":1},\"1\":{\"530\":2}}],[\"memoizedprops\",{\"1\":{\"472\":1}}],[\"memoizedstate\",{\"1\":{\"443\":4,\"444\":1,\"472\":1}}],[\"memoryusage\",{\"1\":{\"290\":1,\"291\":1}}],[\"memory\",{\"1\":{\"122\":1,\"302\":1}}],[\"messagechannel\",{\"1\":{\"312\":1,\"439\":1,\"479\":1,\"480\":2}}],[\"message\",{\"1\":{\"221\":1,\"437\":1,\"483\":18}}],[\"mesh\",{\"1\":{\"94\":1}}],[\"meshlambertmaterial\",{\"1\":{\"94\":1}}],[\"meshbasicmaterial\",{\"1\":{\"94\":1}}],[\"mediadevices\",{\"1\":{\"278\":1}}],[\"mediastream\",{\"1\":{\"277\":1}}],[\"media\",{\"1\":{\"169\":1}}],[\"metrics\",{\"1\":{\"144\":1}}],[\"method1\",{\"1\":{\"227\":1}}],[\"methods\",{\"1\":{\"217\":2,\"548\":1}}],[\"method\",{\"1\":{\"84\":1,\"216\":1}}],[\"merge\",{\"1\":{\"12\":1,\"254\":1}}],[\"machtash\",{\"1\":{\"435\":1}}],[\"macrotaskqueue\",{\"1\":{\"313\":2}}],[\"macro\",{\"1\":{\"312\":1}}],[\"markworkinprogressreceivedupdate\",{\"1\":{\"444\":1}}],[\"marking\",{\"0\":{\"386\":1},\"1\":{\"386\":1}}],[\"mark\",{\"0\":{\"384\":1,\"385\":1},\"1\":{\"383\":2,\"384\":5,\"385\":3}}],[\"margin\",{\"1\":{\"88\":2}}],[\"makefile\",{\"1\":{\"325\":1,\"326\":2}}],[\"make\",{\"0\":{\"326\":1,\"327\":1},\"1\":{\"324\":2,\"326\":4,\"348\":1}}],[\"math\",{\"1\":{\"392\":1,\"393\":1}}],[\"match\",{\"1\":{\"125\":1,\"192\":1,\"465\":1}}],[\"material\",{\"1\":{\"94\":1}}],[\"matrix\",{\"1\":{\"12\":1}}],[\"max\",{\"1\":{\"71\":1,\"124\":2,\"169\":2,\"217\":1,\"218\":1,\"540\":1}}],[\"map内的back\",{\"1\":{\"369\":1}}],[\"mapdispatchtoprops\",{\"1\":{\"106\":1,\"490\":4}}],[\"mapstatetoprops\",{\"1\":{\"106\":1,\"490\":3}}],[\"map\",{\"0\":{\"34\":1,\"411\":1},\"1\":{\"30\":1,\"34\":1,\"109\":2,\"266\":1,\"338\":1,\"367\":1,\"372\":2,\"411\":1,\"457\":1,\"487\":1}}],[\"master\",{\"0\":{\"12\":1},\"1\":{\"12\":3}}],[\"tuple\",{\"0\":{\"353\":1},\"1\":{\"353\":1}}],[\"turn\",{\"0\":{\"275\":1}}],[\"turbofan\",{\"1\":{\"241\":1}}],[\"txt\",{\"1\":{\"298\":1}}],[\"t15\",{\"1\":{\"297\":1}}],[\"typeof\",{\"1\":{\"363\":1,\"397\":1,\"401\":1,\"406\":1,\"444\":1,\"541\":3}}],[\"typeerror\",{\"1\":{\"341\":1,\"406\":1}}],[\"type=module\",{\"1\":{\"432\":1}}],[\"type=\",{\"1\":{\"305\":2,\"365\":1,\"431\":2,\"496\":1}}],[\"types\",{\"1\":{\"255\":2}}],[\"typescript编译\",{\"1\":{\"253\":1}}],[\"typescript\",{\"1\":{\"252\":2,\"254\":1}}],[\"type\",{\"0\":{\"351\":1},\"1\":{\"201\":1,\"204\":1,\"214\":3,\"295\":1,\"351\":1,\"352\":2,\"354\":2,\"432\":1,\"471\":1,\"472\":1,\"493\":1}}],[\"tti\",{\"1\":{\"165\":3}}],[\"tls1\",{\"0\":{\"179\":1,\"180\":1},\"1\":{\"136\":1,\"179\":2}}],[\"tls\",{\"0\":{\"178\":1},\"1\":{\"130\":1,\"179\":3,\"180\":1}}],[\"tcp\",{\"0\":{\"120\":1,\"175\":1,\"181\":1},\"1\":{\"134\":1,\"176\":7,\"181\":1,\"186\":4,\"199\":1,\"280\":1,\"292\":1,\"293\":1,\"302\":2,\"315\":1,\"365\":1}}],[\"take\",{\"1\":{\"493\":1}}],[\"takelatest\",{\"1\":{\"493\":1}}],[\"takeevery\",{\"1\":{\"493\":1}}],[\"tash\",{\"1\":{\"480\":1}}],[\"taskqueue\",{\"1\":{\"480\":4}}],[\"task\",{\"1\":{\"168\":1,\"312\":2,\"480\":4,\"493\":1,\"541\":1}}],[\"tagname\",{\"1\":{\"546\":1}}],[\"tag\",{\"1\":{\"472\":1,\"475\":3,\"476\":1}}],[\"tailwindcss\",{\"1\":{\"254\":1,\"262\":2,\"264\":1}}],[\"tab\",{\"1\":{\"241\":2,\"436\":1,\"439\":1}}],[\"tapable\",{\"1\":{\"111\":2}}],[\"target=\",{\"1\":{\"207\":1}}],[\"target\",{\"1\":{\"15\":3,\"227\":6,\"546\":1}}],[\"tsconfig\",{\"1\":{\"253\":1}}],[\"tsc\",{\"1\":{\"253\":4}}],[\"ts\",{\"0\":{\"253\":1,\"350\":1},\"1\":{\"109\":1,\"328\":1,\"351\":2,\"352\":4,\"356\":1,\"365\":1}}],[\"tsx\",{\"1\":{\"109\":2}}],[\"textnode\",{\"1\":{\"541\":3}}],[\"text\",{\"1\":{\"201\":2,\"214\":1,\"369\":1,\"372\":3,\"546\":2}}],[\"texture\",{\"1\":{\"94\":1}}],[\"temp\",{\"1\":{\"355\":3}}],[\"temporary\",{\"0\":{\"193\":1}}],[\"template\",{\"1\":{\"102\":1,\"105\":1,\"305\":1}}],[\"test1\",{\"1\":{\"361\":2}}],[\"test\",{\"1\":{\"109\":1,\"183\":1,\"184\":1,\"185\":1,\"261\":1,\"271\":3,\"282\":1,\"309\":1,\"360\":6,\"363\":6}}],[\"terserwebpackplugin\",{\"1\":{\"141\":1}}],[\"terser\",{\"1\":{\"128\":1,\"129\":1,\"254\":1,\"348\":1}}],[\"terseroptions\",{\"1\":{\"109\":1}}],[\"terserplugin\",{\"1\":{\"109\":1}}],[\"tickcallback\",{\"1\":{\"291\":1}}],[\"title>\",{\"1\":{\"305\":1}}],[\"title\",{\"1\":{\"286\":1,\"364\":4}}],[\"tiling\",{\"1\":{\"229\":1}}],[\"tip\",{\"1\":{\"102\":1,\"522\":1}}],[\"timerfunc\",{\"1\":{\"541\":5}}],[\"timers\",{\"1\":{\"315\":1}}],[\"timed\",{\"1\":{\"336\":1}}],[\"timeout\",{\"1\":{\"84\":1}}],[\"time\",{\"1\":{\"12\":1,\"165\":2,\"167\":1,\"176\":2,\"297\":2}}],[\"two\",{\"1\":{\"36\":1}}],[\"todo\",{\"1\":{\"465\":1}}],[\"to=\",{\"1\":{\"463\":3}}],[\"total\",{\"1\":{\"345\":1}}],[\"tokens\",{\"1\":{\"435\":2}}],[\"token\",{\"1\":{\"203\":1}}],[\"toprimitive\",{\"1\":{\"346\":1,\"412\":4}}],[\"top\",{\"1\":{\"90\":2,\"297\":1,\"434\":1}}],[\"tostring\",{\"1\":{\"36\":2,\"76\":1,\"114\":1,\"293\":2,\"398\":3,\"412\":5,\"423\":2}}],[\"to\",{\"0\":{\"170\":1},\"1\":{\"12\":1,\"165\":2,\"167\":1,\"379\":3,\"382\":1,\"465\":3}}],[\"thunk\",{\"0\":{\"492\":1}}],[\"throw\",{\"1\":{\"225\":1,\"340\":9,\"341\":1,\"342\":1,\"343\":2,\"344\":1,\"356\":1,\"397\":1,\"457\":4}}],[\"threshold\",{\"1\":{\"480\":2}}],[\"thread\",{\"1\":{\"141\":1}}],[\"threejs\",{\"1\":{\"96\":1}}],[\"three\",{\"1\":{\"36\":1,\"94\":5}}],[\"this\",{\"1\":{\"102\":1,\"106\":1,\"227\":2,\"355\":2,\"358\":2,\"389\":5,\"390\":2,\"392\":2,\"393\":1,\"394\":5,\"396\":1,\"419\":1,\"430\":1,\"450\":1,\"458\":4,\"488\":4,\"490\":6,\"498\":1,\"506\":1,\"529\":9,\"530\":2,\"534\":3,\"546\":2,\"548\":2}}],[\"theme\",{\"1\":{\"450\":2}}],[\"themecontext\",{\"1\":{\"450\":5}}],[\"then\",{\"0\":{\"341\":1},\"1\":{\"295\":1,\"305\":1,\"312\":1,\"336\":1,\"337\":1,\"338\":6,\"339\":12,\"340\":4,\"341\":3,\"342\":3,\"343\":1,\"344\":1,\"457\":1,\"458\":2,\"493\":1,\"501\":1,\"541\":2}}],[\"the\",{\"1\":{\"12\":1,\"345\":1,\"424\":2,\"458\":2}}],[\"theorem\",{\"1\":{\"12\":4}}],[\"thoren\",{\"0\":{\"12\":1}}],[\"t\",{\"1\":{\"12\":4,\"297\":1}}],[\"tranform\",{\"1\":{\"309\":1}}],[\"transfer\",{\"1\":{\"201\":1,\"297\":1}}],[\"transform\",{\"0\":{\"232\":1},\"1\":{\"140\":1,\"229\":3,\"232\":2,\"239\":1}}],[\"transitionqueue\",{\"1\":{\"480\":3}}],[\"transition\",{\"1\":{\"140\":1,\"169\":1}}],[\"tracks\",{\"1\":{\"278\":1}}],[\"traversal\",{\"1\":{\"10\":1,\"12\":1,\"274\":1,\"275\":1}}],[\"trytimes\",{\"1\":{\"343\":3,\"356\":3}}],[\"try\",{\"0\":{\"227\":1},\"1\":{\"66\":2,\"220\":1,\"221\":1,\"225\":1,\"227\":1,\"343\":1,\"345\":1,\"356\":1,\"493\":1}}],[\"true\",{\"1\":{\"47\":2,\"82\":1,\"109\":5,\"128\":1,\"217\":1,\"220\":1,\"221\":1,\"285\":2,\"287\":1,\"345\":1,\"348\":1,\"361\":5,\"374\":1,\"400\":3,\"404\":1,\"406\":2,\"419\":1,\"423\":2,\"458\":1,\"541\":3,\"546\":1}}],[\"trie的核心思想是空间换时间\",{\"1\":{\"27\":1}}],[\"trie\",{\"1\":{\"9\":1}}],[\"treeshaking\",{\"1\":{\"129\":1}}],[\"treeset\",{\"0\":{\"35\":1},\"1\":{\"34\":1}}],[\"tree的元素排序好了\",{\"1\":{\"35\":1}}],[\"treemap\",{\"0\":{\"35\":1},\"1\":{\"34\":1}}],[\"tree\",{\"0\":{\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"347\":1},\"1\":{\"9\":3,\"12\":1,\"35\":1,\"128\":2,\"168\":1,\"229\":1,\"230\":1,\"328\":1,\"348\":1,\"434\":1}}],[\"213\",{\"1\":{\"353\":2}}],[\"20\",{\"1\":{\"281\":1}}],[\"200ms\",{\"1\":{\"170\":1}}],[\"200\",{\"1\":{\"84\":1,\"201\":1}}],[\"280px\",{\"1\":{\"169\":1}}],[\"2d\",{\"1\":{\"93\":1,\"94\":1,\"95\":3}}],[\"2px\",{\"1\":{\"81\":1}}],[\"256\",{\"1\":{\"33\":1}}],[\"2\",{\"0\":{\"180\":1,\"186\":1,\"286\":1},\"1\":{\"11\":1,\"12\":4,\"15\":1,\"20\":1,\"23\":1,\"47\":1,\"73\":1,\"74\":2,\"122\":1,\"165\":2,\"166\":1,\"176\":2,\"179\":1,\"180\":1,\"183\":1,\"258\":1,\"281\":1,\"330\":2,\"331\":2,\"340\":3,\"342\":2,\"345\":1,\"361\":2,\"372\":1,\"373\":3,\"396\":1,\"398\":2,\"419\":1,\"424\":6,\"426\":1,\"429\":1,\"465\":2,\"468\":2,\"480\":1,\"487\":1,\"541\":1,\"548\":1}}],[\"2nf\",{\"0\":{\"322\":1}}],[\"2n−logn\",{\"1\":{\"12\":1}}],[\"2n\",{\"1\":{\"7\":1,\"11\":1,\"22\":1,\"68\":1}}],[\"<memochild\",{\"1\":{\"532\":1}}],[\"<my\",{\"1\":{\"251\":1}}],[\"<navigationcontext\",{\"1\":{\"465\":1}}],[\"<locationcontext\",{\"1\":{\"465\":1}}],[\"<lazycomp\",{\"1\":{\"464\":1}}],[\"<list\",{\"1\":{\"463\":1}}],[\"<li\",{\"1\":{\"457\":1}}],[\"<link\",{\"1\":{\"119\":1,\"120\":1,\"122\":2,\"463\":3}}],[\"<router\",{\"1\":{\"465\":1}}],[\"<route\",{\"1\":{\"463\":3,\"464\":1}}],[\"<routes>\",{\"1\":{\"463\":1}}],[\"<button\",{\"1\":{\"536\":1,\"537\":2}}],[\"<browserrouter>\",{\"1\":{\"463\":1}}],[\"<body>\",{\"1\":{\"305\":1,\"546\":1}}],[\"<ul>\",{\"1\":{\"457\":1}}],[\"<this\",{\"1\":{\"530\":1}}],[\"<themecontext\",{\"1\":{\"450\":2}}],[\"<title>vue\",{\"1\":{\"305\":1}}],[\"<component\",{\"1\":{\"490\":1}}],[\"<childcomp\",{\"1\":{\"450\":1}}],[\"<child2\",{\"1\":{\"450\":1}}],[\"<child1\",{\"1\":{\"450\":1}}],[\"<child\",{\"1\":{\"449\":1,\"457\":1,\"501\":1,\"529\":1,\"532\":1}}],[\"<canvas>\",{\"1\":{\"97\":1}}],[\"<>\",{\"1\":{\"449\":1}}],[\"<input\",{\"1\":{\"496\":1}}],[\"<iframe\",{\"1\":{\"438\":1}}],[\"<img\",{\"1\":{\"169\":1}}],[\"<50ms\",{\"1\":{\"317\":1}}],[\"<16ms\",{\"1\":{\"317\":1}}],[\"<100ms\",{\"1\":{\"317\":1}}],[\"<div>loading<\",{\"1\":{\"464\":1}}],[\"<div>loading\",{\"1\":{\"457\":1}}],[\"<div>\",{\"1\":{\"450\":3,\"463\":1,\"529\":1,\"530\":2,\"532\":1,\"536\":1,\"537\":2}}],[\"<div\",{\"1\":{\"305\":1,\"496\":1,\"546\":2}}],[\"<h5>我是函数式组件<\",{\"1\":{\"496\":1}}],[\"<header>\",{\"1\":{\"463\":1}}],[\"<head>\",{\"1\":{\"305\":1}}],[\"<homelayout\",{\"1\":{\"463\":1}}],[\"<html>\",{\"1\":{\"305\":1}}],[\"<p>name\",{\"1\":{\"496\":1}}],[\"<promise>\",{\"1\":{\"341\":1}}],[\"<proto\",{\"1\":{\"282\":1}}],[\"<package\",{\"1\":{\"251\":2}}],[\"<span>\",{\"1\":{\"536\":1,\"537\":2}}],[\"<suspense\",{\"1\":{\"457\":1}}],[\"<suspence\",{\"1\":{\"224\":1,\"464\":1}}],[\"<script>\",{\"1\":{\"546\":1}}],[\"<script\",{\"1\":{\"221\":1,\"305\":2,\"431\":2}}],[\"<a>\",{\"1\":{\"545\":1}}],[\"<about\",{\"1\":{\"463\":1}}],[\"<a\",{\"1\":{\"206\":1,\"207\":1,\"465\":1,\"546\":3}}],[\"<最后修改时间>\",{\"1\":{\"125\":1}}],[\"<etag>\",{\"1\":{\"125\":1}}],[\"<过期时间>\",{\"1\":{\"124\":1}}],[\"<<\",{\"1\":{\"20\":4}}],[\"<=\",{\"1\":{\"15\":1,\"47\":2}}],[\"<\",{\"1\":{\"11\":1,\"15\":1,\"74\":1,\"166\":1,\"168\":1,\"305\":9,\"345\":1,\"364\":2,\"373\":3,\"374\":1,\"424\":2,\"449\":1,\"450\":5,\"457\":4,\"463\":5,\"464\":1,\"465\":4,\"496\":2,\"529\":1,\"530\":2,\"532\":1,\"535\":1,\"536\":3,\"537\":6,\"541\":1,\"546\":3}}],[\"<outlet\",{\"1\":{\"463\":1}}],[\"<o\",{\"1\":{\"11\":5}}],[\"16\",{\"0\":{\"522\":1,\"523\":1},\"1\":{\"523\":1}}],[\"16进制相加求余\",{\"1\":{\"32\":1}}],[\"11\",{\"1\":{\"463\":1}}],[\"111\",{\"1\":{\"360\":1}}],[\"15\",{\"1\":{\"339\":2}}],[\"1班\",{\"1\":{\"323\":3}}],[\"1nf\",{\"0\":{\"321\":1}}],[\"1s\",{\"1\":{\"317\":1}}],[\"13\",{\"1\":{\"200\":1,\"339\":2}}],[\"123\",{\"1\":{\"394\":1}}],[\"12\",{\"1\":{\"373\":1,\"441\":1}}],[\"127\",{\"1\":{\"200\":2,\"293\":1,\"319\":2}}],[\"128bits\",{\"1\":{\"33\":1}}],[\"1+log2​k\",{\"1\":{\"57\":1}}],[\"1ogn\",{\"1\":{\"12\":1}}],[\"1011\",{\"1\":{\"322\":3}}],[\"101\",{\"1\":{\"200\":2}}],[\"10100\",{\"1\":{\"18\":1}}],[\"10px\",{\"1\":{\"90\":2}}],[\"100ms\",{\"1\":{\"168\":1}}],[\"1000\",{\"1\":{\"84\":1,\"537\":2}}],[\"10000\",{\"1\":{\"18\":1}}],[\"100\",{\"1\":{\"18\":1,\"360\":3,\"372\":1}}],[\"10\",{\"1\":{\"11\":1,\"109\":1,\"373\":1}}],[\"1\",{\"0\":{\"186\":3,\"285\":1},\"1\":{\"11\":1,\"12\":2,\"15\":3,\"18\":4,\"20\":14,\"23\":1,\"24\":4,\"34\":2,\"35\":1,\"43\":6,\"47\":1,\"50\":1,\"51\":1,\"73\":1,\"74\":3,\"124\":1,\"125\":2,\"126\":1,\"176\":2,\"179\":1,\"180\":1,\"186\":3,\"200\":8,\"201\":4,\"257\":2,\"281\":1,\"293\":1,\"305\":1,\"319\":2,\"321\":2,\"322\":2,\"323\":2,\"330\":1,\"331\":2,\"332\":1,\"339\":3,\"340\":4,\"342\":3,\"343\":2,\"345\":1,\"356\":2,\"361\":4,\"363\":3,\"372\":1,\"373\":1,\"374\":3,\"377\":1,\"389\":2,\"396\":1,\"398\":2,\"419\":1,\"424\":8,\"426\":1,\"429\":1,\"465\":2,\"480\":2,\"483\":2,\"487\":1,\"536\":3,\"537\":2,\"541\":2,\"548\":1}}],[\"图片可以懒加载\",{\"1\":{\"365\":1}}],[\"图片用\",{\"1\":{\"365\":1}}],[\"图片等资源\",{\"1\":{\"185\":1}}],[\"图片或视屏元素有大小属性\",{\"1\":{\"169\":1}}],[\"图片优化\",{\"1\":{\"167\":1}}],[\"图片\",{\"1\":{\"129\":1}}],[\"图形和动画\",{\"1\":{\"94\":1}}],[\"图形和效果\",{\"1\":{\"94\":1}}],[\"图形的渲染\",{\"1\":{\"94\":1}}],[\"图形渲染\",{\"1\":{\"93\":1,\"94\":1}}],[\"图像编辑等场景\",{\"1\":{\"93\":1}}],[\"图\",{\"0\":{\"37\":1,\"48\":1},\"1\":{\"10\":1}}],[\"二进制数据包\",{\"1\":{\"281\":1}}],[\"二进制数只有一个1\",{\"1\":{\"20\":1}}],[\"二进制协议编码库\",{\"0\":{\"282\":1}}],[\"二进制协议\",{\"1\":{\"131\":1}}],[\"二叉堆\",{\"1\":{\"56\":1}}],[\"二叉搜索树用中序遍历会遍历出有序数组\",{\"1\":{\"46\":1}}],[\"二叉搜索树\",{\"0\":{\"38\":1,\"45\":1},\"1\":{\"47\":1,\"56\":1}}],[\"二叉树遍历\",{\"0\":{\"46\":1}}],[\"二叉树\",{\"0\":{\"38\":1},\"1\":{\"51\":1}}],[\"二叉树实现的o\",{\"1\":{\"35\":1}}],[\"二叉树每个节点仅遍历一次\",{\"1\":{\"12\":1}}],[\"二叉树的层序遍历\",{\"1\":{\"7\":1}}],[\"二次探测法\",{\"1\":{\"33\":1}}],[\"二维矩阵排序\",{\"1\":{\"12\":1}}],[\"二分查找\",{\"0\":{\"13\":1},\"1\":{\"10\":1,\"12\":1}}],[\"a100\",{\"1\":{\"372\":1}}],[\"a和b的map指向同一个地址\",{\"1\":{\"369\":1}}],[\"attribute\",{\"1\":{\"368\":1}}],[\"attachevent\",{\"1\":{\"82\":1}}],[\"aggregateerror\",{\"1\":{\"334\":1}}],[\"age\",{\"1\":{\"124\":1,\"217\":1,\"218\":1,\"355\":3,\"369\":2}}],[\"age=10\",{\"1\":{\"124\":1}}],[\"about\",{\"1\":{\"463\":2,\"546\":3}}],[\"abortcontroller\",{\"1\":{\"336\":1}}],[\"abstract\",{\"1\":{\"355\":2}}],[\"absolute\",{\"1\":{\"90\":1}}],[\"ab\",{\"1\":{\"297\":1,\"298\":2,\"302\":2}}],[\"ai\",{\"1\":{\"268\":1}}],[\"after\",{\"1\":{\"229\":1,\"336\":1}}],[\"autoprefixer\",{\"1\":{\"254\":1}}],[\"auto\",{\"1\":{\"229\":1}}],[\"authority\",{\"1\":{\"182\":1,\"183\":1}}],[\"await\",{\"0\":{\"344\":1},\"1\":{\"227\":1,\"312\":1,\"315\":1,\"343\":1,\"344\":3,\"345\":3,\"346\":1}}],[\"actiontype\",{\"1\":{\"493\":1}}],[\"actioncreator\",{\"1\":{\"492\":1}}],[\"action\",{\"1\":{\"227\":2,\"444\":4,\"465\":3,\"482\":1,\"485\":1,\"486\":1,\"487\":5,\"489\":2,\"490\":1,\"492\":6,\"493\":7}}],[\"accept\",{\"1\":{\"200\":1,\"201\":1,\"214\":2}}],[\"access\",{\"1\":{\"184\":1,\"216\":2,\"217\":9,\"218\":1,\"221\":1,\"330\":1,\"433\":1}}],[\"ack\",{\"1\":{\"176\":1}}],[\"a>\",{\"1\":{\"182\":1,\"206\":1,\"207\":1,\"444\":1,\"465\":1,\"546\":3}}],[\"alternate\",{\"1\":{\"472\":1,\"475\":1}}],[\"alt=\",{\"1\":{\"169\":1}}],[\"allsettled\",{\"1\":{\"334\":1}}],[\"all\",{\"1\":{\"334\":1,\"338\":1}}],[\"alloc\",{\"1\":{\"281\":2}}],[\"allow\",{\"1\":{\"184\":1,\"213\":1,\"217\":7,\"221\":1}}],[\"alrady\",{\"1\":{\"332\":1}}],[\"alive\",{\"1\":{\"186\":1,\"201\":1}}],[\"algorithem\",{\"1\":{\"12\":1,\"551\":1}}],[\"aaa\",{\"1\":{\"372\":4,\"373\":1,\"374\":1}}],[\"aa\",{\"1\":{\"169\":1,\"355\":2,\"356\":1}}],[\"axios\",{\"1\":{\"160\":4}}],[\"analyzed\",{\"1\":{\"435\":2}}],[\"annotation\",{\"0\":{\"352\":1}}],[\"any\",{\"1\":{\"227\":5,\"334\":1,\"352\":2,\"356\":1,\"443\":2,\"444\":2}}],[\"anonymous\",{\"1\":{\"222\":1}}],[\"animation\",{\"1\":{\"94\":2,\"169\":1,\"232\":1,\"317\":1}}],[\"and\",{\"1\":{\"10\":1,\"12\":1,\"424\":1}}],[\"ambientlight\",{\"1\":{\"94\":1}}],[\"ast\",{\"1\":{\"221\":1,\"348\":1,\"435\":4}}],[\"aspect\",{\"1\":{\"169\":1}}],[\"asyncgenerator\",{\"1\":{\"345\":3}}],[\"asynciterator\",{\"1\":{\"345\":1,\"346\":1}}],[\"asynclocalstoragel\",{\"0\":{\"271\":1}}],[\"asynclocalstorage\",{\"0\":{\"269\":1},\"1\":{\"269\":2,\"271\":6}}],[\"asyncmethod\",{\"1\":{\"227\":2}}],[\"asyncclass\",{\"1\":{\"227\":1}}],[\"async\",{\"0\":{\"139\":1,\"343\":1,\"345\":1},\"1\":{\"84\":1,\"139\":2,\"227\":1,\"229\":1,\"271\":1,\"312\":1,\"315\":1,\"343\":5,\"345\":4,\"356\":2}}],[\"assign\",{\"1\":{\"76\":1}}],[\"ajax\",{\"0\":{\"83\":1},\"1\":{\"292\":1,\"312\":1}}],[\"apache\",{\"1\":{\"297\":1}}],[\"appendroute\",{\"1\":{\"546\":4}}],[\"app\",{\"1\":{\"226\":1,\"305\":7,\"307\":4,\"463\":1,\"471\":1,\"501\":2}}],[\"application\",{\"1\":{\"214\":2}}],[\"applymiddleware\",{\"1\":{\"487\":3}}],[\"apply\",{\"1\":{\"12\":4,\"227\":2,\"397\":1,\"493\":1}}],[\"api\",{\"0\":{\"277\":1,\"294\":1},\"1\":{\"78\":1,\"93\":1,\"94\":1,\"172\":1,\"201\":2,\"221\":1,\"336\":2,\"445\":1,\"451\":1,\"473\":2,\"548\":1}}],[\"arr\",{\"1\":{\"423\":6}}],[\"arrays\",{\"1\":{\"351\":1}}],[\"array\",{\"0\":{\"50\":1,\"420\":1,\"423\":1},\"1\":{\"9\":1,\"47\":1,\"353\":1,\"373\":3,\"374\":2,\"410\":1,\"416\":1,\"419\":1,\"420\":1,\"423\":6,\"483\":1}}],[\"arg\",{\"1\":{\"483\":2}}],[\"arguments\",{\"1\":{\"358\":1}}],[\"argc\",{\"0\":{\"286\":1,\"287\":2,\"289\":2}}],[\"argv\",{\"0\":{\"286\":1,\"287\":2,\"289\":2},\"1\":{\"290\":1,\"291\":1}}],[\"args\",{\"0\":{\"286\":1},\"1\":{\"71\":2,\"73\":4,\"227\":4,\"286\":1,\"356\":1,\"397\":2,\"483\":2,\"493\":2}}],[\"around\",{\"1\":{\"275\":1}}],[\"addobserver\",{\"1\":{\"488\":3}}],[\"addicecandidate\",{\"1\":{\"278\":1}}],[\"addstream\",{\"1\":{\"278\":1}}],[\"addtrack\",{\"1\":{\"278\":2}}],[\"addeventlistener\",{\"1\":{\"82\":1,\"214\":1,\"220\":2,\"221\":4,\"437\":1,\"546\":2}}],[\"add\",{\"1\":{\"36\":4,\"251\":3,\"254\":1,\"255\":1,\"536\":2}}],[\"a\",{\"1\":{\"17\":3,\"24\":2,\"36\":5,\"157\":2,\"159\":2,\"168\":1,\"190\":2,\"209\":6,\"322\":2,\"330\":4,\"331\":4,\"361\":7,\"365\":1,\"369\":5,\"372\":5,\"373\":4,\"374\":6,\"389\":6,\"390\":2,\"397\":1,\"419\":2,\"429\":2,\"444\":1,\"456\":1,\"483\":2,\"546\":1}}],[\"a^b\",{\"1\":{\"17\":3}}],[\"akra\",{\"1\":{\"12\":1}}],[\"a=2\",{\"1\":{\"12\":2}}],[\"a=1\",{\"1\":{\"12\":1,\"185\":1}}],[\"贪心最好\",{\"1\":{\"68\":1}}],[\"贪心算法与动态规划的不同在于它对每个子问题的解决方案都做出选择\",{\"1\":{\"67\":1}}],[\"贪心算法\",{\"0\":{\"67\":1}}],[\"贪心\",{\"1\":{\"10\":1,\"24\":1}}],[\"rs\",{\"1\":{\"309\":4}}],[\"rsa\",{\"1\":{\"180\":3}}],[\"rt\",{\"1\":{\"297\":1}}],[\"rt每次请求所需时间\",{\"1\":{\"297\":1}}],[\"rtcpeeconnection\",{\"1\":{\"278\":1}}],[\"rtcpeerconnection\",{\"1\":{\"277\":1,\"278\":8}}],[\"rpc\",{\"0\":{\"292\":1},\"1\":{\"292\":2}}],[\"rfc5389的一个拓展\",{\"1\":{\"275\":1}}],[\"rander\",{\"1\":{\"529\":1}}],[\"random\",{\"1\":{\"179\":4,\"180\":8}}],[\"race\",{\"0\":{\"335\":1},\"1\":{\"334\":1,\"336\":3,\"337\":1,\"338\":2}}],[\"rail\",{\"1\":{\"317\":1}}],[\"rail模型衡量前端性能\",{\"0\":{\"317\":1}}],[\"rate\",{\"1\":{\"297\":1}}],[\"ratio\",{\"1\":{\"169\":1}}],[\"raf\",{\"1\":{\"171\":1,\"312\":1}}],[\"raycaster\",{\"0\":{\"96\":1}}],[\"rules\",{\"1\":{\"109\":1}}],[\"runtime\",{\"1\":{\"128\":1,\"129\":1,\"243\":1,\"461\":1}}],[\"runtimechunk\",{\"1\":{\"128\":1}}],[\"run\",{\"1\":{\"12\":1,\"271\":2,\"493\":3}}],[\"rune\",{\"1\":{\"1\":1}}],[\"route>\",{\"1\":{\"463\":1}}],[\"route\",{\"1\":{\"463\":2,\"465\":1}}],[\"routes>\",{\"1\":{\"463\":1}}],[\"routes\",{\"1\":{\"463\":3,\"465\":7,\"546\":3}}],[\"router\",{\"0\":{\"462\":1,\"542\":1,\"546\":1},\"1\":{\"307\":1,\"459\":1,\"463\":1,\"465\":1,\"539\":1,\"542\":2,\"546\":8}}],[\"room服务器\",{\"1\":{\"272\":1}}],[\"rootfiber\",{\"1\":{\"475\":1}}],[\"roots\",{\"1\":{\"302\":2}}],[\"root\",{\"1\":{\"47\":20,\"185\":1,\"295\":3,\"319\":2,\"327\":1,\"475\":9,\"478\":1}}],[\"rollup\",{\"1\":{\"258\":1}}],[\"row\",{\"1\":{\"20\":3}}],[\"right\",{\"1\":{\"15\":4,\"47\":2}}],[\"review\",{\"1\":{\"365\":1}}],[\"reverse\",{\"1\":{\"71\":1}}],[\"retryfn<t>\",{\"1\":{\"356\":1}}],[\"retryfn\",{\"1\":{\"343\":2,\"356\":3}}],[\"return\",{\"1\":{\"15\":1,\"20\":1,\"24\":2,\"47\":8,\"66\":1,\"71\":1,\"73\":2,\"74\":4,\"114\":1,\"227\":5,\"305\":1,\"307\":1,\"337\":1,\"338\":4,\"340\":3,\"341\":1,\"342\":1,\"343\":5,\"345\":1,\"356\":2,\"361\":6,\"392\":1,\"393\":1,\"394\":1,\"397\":1,\"419\":2,\"429\":2,\"437\":1,\"443\":1,\"444\":3,\"449\":2,\"450\":4,\"456\":2,\"457\":3,\"458\":2,\"463\":2,\"465\":9,\"472\":1,\"475\":1,\"480\":3,\"483\":7,\"487\":2,\"489\":2,\"490\":2,\"492\":1,\"493\":2,\"496\":1,\"501\":1,\"506\":1,\"524\":2,\"529\":2,\"530\":1,\"532\":1,\"536\":1,\"537\":2,\"541\":1,\"546\":1}}],[\"ref=\",{\"1\":{\"449\":1}}],[\"refs\",{\"1\":{\"448\":1}}],[\"ref\",{\"0\":{\"447\":1},\"1\":{\"447\":7,\"449\":5}}],[\"reflect\",{\"0\":{\"418\":1},\"1\":{\"421\":1,\"547\":1}}],[\"reflow\",{\"0\":{\"230\":1},\"1\":{\"230\":3}}],[\"referenceerror\",{\"1\":{\"330\":1,\"363\":1}}],[\"referer<a\",{\"1\":{\"182\":1}}],[\"referer\",{\"0\":{\"185\":1},\"1\":{\"182\":1,\"185\":2,\"203\":1,\"206\":2}}],[\"renderproxy\",{\"1\":{\"548\":1}}],[\"renderfn\",{\"1\":{\"546\":5}}],[\"renderwithhooks\",{\"1\":{\"442\":3}}],[\"renderstyle\",{\"1\":{\"375\":1}}],[\"rendertext\",{\"1\":{\"546\":4}}],[\"rendertree\",{\"1\":{\"375\":1}}],[\"rendertostring\",{\"1\":{\"296\":2,\"305\":1}}],[\"renderobject\",{\"0\":{\"238\":1},\"1\":{\"238\":1,\"240\":2,\"375\":1}}],[\"renderlayer\",{\"0\":{\"240\":1},\"1\":{\"235\":1,\"240\":7,\"375\":1}}],[\"renderlayers\",{\"0\":{\"239\":1},\"1\":{\"229\":1}}],[\"render\",{\"0\":{\"475\":1,\"508\":1,\"515\":1,\"529\":1},\"1\":{\"229\":2,\"230\":1,\"445\":3,\"447\":1,\"450\":1,\"456\":2,\"458\":2,\"475\":1,\"478\":1,\"490\":1,\"508\":1,\"523\":1,\"529\":1,\"530\":1,\"540\":1,\"548\":1}}],[\"renderer\",{\"0\":{\"460\":1},\"1\":{\"94\":1,\"460\":1,\"461\":1}}],[\"reqest\",{\"1\":{\"297\":2}}],[\"req\",{\"1\":{\"226\":1,\"270\":6,\"271\":6,\"305\":1}}],[\"requre\",{\"1\":{\"427\":1}}],[\"requestidlecallback\",{\"1\":{\"479\":1}}],[\"requestanimationframe\",{\"1\":{\"312\":1,\"479\":1}}],[\"request\",{\"1\":{\"214\":1,\"216\":2,\"297\":1,\"336\":1}}],[\"require\",{\"0\":{\"112\":1},\"1\":{\"270\":1,\"271\":2,\"295\":1,\"309\":1,\"427\":3,\"429\":6,\"434\":2}}],[\"rejected\",{\"1\":{\"337\":1,\"457\":2}}],[\"reject\",{\"0\":{\"340\":1},\"1\":{\"225\":1,\"334\":1,\"336\":8,\"340\":10,\"343\":3,\"344\":1}}],[\"rejectionhandled\",{\"1\":{\"221\":2}}],[\"repaint\",{\"0\":{\"231\":1},\"1\":{\"231\":1}}],[\"reportingobserver=new\",{\"1\":{\"221\":1}}],[\"reportingobserver\",{\"1\":{\"221\":2}}],[\"replacestate\",{\"1\":{\"79\":1,\"308\":1,\"545\":1}}],[\"replace\",{\"1\":{\"76\":1}}],[\"red\",{\"1\":{\"351\":1}}],[\"reducers\",{\"1\":{\"489\":2}}],[\"reducer\",{\"1\":{\"443\":1,\"444\":2,\"485\":2,\"486\":3,\"487\":3,\"488\":1,\"489\":2}}],[\"reduce\",{\"1\":{\"338\":1,\"483\":3}}],[\"reduxcontext\",{\"1\":{\"490\":1}}],[\"redux\",{\"0\":{\"106\":1,\"481\":1,\"484\":1,\"490\":1,\"492\":1,\"493\":1},\"1\":{\"106\":3,\"459\":1,\"481\":1,\"493\":2}}],[\"redis\",{\"1\":{\"318\":1}}],[\"redirect\",{\"0\":{\"193\":1,\"194\":1}}],[\"regexp\",{\"1\":{\"465\":1}}],[\"registersignalhander\",{\"1\":{\"285\":2}}],[\"registry\",{\"1\":{\"159\":1}}],[\"regular\",{\"1\":{\"169\":1}}],[\"rewrite\",{\"1\":{\"121\":1}}],[\"reason\",{\"1\":{\"337\":2}}],[\"read\",{\"1\":{\"345\":1,\"457\":3}}],[\"reader\",{\"1\":{\"345\":3}}],[\"readfile\",{\"1\":{\"309\":1}}],[\"readfilesync\",{\"1\":{\"299\":2}}],[\"readable\",{\"1\":{\"309\":1}}],[\"readint16be\",{\"1\":{\"293\":1}}],[\"readystate\",{\"1\":{\"201\":1}}],[\"readystatus\",{\"1\":{\"84\":2}}],[\"reactcontainer\",{\"1\":{\"475\":1}}],[\"reactcurrentdispatcher\",{\"1\":{\"442\":2}}],[\"reactrootcontainer\",{\"1\":{\"475\":2}}],[\"reactreconciler\",{\"1\":{\"460\":1}}],[\"react原理\",{\"1\":{\"459\":1}}],[\"reactdom\",{\"1\":{\"445\":1}}],[\"reactdomserver\",{\"1\":{\"296\":1}}],[\"react深入\",{\"1\":{\"441\":1}}],[\"react\",{\"0\":{\"100\":1,\"224\":1,\"255\":1,\"459\":1,\"460\":1,\"462\":1,\"466\":1,\"467\":1,\"470\":1,\"473\":1,\"490\":1,\"500\":1,\"522\":1,\"523\":1,\"530\":1},\"1\":{\"99\":1,\"101\":1,\"102\":3,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"220\":1,\"252\":1,\"254\":2,\"255\":4,\"441\":1,\"443\":1,\"445\":1,\"448\":1,\"450\":2,\"458\":1,\"459\":2,\"460\":2,\"463\":1,\"464\":2,\"465\":1,\"468\":1,\"471\":1,\"472\":1,\"473\":3,\"482\":1,\"490\":4,\"495\":3,\"523\":1,\"529\":2,\"530\":3,\"534\":1,\"551\":1}}],[\"restful\",{\"0\":{\"294\":1}}],[\"reset\",{\"1\":{\"254\":1}}],[\"res\",{\"1\":{\"226\":1,\"270\":6,\"271\":3,\"295\":2,\"305\":2,\"336\":2,\"340\":2,\"342\":6,\"397\":4,\"457\":5,\"501\":2}}],[\"responsesize\",{\"1\":{\"345\":1}}],[\"response\",{\"1\":{\"184\":1,\"229\":1,\"317\":1,\"345\":2}}],[\"responsetext\",{\"1\":{\"84\":1}}],[\"resolve\",{\"0\":{\"340\":1},\"1\":{\"109\":5,\"227\":1,\"334\":1,\"336\":2,\"338\":1,\"339\":3,\"340\":9,\"341\":1,\"342\":3,\"343\":5,\"344\":1,\"541\":6}}],[\"result\",{\"1\":{\"36\":2,\"71\":1,\"73\":1}}],[\"releaselock\",{\"1\":{\"345\":1}}],[\"relays\",{\"1\":{\"275\":1}}],[\"relationship\",{\"1\":{\"12\":1}}],[\"rel=\",{\"1\":{\"119\":1,\"120\":1,\"122\":2,\"182\":1,\"206\":1,\"207\":1}}],[\"reload\",{\"1\":{\"76\":1}}],[\"received\",{\"1\":{\"176\":1}}],[\"recently\",{\"1\":{\"9\":1}}],[\"reconciler\",{\"1\":{\"459\":1,\"460\":1,\"468\":2,\"473\":1}}],[\"reconcile\",{\"1\":{\"107\":1}}],[\"recurrence\",{\"1\":{\"12\":1}}],[\"recursion\",{\"1\":{\"10\":1,\"71\":2}}],[\"并调用\",{\"1\":{\"487\":1}}],[\"并不是严格等于有着相同数学值的\",{\"1\":{\"406\":1}}],[\"并不会直接通知订阅者\",{\"1\":{\"65\":1}}],[\"并标记活着的对象\",{\"1\":{\"384\":1}}],[\"并发量\",{\"1\":{\"297\":2}}],[\"并派生推广\",{\"1\":{\"244\":1}}],[\"并收集信息优化\",{\"1\":{\"241\":1}}],[\"并从队列中剔除\",{\"1\":{\"221\":1}}],[\"并执行该元素上的\",{\"1\":{\"221\":1}}],[\"并验证\",{\"1\":{\"203\":1}}],[\"并对目录进行结构初始化\",{\"1\":{\"159\":1}}],[\"并且在引用的时候透明的特点\",{\"1\":{\"498\":1}}],[\"并且需要更多样板代码\",{\"1\":{\"495\":1}}],[\"并且能被感知\",{\"1\":{\"482\":1}}],[\"并且对于生命周期短的场景存活对象只占少部分\",{\"1\":{\"381\":1}}],[\"并且更新剩余的空间\",{\"1\":{\"283\":1}}],[\"并且用证书里的公钥加密\",{\"1\":{\"180\":1}}],[\"并且\",{\"1\":{\"156\":1,\"443\":1}}],[\"并且排序\",{\"1\":{\"57\":1}}],[\"并行标记与并行清理\",{\"1\":{\"386\":1}}],[\"并行下载\",{\"1\":{\"139\":2}}],[\"并行\",{\"1\":{\"116\":1,\"141\":1}}],[\"并行执行\",{\"1\":{\"95\":1}}],[\"并根据以前的结果对当前进行选择\",{\"1\":{\"67\":1}}],[\"并查集\",{\"1\":{\"9\":1}}],[\"并返回\",{\"1\":{\"7\":1}}],[\"h5>\",{\"1\":{\"496\":1}}],[\"hint\",{\"1\":{\"412\":1}}],[\"hidden\",{\"1\":{\"367\":1}}],[\"historyref\",{\"1\":{\"465\":4}}],[\"history\",{\"0\":{\"77\":1,\"79\":1,\"544\":1},\"1\":{\"77\":2,\"79\":5,\"465\":7,\"544\":1,\"546\":1}}],[\"hrtime\",{\"1\":{\"290\":1,\"291\":1}}],[\"href=\",{\"1\":{\"119\":1,\"120\":1,\"182\":1,\"206\":1,\"207\":1,\"465\":1,\"546\":3}}],[\"href\",{\"1\":{\"76\":1,\"546\":1}}],[\"handleclick\",{\"1\":{\"496\":2}}],[\"handler\",{\"1\":{\"338\":3}}],[\"handler2\",{\"1\":{\"270\":2,\"271\":2}}],[\"handler1\",{\"1\":{\"270\":2,\"271\":2}}],[\"hasinstance\",{\"1\":{\"346\":1}}],[\"has\",{\"1\":{\"36\":2}}],[\"hash中乱序\",{\"1\":{\"35\":1}}],[\"hash\",{\"0\":{\"77\":1,\"110\":1,\"544\":1},\"1\":{\"35\":1,\"76\":1,\"77\":1,\"109\":1,\"110\":1,\"128\":1,\"261\":1,\"544\":2}}],[\"hashmap\",{\"0\":{\"35\":1}}],[\"hashset\",{\"0\":{\"35\":1},\"1\":{\"34\":1}}],[\"hashing就是无限的字符转换为有限的过程\",{\"1\":{\"31\":1}}],[\"hashtable\",{\"1\":{\"9\":1}}],[\"hpack\",{\"1\":{\"131\":2,\"135\":1}}],[\"httponly\",{\"1\":{\"204\":1}}],[\"http3\",{\"0\":{\"136\":1}}],[\"http2\",{\"0\":{\"130\":1,\"134\":1,\"135\":1},\"1\":{\"130\":1,\"131\":5,\"132\":1,\"134\":3,\"135\":1,\"182\":1,\"186\":1,\"365\":2}}],[\"http1\",{\"1\":{\"124\":1,\"125\":1,\"131\":1,\"134\":1,\"135\":1,\"186\":4}}],[\"http\",{\"0\":{\"123\":1,\"182\":1,\"186\":1},\"1\":{\"122\":2,\"132\":2,\"169\":1,\"183\":2,\"185\":1,\"186\":4,\"199\":1,\"200\":4,\"201\":3,\"203\":2,\"204\":1,\"207\":1,\"221\":1,\"229\":1,\"241\":1,\"257\":1,\"258\":1,\"270\":3,\"271\":4,\"280\":2,\"292\":1,\"293\":1,\"299\":1,\"305\":1,\"319\":1,\"365\":1,\"501\":1}}],[\"https\",{\"1\":{\"76\":1,\"185\":1}}],[\"html>\",{\"1\":{\"305\":2}}],[\"html5\",{\"1\":{\"240\":1}}],[\"html\",{\"0\":{\"137\":1,\"233\":1,\"431\":1},\"1\":{\"119\":1,\"123\":1,\"129\":1,\"139\":2,\"140\":1,\"143\":2,\"167\":1,\"185\":1,\"204\":1,\"229\":7,\"235\":2,\"241\":1,\"254\":1,\"305\":2,\"365\":2,\"375\":1,\"431\":1}}],[\"htmlwebpackplugin\",{\"1\":{\"109\":1,\"111\":1,\"128\":1}}],[\"home\",{\"1\":{\"546\":1}}],[\"homelayout\",{\"1\":{\"463\":1}}],[\"hot\",{\"1\":{\"109\":1}}],[\"hooks\",{\"0\":{\"440\":1,\"441\":1,\"442\":1,\"491\":1},\"1\":{\"111\":1,\"271\":1,\"441\":1,\"459\":1,\"496\":1}}],[\"hook\",{\"1\":{\"104\":1,\"443\":13,\"444\":4}}],[\"hoc\",{\"0\":{\"454\":1},\"1\":{\"104\":1,\"456\":1,\"490\":1}}],[\"hostory\",{\"1\":{\"545\":1}}],[\"hostroot\",{\"1\":{\"460\":2}}],[\"hostconfig\",{\"1\":{\"460\":3}}],[\"hostcomponent\",{\"1\":{\"448\":1,\"460\":2,\"476\":1}}],[\"host\",{\"0\":{\"183\":1},\"1\":{\"76\":1,\"182\":1,\"183\":4,\"200\":1,\"293\":1}}],[\"help\",{\"1\":{\"325\":1}}],[\"hello\",{\"1\":{\"293\":1,\"295\":6,\"363\":1,\"460\":1}}],[\"hellman\",{\"1\":{\"179\":1}}],[\"heavy\",{\"1\":{\"298\":1}}],[\"head>\",{\"1\":{\"305\":1}}],[\"headless\",{\"1\":{\"264\":1}}],[\"head\",{\"1\":{\"184\":1,\"189\":1,\"190\":1,\"214\":1}}],[\"header>\",{\"1\":{\"463\":1}}],[\"header\",{\"1\":{\"184\":2,\"185\":1,\"201\":1,\"214\":2,\"216\":1,\"217\":2}}],[\"headers\",{\"0\":{\"200\":1},\"1\":{\"132\":1,\"216\":1,\"217\":3}}],[\"heap\",{\"1\":{\"9\":1,\"375\":1}}],[\"heightener\",{\"1\":{\"487\":1}}],[\"height=\",{\"1\":{\"438\":1}}],[\"height\",{\"1\":{\"88\":2,\"169\":1}}],[\"d\",{\"1\":{\"319\":1}}],[\"duplex\",{\"1\":{\"309\":2}}],[\"db\",{\"1\":{\"243\":1}}],[\"drawer\",{\"1\":{\"449\":1}}],[\"draw\",{\"1\":{\"232\":3}}],[\"dh\",{\"1\":{\"179\":2,\"180\":5}}],[\"date\",{\"1\":{\"126\":1}}],[\"data=\",{\"1\":{\"501\":1}}],[\"dataview\",{\"1\":{\"144\":1}}],[\"datasource\",{\"1\":{\"144\":1}}],[\"data\",{\"1\":{\"84\":2,\"185\":1,\"201\":2,\"214\":2,\"280\":1,\"293\":2,\"295\":1,\"305\":1,\"309\":5,\"336\":1,\"365\":2,\"437\":1,\"501\":3,\"541\":1,\"548\":1}}],[\"dns\",{\"0\":{\"119\":1},\"1\":{\"119\":2,\"135\":1,\"229\":1,\"292\":1,\"365\":2}}],[\"deadline\",{\"1\":{\"480\":3}}],[\"detected\",{\"1\":{\"341\":1}}],[\"detail\",{\"1\":{\"319\":1}}],[\"declared\",{\"1\":{\"332\":1}}],[\"defineproperty\",{\"1\":{\"419\":1}}],[\"defined\",{\"1\":{\"363\":1}}],[\"default\",{\"0\":{\"289\":1},\"1\":{\"412\":2,\"430\":3,\"493\":1}}],[\"defer\",{\"0\":{\"139\":1},\"1\":{\"139\":2,\"229\":1,\"431\":1}}],[\"description\",{\"1\":{\"273\":1,\"278\":1}}],[\"descriptor\",{\"1\":{\"227\":2,\"368\":2}}],[\"deoptimize\",{\"1\":{\"241\":1}}],[\"del\",{\"1\":{\"548\":1}}],[\"deletion\",{\"1\":{\"460\":1,\"478\":1}}],[\"delete\",{\"0\":{\"374\":1},\"1\":{\"184\":1,\"217\":1,\"369\":1,\"374\":5,\"548\":1}}],[\"delay\",{\"0\":{\"168\":1},\"1\":{\"165\":2}}],[\"debug\",{\"1\":{\"143\":1,\"289\":1}}],[\"dependencies\",{\"1\":{\"472\":1}}],[\"dependson\",{\"1\":{\"128\":1}}],[\"deps\",{\"1\":{\"449\":1}}],[\"deprecating\",{\"1\":{\"278\":1}}],[\"depth\",{\"1\":{\"10\":1}}],[\"devnote\",{\"0\":{\"551\":1}}],[\"devtool\",{\"1\":{\"298\":1,\"302\":1}}],[\"devtools\",{\"1\":{\"109\":1,\"375\":2}}],[\"dev\",{\"1\":{\"254\":1}}],[\"devserver\",{\"1\":{\"109\":1}}],[\"development配置\",{\"1\":{\"109\":1}}],[\"done\",{\"1\":{\"345\":2,\"419\":5,\"493\":2}}],[\"doc\",{\"1\":{\"364\":4}}],[\"doctype\",{\"1\":{\"305\":1}}],[\"documentelement\",{\"1\":{\"81\":1}}],[\"document\",{\"1\":{\"81\":1,\"229\":1,\"364\":6,\"438\":1,\"541\":1}}],[\"downlink\",{\"1\":{\"214\":1}}],[\"douyin\",{\"1\":{\"210\":1}}],[\"double\",{\"1\":{\"9\":1}}],[\"dominteractive\",{\"1\":{\"234\":1}}],[\"domcontentload\",{\"1\":{\"234\":1,\"235\":1}}],[\"domcontentloaded\",{\"1\":{\"139\":2}}],[\"dom\",{\"0\":{\"107\":1,\"237\":1,\"470\":1},\"1\":{\"92\":1,\"102\":2,\"107\":2,\"138\":1,\"143\":8,\"171\":1,\"204\":1,\"229\":5,\"230\":1,\"234\":1,\"241\":1,\"255\":2,\"312\":1,\"313\":3,\"365\":1,\"375\":1,\"442\":1,\"447\":5,\"449\":1,\"463\":1,\"472\":2,\"473\":2,\"475\":1,\"476\":1,\"477\":1,\"482\":1,\"514\":3,\"516\":1,\"548\":1}}],[\"dpr\",{\"1\":{\"214\":1}}],[\"dp\",{\"1\":{\"24\":1,\"68\":1}}],[\"dpin\",{\"1\":{\"23\":1}}],[\"dynamic\",{\"1\":{\"10\":1,\"319\":1}}],[\"diff\",{\"0\":{\"538\":1},\"1\":{\"476\":1,\"539\":1}}],[\"diffie\",{\"1\":{\"179\":1}}],[\"didschedulerenderphaseupdate\",{\"1\":{\"445\":1}}],[\"div\",{\"1\":{\"471\":1}}],[\"div>\",{\"1\":{\"305\":1,\"450\":3,\"457\":1,\"463\":1,\"464\":1,\"496\":1,\"529\":1,\"530\":2,\"532\":1,\"536\":1,\"537\":2,\"546\":2}}],[\"divisionconquer\",{\"1\":{\"73\":4}}],[\"divide\",{\"1\":{\"10\":1}}],[\"dimensions\",{\"1\":{\"144\":1}}],[\"directory\",{\"1\":{\"109\":1}}],[\"dirname\",{\"1\":{\"109\":3,\"290\":1}}],[\"disable\",{\"1\":{\"325\":1}}],[\"dist\",{\"1\":{\"109\":1}}],[\"disptach\",{\"1\":{\"487\":1}}],[\"dispatch<a>\",{\"1\":{\"444\":2}}],[\"dispatch<basicstateaction<s>>\",{\"1\":{\"443\":1,\"444\":1}}],[\"dispatchaction\",{\"1\":{\"443\":1}}],[\"dispatchsetstate\",{\"1\":{\"443\":3,\"445\":1}}],[\"dispatch\",{\"0\":{\"485\":1},\"1\":{\"102\":1,\"443\":5,\"444\":3,\"486\":2,\"487\":10,\"488\":1,\"490\":4,\"491\":1,\"492\":3,\"493\":2}}],[\"displayerror\",{\"1\":{\"336\":1}}],[\"display\",{\"1\":{\"88\":2,\"229\":1}}],[\"disjoint\",{\"1\":{\"9\":1}}],[\"dfs不变\",{\"1\":{\"20\":1}}],[\"dfs\",{\"0\":{\"2\":1,\"5\":1},\"1\":{\"6\":3,\"7\":2,\"20\":3,\"29\":1,\"68\":1}}],[\"lanes\",{\"1\":{\"472\":1}}],[\"language\",{\"1\":{\"214\":2}}],[\"labeled\",{\"1\":{\"424\":2}}],[\"label\",{\"1\":{\"424\":1}}],[\"lazycomp\",{\"1\":{\"464\":2}}],[\"lazy\",{\"1\":{\"386\":1,\"464\":4}}],[\"latest\",{\"1\":{\"252\":3}}],[\"layout\",{\"1\":{\"229\":1,\"231\":1,\"238\":1}}],[\"layer\",{\"1\":{\"171\":1,\"231\":1}}],[\"largest\",{\"1\":{\"165\":1}}],[\"lasteffect\",{\"1\":{\"472\":1}}],[\"lasteventid\",{\"1\":{\"201\":1}}],[\"lastrenderedstate\",{\"1\":{\"443\":2}}],[\"lastrenderedreducer\",{\"1\":{\"443\":2,\"444\":1}}],[\"last\",{\"1\":{\"125\":3,\"126\":2,\"176\":1,\"192\":1,\"394\":1}}],[\"lcp\",{\"0\":{\"166\":1},\"1\":{\"165\":2,\"166\":1}}],[\"lodash\",{\"1\":{\"251\":2}}],[\"loop2\",{\"1\":{\"424\":2}}],[\"loop1\",{\"1\":{\"424\":3}}],[\"loop\",{\"0\":{\"289\":1,\"310\":1,\"311\":1,\"313\":1},\"1\":{\"229\":1,\"241\":1,\"310\":2,\"311\":1}}],[\"loading\",{\"1\":{\"458\":4}}],[\"loadenvironment\",{\"1\":{\"289\":1}}],[\"loader编译\",{\"1\":{\"253\":1}}],[\"loader\",{\"1\":{\"62\":1,\"141\":1,\"254\":6,\"261\":4}}],[\"load\",{\"1\":{\"220\":1,\"221\":1,\"234\":3,\"317\":1}}],[\"long\",{\"1\":{\"168\":1}}],[\"locked\",{\"0\":{\"250\":1}}],[\"lockfile\",{\"1\":{\"159\":1}}],[\"localidentname=\",{\"1\":{\"261\":1}}],[\"localhost\",{\"1\":{\"185\":1,\"200\":1}}],[\"local\",{\"1\":{\"169\":1,\"261\":1,\"325\":2}}],[\"localstorage\",{\"1\":{\"122\":1,\"220\":1,\"439\":1}}],[\"locationprop\",{\"1\":{\"465\":3}}],[\"location=\",{\"1\":{\"465\":1}}],[\"locationcontext\",{\"1\":{\"465\":5}}],[\"location\",{\"0\":{\"76\":1},\"1\":{\"76\":12,\"185\":2,\"207\":2,\"319\":1,\"437\":1,\"463\":1,\"465\":4,\"546\":1}}],[\"logger\",{\"1\":{\"487\":1}}],[\"log\",{\"0\":{\"375\":1},\"1\":{\"109\":1,\"201\":3,\"270\":1,\"271\":2,\"295\":1,\"298\":2,\"309\":1,\"330\":2,\"339\":7,\"340\":9,\"342\":7,\"345\":1,\"355\":1,\"360\":4,\"361\":7,\"363\":6,\"375\":1,\"389\":4,\"390\":1,\"419\":4,\"424\":1,\"437\":1,\"483\":23,\"487\":2,\"496\":2,\"524\":5,\"535\":1,\"536\":1,\"537\":2}}],[\"logn\",{\"0\":{\"42\":1},\"1\":{\"11\":2,\"12\":1,\"35\":1,\"38\":1,\"57\":2,\"74\":1}}],[\"l\",{\"0\":{\"42\":2}}],[\"li>\",{\"1\":{\"457\":1}}],[\"limit\",{\"1\":{\"338\":2}}],[\"limitpromise\",{\"1\":{\"338\":1}}],[\"libuv\",{\"1\":{\"286\":1,\"289\":1,\"310\":1}}],[\"light\",{\"1\":{\"94\":1}}],[\"linux\",{\"1\":{\"297\":1}}],[\"link>\",{\"1\":{\"463\":3}}],[\"link\",{\"1\":{\"251\":1,\"463\":1,\"465\":1}}],[\"linked\",{\"0\":{\"51\":1}}],[\"linkedlist\",{\"1\":{\"9\":1}}],[\"lineno\",{\"1\":{\"221\":1}}],[\"line\",{\"1\":{\"88\":1}}],[\"listener\",{\"1\":{\"485\":1}}],[\"listen\",{\"1\":{\"176\":1,\"270\":1,\"271\":1,\"293\":1,\"465\":1}}],[\"list\",{\"0\":{\"34\":1,\"51\":1},\"1\":{\"34\":1,\"457\":2,\"463\":2,\"546\":3}}],[\"lfu\",{\"1\":{\"9\":1}}],[\"lru\",{\"1\":{\"9\":1,\"540\":1}}],[\"legacycreaterootfromdomcontainer\",{\"1\":{\"475\":1}}],[\"legacyrendersubtreeintocontainer\",{\"1\":{\"475\":1}}],[\"legacy\",{\"1\":{\"450\":2,\"468\":1}}],[\"len\",{\"1\":{\"364\":4}}],[\"length\",{\"0\":{\"420\":1},\"1\":{\"4\":1,\"6\":1,\"15\":1,\"345\":2,\"364\":2,\"419\":1,\"420\":1,\"465\":1,\"483\":2,\"541\":2}}],[\"lexical\",{\"1\":{\"358\":1}}],[\"le\",{\"1\":{\"281\":1}}],[\"less\",{\"1\":{\"254\":2}}],[\"lerna\",{\"0\":{\"248\":1},\"1\":{\"250\":1}}],[\"level\",{\"1\":{\"71\":5,\"434\":1}}],[\"level信息同节点一样加入queue中\",{\"1\":{\"7\":1}}],[\"left\",{\"1\":{\"15\":4,\"47\":2}}],[\"least\",{\"1\":{\"9\":2}}],[\"let\",{\"0\":{\"329\":1,\"330\":1,\"331\":1,\"332\":1},\"1\":{\"6\":1,\"15\":2,\"20\":2,\"47\":1,\"73\":4,\"309\":1,\"328\":1,\"330\":4,\"331\":2,\"332\":2,\"334\":1,\"336\":1,\"338\":2,\"358\":2,\"360\":2,\"364\":6,\"369\":1,\"404\":1,\"457\":2,\"465\":1,\"475\":1,\"480\":2,\"487\":1,\"493\":2,\"535\":1,\"541\":5}}],[\"左右两边各找个数最大值\",{\"1\":{\"74\":1}}],[\"左右括号用尽\",{\"1\":{\"7\":1}}],[\"左节点为空返回右节点\",{\"1\":{\"47\":1}}],[\"左\",{\"1\":{\"47\":1}}],[\"左子节点为2i+1\",{\"1\":{\"41\":1}}],[\"左边直接加1\",{\"1\":{\"7\":1}}],[\"不触发\",{\"1\":{\"545\":1}}],[\"不方便\",{\"1\":{\"544\":1}}],[\"不创建新数组\",{\"1\":{\"541\":1}}],[\"不相同就更新child\",{\"1\":{\"529\":1}}],[\"不相关的代码省略\",{\"1\":{\"305\":1}}],[\"不利于垃圾回收\",{\"1\":{\"499\":1}}],[\"不执行下一次beginwork\",{\"1\":{\"475\":1}}],[\"不应该被重新定义或者遮蔽\",{\"1\":{\"406\":1}}],[\"不是导出对象\",{\"1\":{\"430\":1}}],[\"不是简单数据类型\",{\"1\":{\"406\":1}}],[\"不是函数声明\",{\"1\":{\"361\":1}}],[\"不给用户暴露不需要的属性\",{\"1\":{\"394\":1}}],[\"不设置\",{\"1\":{\"392\":1}}],[\"不开\",{\"1\":{\"375\":1}}],[\"不经常修改\",{\"1\":{\"368\":1}}],[\"不使用\",{\"1\":{\"364\":1}}],[\"不使用本地缓存\",{\"1\":{\"124\":1}}],[\"不允许比较this\",{\"1\":{\"506\":1}}],[\"不允许使用\",{\"1\":{\"506\":1}}],[\"不允许使用变量等\",{\"1\":{\"349\":1}}],[\"不允许设置为\",{\"1\":{\"217\":1}}],[\"不打印到控制台\",{\"1\":{\"340\":1}}],[\"不管有没有拒绝\",{\"1\":{\"334\":1}}],[\"不管异步文件\",{\"1\":{\"109\":1}}],[\"不完整包需要标记包长\",{\"1\":{\"293\":1}}],[\"不用memo\",{\"1\":{\"530\":1}}],[\"不用浏览器有任何干预\",{\"1\":{\"312\":1}}],[\"不用\",{\"1\":{\"292\":1}}],[\"不用排序\",{\"1\":{\"57\":1}}],[\"不安全的原因\",{\"1\":{\"523\":1}}],[\"不安全\",{\"1\":{\"246\":1}}],[\"不包含继承的和\",{\"1\":{\"416\":1}}],[\"不包含不可见元素\",{\"1\":{\"238\":1}}],[\"不包含默认背景绘制\",{\"1\":{\"165\":1}}],[\"不必等待整个\",{\"1\":{\"235\":1}}],[\"不必等待上一个请求结束后才进行下一个请求\",{\"1\":{\"131\":1}}],[\"不阻塞\",{\"1\":{\"229\":1}}],[\"不携带\",{\"1\":{\"222\":1}}],[\"不过\",{\"1\":{\"221\":1}}],[\"不知道\",{\"1\":{\"210\":1}}],[\"不知道一共有多少个元素\",{\"1\":{\"51\":1}}],[\"不对传递原标签页的文档对象\",{\"1\":{\"207\":1}}],[\"不对其做任何特殊处理\",{\"1\":{\"158\":1}}],[\"不被篡改\",{\"1\":{\"207\":1}}],[\"不让\",{\"1\":{\"204\":1}}],[\"不缓存\",{\"1\":{\"190\":1}}],[\"不可再拆分\",{\"1\":{\"321\":1}}],[\"不可预测重定向方法\",{\"1\":{\"189\":1,\"190\":1}}],[\"不可重复\",{\"1\":{\"34\":1}}],[\"不在连接状态\",{\"1\":{\"176\":1}}],[\"不要在一个已存在的元素上面插入内容\",{\"1\":{\"169\":1}}],[\"不会像服务器发请求\",{\"1\":{\"544\":1}}],[\"不会渲染\",{\"1\":{\"534\":1}}],[\"不会中断更新\",{\"1\":{\"468\":1}}],[\"不会提升\",{\"1\":{\"361\":1}}],[\"不会冗余\",{\"1\":{\"295\":1}}],[\"不会被\",{\"1\":{\"232\":1}}],[\"不会被发送\",{\"1\":{\"185\":1}}],[\"不会阻塞\",{\"1\":{\"229\":1}}],[\"不会再触发预检\",{\"1\":{\"218\":1}}],[\"不会产生额外的磁盘占用\",{\"1\":{\"156\":1}}],[\"不会影响到其他请求\",{\"1\":{\"134\":1}}],[\"不产生\",{\"1\":{\"141\":1}}],[\"不增加重排\",{\"1\":{\"140\":1}}],[\"不向服务器发请求\",{\"1\":{\"124\":1}}],[\"不受\",{\"1\":{\"117\":1,\"309\":1}}],[\"不受内部内容影响\",{\"1\":{\"88\":1}}],[\"不共享内存\",{\"1\":{\"116\":1}}],[\"不压缩\",{\"1\":{\"109\":1}}],[\"不容易像\",{\"1\":{\"102\":1}}],[\"不合并的方法\",{\"1\":{\"90\":1}}],[\"不能调用\",{\"1\":{\"517\":1}}],[\"不能表示小数\",{\"1\":{\"406\":1}}],[\"不能被修改\",{\"1\":{\"363\":1}}],[\"不能作为构造函数\",{\"1\":{\"346\":1}}],[\"不能上报\",{\"1\":{\"221\":1}}],[\"不能显示其他域错误具体信息\",{\"1\":{\"221\":1}}],[\"不能访问\",{\"1\":{\"116\":1}}],[\"不能再用返回按钮\",{\"1\":{\"76\":1}}],[\"不能回退\",{\"1\":{\"67\":1}}],[\"不同模块变量冲突\",{\"1\":{\"426\":1}}],[\"不同\",{\"1\":{\"400\":1}}],[\"不同类型一律\",{\"1\":{\"399\":1}}],[\"不同处理\",{\"1\":{\"358\":1}}],[\"不同于浏览器\",{\"1\":{\"315\":1}}],[\"不同平台api不同\",{\"1\":{\"306\":1}}],[\"不同班级\",{\"1\":{\"98\":1}}],[\"不同的实现隐藏起来\",{\"1\":{\"61\":1}}],[\"不同的事件监听用相同的回调函数\",{\"1\":{\"61\":1}}],[\"不同对象可能生成同一个下标\",{\"1\":{\"33\":1}}],[\"不需要为任务\",{\"1\":{\"479\":1}}],[\"不需要传参来实现\",{\"1\":{\"390\":1}}],[\"不需要占用大量内存\",{\"1\":{\"309\":1}}],[\"不需要拆分域名\",{\"1\":{\"135\":1}}],[\"不需要考虑\",{\"1\":{\"60\":1}}],[\"不需要维护第k大的值\",{\"1\":{\"57\":1}}],[\"不需要加任何标识\",{\"1\":{\"7\":1}}],[\"不好的节点舍弃不遍历\",{\"1\":{\"21\":1}}],[\"不再递归\",{\"1\":{\"7\":2}}],[\"分开\",{\"1\":{\"368\":1}}],[\"分别是隐藏类\",{\"1\":{\"367\":1}}],[\"分别放在\",{\"1\":{\"313\":1}}],[\"分别算\",{\"1\":{\"7\":1}}],[\"分析得到的\",{\"1\":{\"298\":1}}],[\"分辨率之类的信息\",{\"1\":{\"273\":1}}],[\"分类\",{\"1\":{\"267\":1,\"309\":1}}],[\"分块\",{\"1\":{\"229\":1}}],[\"分层\",{\"1\":{\"229\":1,\"244\":1}}],[\"分区\",{\"1\":{\"209\":1}}],[\"分解耗时任务\",{\"1\":{\"168\":1}}],[\"分帧会来来如下好处\",{\"1\":{\"131\":1}}],[\"分割\",{\"1\":{\"128\":1}}],[\"分治一直到x1\",{\"1\":{\"74\":1}}],[\"分治模版\",{\"0\":{\"73\":1}}],[\"分治\",{\"0\":{\"69\":1,\"72\":1},\"1\":{\"7\":1,\"10\":1,\"74\":1}}],[\"算每个节点的几何信息\",{\"1\":{\"229\":1}}],[\"算对数\",{\"1\":{\"20\":1}}],[\"算法所需参数\",{\"1\":{\"180\":2}}],[\"算法优化\",{\"1\":{\"135\":1}}],[\"算法\",{\"0\":{\"8\":1,\"10\":1},\"1\":{\"180\":1,\"379\":1}}],[\"算最小\",{\"1\":{\"7\":1}}],[\"算最大\",{\"1\":{\"7\":1}}],[\"算左边和右边\",{\"1\":{\"7\":2}}],[\"最终更新\",{\"1\":{\"487\":1}}],[\"最终比较\",{\"1\":{\"398\":1}}],[\"最重要\",{\"1\":{\"297\":1}}],[\"最后遍历执行\",{\"1\":{\"541\":1}}],[\"最后还是返回新的\",{\"1\":{\"489\":1}}],[\"最后产生的函数样子\",{\"1\":{\"483\":1}}],[\"最后进到commitrootimpl\",{\"1\":{\"478\":1}}],[\"最后进行一次合成更新\",{\"1\":{\"444\":1}}],[\"最后形成这种结构\",{\"1\":{\"475\":1}}],[\"最后new\",{\"1\":{\"475\":1}}],[\"最后\",{\"1\":{\"348\":1}}],[\"最后双方再交换ice\",{\"1\":{\"278\":1}}],[\"最后一个元素放到堆顶\",{\"1\":{\"57\":1}}],[\"最后一个数用set查找\",{\"1\":{\"36\":1}}],[\"最后一行元素之间不能有间隔\",{\"1\":{\"40\":1}}],[\"最多持有1股\",{\"1\":{\"68\":1}}],[\"最少知识原则\",{\"0\":{\"61\":1}}],[\"最小化主线程工作\",{\"1\":{\"168\":1}}],[\"最小元素永远在堆顶\",{\"1\":{\"56\":1}}],[\"最小深度\",{\"1\":{\"7\":1}}],[\"最近公共祖先\",{\"1\":{\"47\":1}}],[\"最近最少使用\",{\"1\":{\"9\":1}}],[\"最大内容绘制\",{\"1\":{\"165\":1}}],[\"最大元素永远在堆顶\",{\"1\":{\"56\":1}}],[\"最大限度地減少无谓的字符串比较\",{\"1\":{\"25\":1}}],[\"最大深度\",{\"1\":{\"7\":1}}],[\"最优子结构\",{\"1\":{\"23\":1}}],[\"最不经常使用\",{\"1\":{\"9\":1}}],[\"解耦组件加载和搭建\",{\"1\":{\"149\":1}}],[\"解决懒加载的实现问题\",{\"1\":{\"502\":1}}],[\"解决数据请求时机问题\",{\"1\":{\"502\":1}}],[\"解决数据流向问题\",{\"1\":{\"502\":1}}],[\"解决开发逻辑或一类流程性标准的问题\",{\"1\":{\"244\":1}}],[\"解决业务中的标准问题\",{\"1\":{\"244\":1}}],[\"解决目的就是释放主线程\",{\"0\":{\"171\":1}}],[\"解决\",{\"0\":{\"167\":1,\"502\":1},\"1\":{\"125\":1,\"220\":1,\"385\":1}}],[\"解析完\",{\"1\":{\"235\":1}}],[\"解析完触发\",{\"1\":{\"234\":1}}],[\"解析完成后顺序执行\",{\"1\":{\"139\":1}}],[\"解析互不干扰\",{\"1\":{\"229\":1}}],[\"解析和\",{\"1\":{\"229\":1}}],[\"解析\",{\"0\":{\"137\":1},\"1\":{\"96\":1,\"139\":1,\"229\":5,\"241\":1,\"471\":1}}],[\"解\",{\"1\":{\"47\":3}}],[\"解数独\",{\"1\":{\"22\":1}}],[\"解3\",{\"1\":{\"7\":1,\"20\":1,\"74\":1}}],[\"解2\",{\"1\":{\"7\":2,\"15\":1,\"20\":2,\"36\":2,\"68\":2,\"74\":1}}],[\"解1\",{\"1\":{\"7\":3,\"15\":1,\"20\":4,\"36\":2,\"68\":1,\"74\":1}}],[\"记录\",{\"1\":{\"311\":1}}],[\"记录远端的description\",{\"1\":{\"278\":1}}],[\"记录在\",{\"1\":{\"165\":1}}],[\"记录前k大元素\",{\"1\":{\"57\":1}}],[\"记录局部最优子结构\",{\"1\":{\"24\":1}}],[\"记录已经放的位置\",{\"1\":{\"22\":1}}],[\"记录这一层一共需要多少次遍历\",{\"1\":{\"7\":1}}],[\"记录level\",{\"1\":{\"7\":1}}],[\"题目\",{\"0\":{\"7\":1,\"20\":1,\"22\":1,\"29\":1,\"36\":1,\"47\":1,\"68\":1,\"74\":1}}],[\"item\",{\"1\":{\"457\":3}}],[\"iterator\",{\"1\":{\"346\":1,\"419\":5}}],[\"it\",{\"1\":{\"419\":5,\"493\":2}}],[\"iife\",{\"0\":{\"363\":1},\"1\":{\"363\":3,\"480\":1}}],[\"i2\",{\"1\":{\"355\":4}}],[\"i1\",{\"1\":{\"355\":3}}],[\"i++\",{\"1\":{\"345\":1,\"364\":2,\"373\":3,\"374\":1,\"424\":1,\"465\":1,\"535\":1,\"541\":1}}],[\"iostat\",{\"1\":{\"297\":1}}],[\"io\",{\"1\":{\"280\":1,\"297\":1,\"310\":2}}],[\"ice使用stun进行打洞\",{\"1\":{\"276\":1}}],[\"ice使得两个nat后设备通信更加便捷\",{\"1\":{\"276\":1}}],[\"ice是一组穿透方法而不是协议\",{\"1\":{\"276\":1}}],[\"ice\",{\"0\":{\"276\":1},\"1\":{\"278\":1}}],[\"ignition\",{\"1\":{\"241\":1}}],[\"id变量\",{\"1\":{\"463\":1}}],[\"idx++\",{\"1\":{\"419\":1}}],[\"idx\",{\"1\":{\"419\":2}}],[\"idle\",{\"1\":{\"315\":1,\"317\":1}}],[\"id=$1\",{\"1\":{\"319\":1}}],[\"id=\",{\"1\":{\"305\":1,\"438\":1,\"546\":2}}],[\"id\",{\"1\":{\"201\":1,\"214\":1,\"463\":1}}],[\"ip\",{\"1\":{\"183\":2,\"229\":1,\"273\":1}}],[\"immutable\",{\"1\":{\"482\":1}}],[\"image\",{\"1\":{\"364\":2}}],[\"implements\",{\"1\":{\"355\":1}}],[\"imports\",{\"1\":{\"305\":1}}],[\"importmap\",{\"1\":{\"305\":1}}],[\"import\",{\"1\":{\"128\":1,\"129\":1,\"305\":3,\"307\":2,\"349\":1,\"430\":3,\"463\":1,\"464\":2,\"465\":2}}],[\"imgs\",{\"1\":{\"364\":6}}],[\"img\",{\"1\":{\"60\":1,\"364\":2}}],[\"ie\",{\"1\":{\"81\":1,\"82\":1}}],[\"isarray\",{\"1\":{\"423\":1}}],[\"isextensible\",{\"1\":{\"406\":1}}],[\"isendofword\",{\"1\":{\"26\":1}}],[\"issealed\",{\"1\":{\"406\":1}}],[\"issue\",{\"1\":{\"246\":1}}],[\"isfrozon\",{\"1\":{\"406\":1}}],[\"ispush\",{\"1\":{\"546\":2}}],[\"isprototypeof\",{\"1\":{\"423\":1}}],[\"isp\",{\"1\":{\"365\":1}}],[\"is\",{\"0\":{\"398\":1,\"400\":1},\"1\":{\"201\":1,\"278\":1,\"287\":1,\"363\":1,\"400\":5,\"424\":2}}],[\"isinputpending\",{\"1\":{\"171\":1,\"480\":1}}],[\"isvalid\",{\"1\":{\"47\":4}}],[\"isvalidbst\",{\"1\":{\"47\":1}}],[\"i−1\",{\"1\":{\"41\":1}}],[\"i\",{\"1\":{\"11\":3,\"20\":3,\"41\":1,\"280\":1,\"291\":1,\"315\":3,\"345\":2,\"364\":8,\"373\":9,\"374\":4,\"424\":15,\"444\":3,\"465\":3,\"483\":1,\"535\":3,\"541\":3}}],[\"include\",{\"1\":{\"540\":1}}],[\"incremental\",{\"0\":{\"386\":1},\"1\":{\"386\":2}}],[\"incrementing\",{\"1\":{\"345\":1}}],[\"invokeguardedcallback\",{\"1\":{\"478\":3}}],[\"iname\",{\"1\":{\"355\":2}}],[\"info\",{\"1\":{\"458\":1}}],[\"inference\",{\"0\":{\"352\":1}}],[\"infinity\",{\"1\":{\"47\":2}}],[\"instaa\",{\"1\":{\"355\":2}}],[\"instanceof\",{\"1\":{\"346\":1,\"423\":1}}],[\"install\",{\"0\":{\"327\":1},\"1\":{\"324\":1}}],[\"inspect\",{\"1\":{\"298\":2}}],[\"initprop\",{\"0\":{\"549\":1}}],[\"initprovide\",{\"1\":{\"548\":1}}],[\"initproxy\",{\"1\":{\"548\":2}}],[\"initstate\",{\"1\":{\"548\":1}}],[\"initinjections\",{\"1\":{\"548\":1}}],[\"initialarg\",{\"1\":{\"444\":1}}],[\"initialstate\",{\"1\":{\"443\":3,\"444\":2}}],[\"initialization\",{\"1\":{\"330\":1}}],[\"initialize\",{\"0\":{\"288\":1}}],[\"initialized\",{\"1\":{\"287\":1}}],[\"initial\",{\"1\":{\"89\":1,\"109\":1,\"450\":1}}],[\"initrender\",{\"1\":{\"548\":1}}],[\"initevents\",{\"1\":{\"548\":1}}],[\"initlifesycle\",{\"1\":{\"548\":1}}],[\"initmixin\",{\"1\":{\"548\":1}}],[\"initglobalapi\",{\"1\":{\"548\":2}}],[\"init\",{\"0\":{\"287\":1},\"1\":{\"252\":1,\"253\":1,\"262\":1,\"444\":1,\"548\":2}}],[\"indeterminatecomponent\",{\"1\":{\"476\":1}}],[\"independent\",{\"0\":{\"249\":1},\"1\":{\"248\":1}}],[\"indexeddb\",{\"1\":{\"163\":1,\"439\":1}}],[\"index\",{\"1\":{\"109\":1,\"185\":1,\"229\":1,\"235\":1,\"298\":2,\"338\":5,\"434\":1,\"472\":1,\"536\":1,\"537\":2}}],[\"inp\",{\"0\":{\"168\":1,\"170\":1},\"1\":{\"170\":1}}],[\"input\",{\"0\":{\"168\":1},\"1\":{\"165\":2,\"204\":1,\"432\":1}}],[\"inject\",{\"1\":{\"103\":1}}],[\"inline\",{\"0\":{\"89\":1},\"1\":{\"88\":4,\"89\":2,\"90\":2}}],[\"innerhtml\",{\"1\":{\"364\":2,\"546\":1}}],[\"innerheight\",{\"1\":{\"81\":1}}],[\"inner\",{\"1\":{\"363\":1}}],[\"innerwidth\",{\"1\":{\"81\":1}}],[\"inorder\",{\"1\":{\"47\":4}}],[\"in\",{\"0\":{\"260\":1,\"415\":1},\"1\":{\"6\":1,\"10\":1,\"47\":1,\"370\":1,\"421\":3}}],[\"internalroot\",{\"1\":{\"475\":1}}],[\"interface\",{\"0\":{\"354\":1},\"1\":{\"355\":3}}],[\"interaction\",{\"0\":{\"170\":1}}],[\"interactive\",{\"1\":{\"165\":2}}],[\"int64\",{\"1\":{\"1\":1}}],[\"int16\",{\"1\":{\"1\":1}}],[\"int8array\",{\"1\":{\"410\":1}}],[\"int8\",{\"1\":{\"1\":1}}],[\"int\",{\"1\":{\"1\":1}}],[\"int32\",{\"1\":{\"1\":2}}],[\"iframe>\",{\"1\":{\"438\":1}}],[\"iframe\",{\"0\":{\"438\":1},\"1\":{\"143\":2,\"209\":1,\"220\":1,\"265\":1,\"438\":1}}],[\"if\",{\"1\":{\"6\":1,\"15\":2,\"20\":1,\"24\":1,\"36\":2,\"47\":5,\"66\":2,\"71\":1,\"73\":1,\"74\":3,\"84\":1,\"125\":3,\"192\":2,\"343\":1,\"345\":1,\"356\":1,\"361\":3,\"363\":1,\"397\":1,\"424\":1,\"429\":1,\"437\":2,\"458\":1,\"465\":2,\"475\":1,\"480\":1,\"483\":2,\"493\":1,\"529\":1,\"541\":6,\"546\":2,\"548\":2}}],[\"observe\",{\"1\":{\"541\":1,\"547\":2}}],[\"observers\",{\"1\":{\"488\":3}}],[\"observer\",{\"1\":{\"486\":1,\"488\":4,\"541\":2}}],[\"obsercer\",{\"1\":{\"488\":1}}],[\"obj还是同一个引用\",{\"1\":{\"534\":1}}],[\"obj\",{\"1\":{\"390\":2,\"397\":3,\"419\":3,\"423\":2,\"534\":3}}],[\"obj1\",{\"1\":{\"389\":2}}],[\"objects\",{\"1\":{\"351\":1,\"352\":1}}],[\"object\",{\"0\":{\"398\":1,\"400\":1,\"416\":3,\"417\":2,\"423\":1},\"1\":{\"227\":1,\"354\":1,\"370\":1,\"396\":3,\"397\":2,\"398\":2,\"400\":5,\"401\":13,\"406\":4,\"407\":1,\"419\":2,\"421\":4,\"423\":7,\"489\":1}}],[\"ownkeys\",{\"0\":{\"418\":1},\"1\":{\"421\":1}}],[\"outlet\",{\"1\":{\"463\":1}}],[\"outer\",{\"1\":{\"363\":1}}],[\"out\",{\"1\":{\"336\":1}}],[\"output\",{\"1\":{\"109\":1}}],[\"oy4nraq13jhfonc7bp8dtkb4ptu=\",{\"1\":{\"200\":1}}],[\"other\",{\"0\":{\"191\":1},\"1\":{\"207\":1}}],[\"overflow\",{\"1\":{\"90\":1,\"239\":1}}],[\"opacity\",{\"1\":{\"229\":1,\"239\":1}}],[\"opener\",{\"1\":{\"207\":1,\"437\":2}}],[\"open\",{\"0\":{\"437\":1},\"1\":{\"84\":1,\"162\":1,\"437\":2}}],[\"options\",{\"1\":{\"184\":1,\"204\":1,\"215\":1,\"221\":1,\"548\":2}}],[\"optimization\",{\"1\":{\"109\":1,\"348\":1}}],[\"optimal\",{\"1\":{\"12\":1}}],[\"optinl\",{\"1\":{\"23\":1}}],[\"opt\",{\"1\":{\"23\":3}}],[\"or\",{\"1\":{\"438\":1}}],[\"origin\",{\"0\":{\"184\":1},\"1\":{\"76\":1,\"182\":1,\"184\":3,\"200\":2,\"203\":1,\"213\":1,\"217\":2,\"221\":1,\"437\":2}}],[\"order\",{\"1\":{\"10\":3,\"47\":1}}],[\"once\",{\"1\":{\"493\":1}}],[\"onclick=\",{\"1\":{\"465\":1,\"496\":1,\"537\":2}}],[\"onclick\",{\"1\":{\"102\":1}}],[\"ontrack收到对方流\",{\"1\":{\"278\":1}}],[\"ontimeout\",{\"1\":{\"84\":1}}],[\"onicecandidate事件\",{\"1\":{\"278\":1}}],[\"onload\",{\"1\":{\"235\":1}}],[\"onerror\",{\"1\":{\"201\":1,\"220\":2,\"221\":2}}],[\"onopen\",{\"1\":{\"201\":1}}],[\"onstorage\",{\"1\":{\"163\":1}}],[\"onmessage\",{\"1\":{\"162\":1,\"201\":1,\"480\":1}}],[\"onreadystatuschange=\",{\"1\":{\"84\":1}}],[\"on$\",{\"1\":{\"82\":1}}],[\"onpopstate\",{\"1\":{\"79\":1}}],[\"on\",{\"1\":{\"61\":1,\"225\":2,\"293\":2,\"309\":2,\"315\":1}}],[\"o\",{\"0\":{\"42\":5},\"1\":{\"7\":5,\"11\":2,\"12\":5,\"36\":4,\"43\":2,\"47\":3,\"50\":2,\"51\":2,\"57\":8,\"68\":3,\"74\":3,\"280\":1,\"291\":1,\"315\":3}}],[\"of使用\",{\"1\":{\"346\":1}}],[\"offer\",{\"1\":{\"278\":2}}],[\"offset\",{\"1\":{\"87\":1}}],[\"offsettop\",{\"1\":{\"81\":1}}],[\"offsetleft\",{\"1\":{\"81\":1}}],[\"offsetwidth\",{\"1\":{\"81\":1}}],[\"of\",{\"0\":{\"419\":1},\"1\":{\"6\":1,\"23\":1,\"345\":2,\"346\":1}}],[\"os\",{\"1\":{\"1\":1}}],[\"num=\",{\"1\":{\"529\":1,\"530\":1,\"532\":1}}],[\"number\",{\"1\":{\"351\":1,\"353\":2,\"355\":5,\"356\":1,\"398\":3,\"406\":4,\"412\":2}}],[\"num\",{\"1\":{\"345\":2,\"529\":6,\"530\":3,\"532\":3,\"534\":1}}],[\"null\",{\"1\":{\"47\":3,\"351\":1,\"398\":2,\"401\":2,\"406\":4,\"443\":4,\"447\":2,\"465\":1,\"475\":3,\"476\":1,\"478\":3,\"501\":1,\"541\":1,\"546\":2}}],[\"n1600\",{\"1\":{\"297\":1}}],[\"npx\",{\"1\":{\"262\":1}}],[\"npm\",{\"0\":{\"160\":1},\"1\":{\"160\":1,\"258\":1,\"265\":1}}],[\"nginx\",{\"0\":{\"319\":1},\"1\":{\"185\":1,\"318\":1,\"319\":2,\"365\":1,\"544\":1}}],[\"nofify\",{\"1\":{\"488\":1,\"547\":1}}],[\"nodify\",{\"1\":{\"488\":1}}],[\"node中的buffer模块\",{\"0\":{\"281\":1}}],[\"nodejs\",{\"0\":{\"225\":1,\"298\":1},\"1\":{\"225\":1,\"280\":1,\"288\":1,\"291\":1,\"296\":1,\"301\":4,\"312\":1,\"315\":1,\"551\":1}}],[\"node\",{\"0\":{\"284\":1,\"290\":1,\"314\":1,\"432\":1},\"1\":{\"4\":4,\"6\":7,\"109\":1,\"158\":3,\"159\":3,\"246\":1,\"269\":1,\"287\":2,\"298\":3,\"303\":2,\"310\":1,\"315\":1,\"319\":2,\"432\":1,\"434\":1,\"447\":2,\"548\":1}}],[\"now\",{\"1\":{\"480\":2}}],[\"nomodule>可以判断兼容\",{\"1\":{\"431\":1}}],[\"noboundle\",{\"0\":{\"258\":1}}],[\"noopner\",{\"1\":{\"207\":1}}],[\"noopener\",{\"0\":{\"205\":1,\"207\":1},\"1\":{\"207\":1}}],[\"not\",{\"0\":{\"192\":1,\"198\":1},\"1\":{\"363\":1,\"397\":1}}],[\"notify\",{\"1\":{\"102\":1,\"488\":1}}],[\"noreferer\",{\"0\":{\"205\":1,\"206\":1},\"1\":{\"182\":2,\"206\":2}}],[\"none\",{\"1\":{\"125\":1,\"192\":1,\"229\":1}}],[\"no\",{\"1\":{\"123\":1,\"124\":2,\"201\":1}}],[\"n分奇偶\",{\"1\":{\"74\":1}}],[\"n次幂\",{\"1\":{\"74\":1}}],[\"net\",{\"0\":{\"293\":1},\"1\":{\"280\":1,\"293\":2}}],[\"nextstate\",{\"1\":{\"489\":3}}],[\"nextconsole\",{\"1\":{\"483\":8}}],[\"nexteffect\",{\"1\":{\"472\":1}}],[\"nexttick\",{\"1\":{\"291\":2,\"315\":1,\"539\":1,\"541\":1}}],[\"next\",{\"0\":{\"170\":1},\"1\":{\"226\":1,\"419\":5,\"443\":1,\"458\":1,\"475\":3,\"487\":3,\"492\":1,\"493\":9}}],[\"nextnode\",{\"1\":{\"6\":3}}],[\"newoperator\",{\"1\":{\"397\":1}}],[\"newvalue\",{\"1\":{\"227\":2,\"450\":1}}],[\"new\",{\"0\":{\"397\":1},\"1\":{\"60\":1,\"71\":1,\"84\":1,\"109\":3,\"114\":2,\"201\":2,\"225\":1,\"271\":1,\"293\":1,\"336\":3,\"340\":5,\"342\":1,\"344\":2,\"355\":2,\"369\":3,\"372\":2,\"373\":6,\"374\":4,\"465\":1,\"475\":1,\"480\":1,\"541\":3,\"546\":1}}],[\"nlogk\",{\"1\":{\"57\":2}}],[\"nlogn+n\",{\"1\":{\"74\":1}}],[\"nlogn\",{\"1\":{\"11\":1,\"12\":1,\"36\":2,\"43\":1,\"57\":1,\"74\":1}}],[\"n∗\",{\"1\":{\"57\":1}}],[\"n∗klogk\",{\"1\":{\"57\":1}}],[\"n=2\",{\"1\":{\"23\":1}}],[\"n皇后\",{\"1\":{\"22\":1}}],[\"navigationcontext\",{\"1\":{\"465\":5}}],[\"navigatortype=\",{\"1\":{\"465\":1}}],[\"navigator=\",{\"1\":{\"465\":1}}],[\"navigator\",{\"0\":{\"80\":1},\"1\":{\"80\":2,\"465\":3,\"480\":1}}],[\"nav\",{\"1\":{\"463\":2,\"465\":2}}],[\"nan\",{\"1\":{\"398\":2,\"400\":3}}],[\"nat会话穿越应用程序\",{\"1\":{\"274\":1}}],[\"nat\",{\"1\":{\"274\":1,\"275\":1}}],[\"names\",{\"1\":{\"418\":1}}],[\"name而不影响\",{\"1\":{\"394\":1}}],[\"name>\",{\"1\":{\"251\":2}}],[\"name=conardli\",{\"1\":{\"209\":1}}],[\"name\",{\"1\":{\"109\":3,\"185\":2,\"261\":1,\"355\":7,\"369\":3,\"372\":2,\"392\":3,\"393\":2,\"394\":6,\"496\":2}}],[\"na\",{\"1\":{\"20\":4}}],[\"n2\",{\"1\":{\"11\":1,\"36\":2}}],[\"n括号\",{\"1\":{\"7\":1}}],[\"n\",{\"0\":{\"42\":2},\"1\":{\"7\":4,\"11\":1,\"12\":11,\"20\":6,\"23\":4,\"24\":5,\"34\":1,\"36\":2,\"43\":1,\"47\":3,\"50\":2,\"51\":1,\"57\":1,\"68\":2,\"74\":8,\"297\":1}}],[\"ctx\",{\"1\":{\"541\":3}}],[\"custom\",{\"1\":{\"460\":1,\"461\":1}}],[\"current↓\",{\"1\":{\"475\":1}}],[\"current\",{\"1\":{\"442\":6,\"465\":3,\"469\":1,\"472\":2,\"475\":3,\"476\":3,\"478\":1,\"537\":2}}],[\"curve\",{\"1\":{\"179\":1}}],[\"cjs\",{\"0\":{\"434\":1},\"1\":{\"427\":1,\"430\":1}}],[\"ccc\",{\"1\":{\"373\":1}}],[\"cycle\",{\"1\":{\"341\":1}}],[\"c++库提供\",{\"1\":{\"310\":1}}],[\"c++变量和\",{\"1\":{\"303\":1}}],[\"c++\",{\"1\":{\"303\":2}}],[\"c++插件加速运行\",{\"0\":{\"303\":1}}],[\"c200\",{\"1\":{\"297\":1}}],[\"cwd\",{\"1\":{\"291\":1}}],[\"cpuusage\",{\"1\":{\"290\":1,\"291\":1}}],[\"cpu\",{\"1\":{\"280\":1,\"291\":1,\"297\":2,\"298\":1,\"375\":2}}],[\"csp\",{\"1\":{\"204\":1}}],[\"csrf\",{\"0\":{\"203\":1},\"1\":{\"203\":1}}],[\"css$\",{\"1\":{\"261\":1}}],[\"cssfilters\",{\"1\":{\"240\":1}}],[\"cssom\",{\"1\":{\"229\":1,\"230\":1,\"232\":1,\"241\":1,\"375\":1}}],[\"cssnano\",{\"1\":{\"129\":1}}],[\"cssminimizerplugin\",{\"1\":{\"109\":1}}],[\"css\",{\"0\":{\"86\":1,\"138\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":1},\"1\":{\"99\":1,\"128\":1,\"129\":2,\"138\":1,\"140\":3,\"143\":1,\"166\":1,\"167\":2,\"171\":3,\"229\":9,\"230\":1,\"234\":1,\"239\":1,\"240\":4,\"241\":1,\"254\":3,\"260\":1,\"261\":3,\"264\":1,\"348\":1,\"365\":2,\"375\":1}}],[\"cross\",{\"1\":{\"254\":1}}],[\"crossorigin=\",{\"1\":{\"222\":2}}],[\"crossorigin\",{\"0\":{\"222\":1},\"1\":{\"220\":1,\"221\":1}}],[\"creatserver\",{\"1\":{\"293\":1}}],[\"created\",{\"1\":{\"548\":1}}],[\"createtextnode\",{\"1\":{\"541\":1}}],[\"createtextinstance\",{\"1\":{\"460\":1}}],[\"createhostrootfiber\",{\"1\":{\"475\":1}}],[\"createfiberroot\",{\"1\":{\"475\":1}}],[\"createelement\",{\"1\":{\"471\":1,\"515\":1}}],[\"createroutesfromchildren\",{\"1\":{\"465\":3}}],[\"createrenderer\",{\"1\":{\"461\":1}}],[\"createref\",{\"1\":{\"448\":1}}],[\"createreadstream\",{\"1\":{\"309\":1}}],[\"createbrowserhistory\",{\"1\":{\"465\":2}}],[\"createinstance\",{\"1\":{\"460\":2,\"477\":1}}],[\"createcontext\",{\"1\":{\"450\":1,\"465\":3}}],[\"create\",{\"1\":{\"396\":2,\"397\":1}}],[\"createapp\",{\"1\":{\"305\":5,\"307\":1}}],[\"createanswer\",{\"1\":{\"278\":1}}],[\"createsagamiddleware\",{\"1\":{\"493\":1}}],[\"createstore\",{\"1\":{\"307\":2,\"486\":1,\"487\":4}}],[\"createssrapp\",{\"1\":{\"305\":2,\"307\":2}}],[\"createserver\",{\"1\":{\"270\":1,\"271\":1}}],[\"createoffer\",{\"1\":{\"278\":1}}],[\"createobjecturl\",{\"1\":{\"114\":1}}],[\"credentials\",{\"1\":{\"217\":2,\"222\":1}}],[\"crime\",{\"1\":{\"131\":1}}],[\"cdn\",{\"1\":{\"121\":1,\"167\":1,\"365\":1}}],[\"check\",{\"1\":{\"315\":1}}],[\"cheney\",{\"1\":{\"300\":1,\"376\":1,\"379\":1}}],[\"cheap\",{\"1\":{\"109\":1}}],[\"chdir\",{\"1\":{\"291\":1}}],[\"chipschips\",{\"1\":{\"209\":1}}],[\"chips\",{\"0\":{\"209\":1},\"1\":{\"209\":1}}],[\"childlanes\",{\"1\":{\"472\":1}}],[\"childcomp\",{\"1\":{\"450\":1,\"529\":5,\"530\":2}}],[\"child2\",{\"1\":{\"450\":1}}],[\"child1\",{\"1\":{\"450\":1}}],[\"childmethod1\",{\"1\":{\"449\":2}}],[\"childiframe\",{\"1\":{\"438\":4}}],[\"childwin\",{\"1\":{\"437\":2}}],[\"child\",{\"1\":{\"396\":7,\"437\":2,\"438\":1,\"449\":1,\"457\":2,\"465\":2,\"472\":1,\"476\":1,\"501\":1,\"529\":1,\"530\":3}}],[\"children=\",{\"1\":{\"465\":1}}],[\"children\",{\"1\":{\"4\":1,\"6\":1,\"442\":2,\"458\":1,\"465\":17,\"471\":1}}],[\"childrenwovisited\",{\"1\":{\"4\":2,\"6\":2}}],[\"chilren\",{\"1\":{\"4\":1,\"6\":2}}],[\"characterdata\",{\"1\":{\"541\":1}}],[\"charset=utf\",{\"1\":{\"201\":1,\"214\":1}}],[\"chaining\",{\"1\":{\"341\":1}}],[\"change\",{\"1\":{\"229\":1}}],[\"chat\",{\"1\":{\"200\":1}}],[\"chrome\",{\"1\":{\"201\":1,\"210\":4,\"221\":1,\"298\":2,\"302\":1,\"366\":1}}],[\"chunk\",{\"1\":{\"309\":3,\"345\":2}}],[\"chunked\",{\"1\":{\"201\":1}}],[\"chunkhash\",{\"1\":{\"110\":1}}],[\"chunksplit\",{\"1\":{\"167\":1}}],[\"chunks\",{\"1\":{\"109\":2}}],[\"cb\",{\"1\":{\"102\":1,\"541\":4}}],[\"cloneelement\",{\"1\":{\"529\":1}}],[\"closing\",{\"1\":{\"176\":1}}],[\"closed\",{\"1\":{\"176\":1}}],[\"close\",{\"1\":{\"176\":1,\"201\":1,\"278\":1,\"315\":2,\"437\":1}}],[\"clases\",{\"0\":{\"355\":1}}],[\"classcomponent\",{\"1\":{\"476\":1}}],[\"classname\",{\"1\":{\"355\":2,\"471\":1}}],[\"classes\",{\"1\":{\"351\":1}}],[\"class\",{\"1\":{\"227\":2,\"261\":1,\"355\":9,\"367\":1,\"392\":1,\"393\":1,\"394\":1,\"450\":1,\"456\":1,\"458\":1,\"488\":1,\"490\":1,\"529\":1,\"530\":1,\"534\":1,\"546\":1}}],[\"clean\",{\"1\":{\"109\":1}}],[\"cls\",{\"0\":{\"169\":1},\"1\":{\"88\":1,\"165\":1,\"169\":1}}],[\"clinic\",{\"1\":{\"298\":1}}],[\"cli\",{\"1\":{\"254\":1}}],[\"clickhandler\",{\"1\":{\"465\":2,\"534\":1}}],[\"click=\",{\"1\":{\"305\":1,\"536\":1}}],[\"click\",{\"1\":{\"102\":1,\"546\":1}}],[\"client\",{\"1\":{\"87\":1,\"179\":4,\"180\":5,\"305\":3}}],[\"clientheight\",{\"1\":{\"81\":1}}],[\"clientwidth\",{\"1\":{\"81\":2}}],[\"clipboard\",{\"1\":{\"80\":1}}],[\"ceil\",{\"1\":{\"47\":3}}],[\"c是需要的\",{\"1\":{\"36\":1}}],[\"c\",{\"1\":{\"36\":3,\"168\":1,\"209\":7,\"297\":1,\"332\":4,\"373\":4,\"390\":3,\"419\":1}}],[\"c<logb​a\",{\"1\":{\"12\":1}}],[\"c=1\",{\"1\":{\"12\":1}}],[\"c=0\",{\"1\":{\"12\":2}}],[\"c=logb​a\",{\"1\":{\"12\":2}}],[\"callhook\",{\"1\":{\"548\":2}}],[\"call\",{\"1\":{\"311\":2,\"390\":3,\"396\":1,\"423\":2,\"493\":2,\"541\":1}}],[\"callstack\",{\"1\":{\"311\":1}}],[\"callbacks\",{\"1\":{\"315\":2,\"541\":4}}],[\"callback\",{\"0\":{\"447\":1},\"1\":{\"61\":1,\"103\":1,\"221\":1,\"311\":2,\"447\":7}}],[\"cast\",{\"0\":{\"287\":1}}],[\"case\",{\"1\":{\"12\":3,\"457\":3,\"476\":4,\"493\":4}}],[\"cannot\",{\"1\":{\"330\":1,\"433\":1,\"448\":1}}],[\"candidate成功连接peerconnection\",{\"1\":{\"278\":1}}],[\"candidates\",{\"1\":{\"278\":1}}],[\"candidate\",{\"1\":{\"278\":1}}],[\"canvasa\",{\"1\":{\"461\":1}}],[\"canvas2d\",{\"1\":{\"240\":1}}],[\"canvas\",{\"0\":{\"91\":1,\"93\":1},\"1\":{\"93\":1,\"97\":1,\"99\":1,\"143\":6,\"239\":1}}],[\"captcha\",{\"1\":{\"203\":1}}],[\"camera\",{\"1\":{\"94\":1}}],[\"catch\",{\"0\":{\"227\":1},\"1\":{\"66\":1,\"220\":2,\"221\":4,\"225\":1,\"227\":3,\"336\":1,\"338\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"356\":1}}],[\"cachestorage\",{\"1\":{\"122\":1}}],[\"cachegroups\",{\"1\":{\"109\":1}}],[\"cache\",{\"1\":{\"9\":2,\"122\":4,\"123\":2,\"124\":5,\"141\":1,\"169\":2,\"185\":1,\"201\":2,\"319\":1,\"428\":1,\"540\":1}}],[\"copies\",{\"1\":{\"541\":3}}],[\"course\",{\"1\":{\"392\":1,\"393\":1}}],[\"counter\",{\"1\":{\"541\":5}}],[\"countref\",{\"1\":{\"537\":3}}],[\"count++\",{\"1\":{\"305\":1}}],[\"count\",{\"1\":{\"20\":4,\"102\":1,\"305\":2,\"355\":2,\"491\":1,\"536\":7,\"537\":9}}],[\"core\",{\"1\":{\"254\":1,\"394\":6,\"461\":1}}],[\"cors\",{\"0\":{\"213\":1},\"1\":{\"184\":1,\"203\":1,\"431\":1}}],[\"cookie等请求首部会照常发送\",{\"1\":{\"200\":1}}],[\"cookie\",{\"0\":{\"208\":1},\"1\":{\"135\":5,\"203\":3,\"204\":2,\"209\":12,\"210\":2,\"222\":2,\"439\":1}}],[\"codesplit\",{\"1\":{\"128\":1}}],[\"code\",{\"1\":{\"71\":1,\"114\":2,\"265\":1}}],[\"colno\",{\"1\":{\"221\":1}}],[\"columns\",{\"1\":{\"144\":1}}],[\"col\",{\"1\":{\"20\":5}}],[\"comfn\",{\"1\":{\"496\":3}}],[\"combinereducer\",{\"0\":{\"489\":1},\"1\":{\"489\":1}}],[\"commitlayouteffects\",{\"1\":{\"478\":1}}],[\"commitmutationeffects\",{\"1\":{\"478\":1}}],[\"commitbeforemutationeffects\",{\"1\":{\"478\":1}}],[\"commitupdate\",{\"1\":{\"460\":1}}],[\"commitwork\",{\"0\":{\"478\":1},\"1\":{\"460\":1,\"473\":1,\"475\":1,\"478\":1}}],[\"commit\",{\"1\":{\"442\":1,\"451\":1}}],[\"commonjs\",{\"0\":{\"427\":1},\"1\":{\"257\":1,\"427\":1,\"434\":2}}],[\"commons\",{\"1\":{\"109\":2}}],[\"comment\",{\"1\":{\"12\":1}}],[\"compct\",{\"1\":{\"384\":1,\"385\":1}}],[\"compaction\",{\"1\":{\"386\":1}}],[\"compact\",{\"0\":{\"385\":1},\"1\":{\"383\":1,\"385\":1}}],[\"completeunitofwork\",{\"1\":{\"475\":1}}],[\"completework\",{\"0\":{\"477\":1},\"1\":{\"460\":1,\"473\":1}}],[\"complete\",{\"1\":{\"364\":2,\"460\":2}}],[\"complex\",{\"1\":{\"1\":1}}],[\"complex64\",{\"1\":{\"1\":1}}],[\"compose\",{\"0\":{\"483\":1},\"1\":{\"261\":1,\"483\":2,\"487\":1}}],[\"compositelayer\",{\"0\":{\"240\":1}}],[\"componentwillunmount\",{\"0\":{\"519\":1},\"1\":{\"522\":1,\"524\":1}}],[\"componentwillupdate\",{\"0\":{\"514\":1},\"1\":{\"523\":1,\"524\":1}}],[\"componentwillreceiveprops\",{\"0\":{\"511\":1},\"1\":{\"523\":1,\"524\":1}}],[\"componentwillmount\",{\"0\":{\"507\":1},\"1\":{\"523\":1}}],[\"componentdidupdate\",{\"0\":{\"517\":1},\"1\":{\"478\":1,\"516\":1,\"522\":1,\"524\":1}}],[\"componentdidmount\",{\"0\":{\"509\":1},\"1\":{\"456\":1,\"490\":2,\"524\":1}}],[\"componentdidcatch\",{\"0\":{\"521\":1},\"1\":{\"220\":1,\"224\":1,\"458\":2}}],[\"components\",{\"1\":{\"265\":1,\"448\":1,\"490\":1}}],[\"component\",{\"1\":{\"260\":1,\"296\":1,\"442\":1,\"450\":1,\"456\":2,\"458\":1,\"490\":2,\"495\":1,\"529\":2,\"530\":1}}],[\"compressionplugin\",{\"1\":{\"128\":1}}],[\"compress\",{\"1\":{\"109\":1}}],[\"computed\",{\"1\":{\"548\":1}}],[\"compute\",{\"1\":{\"97\":1}}],[\"com\",{\"1\":{\"76\":1,\"119\":1,\"120\":1,\"169\":1,\"183\":1,\"184\":1,\"185\":1,\"210\":2,\"319\":2,\"365\":1}}],[\"concurrent\",{\"1\":{\"297\":1,\"468\":2}}],[\"concatenatemode\",{\"1\":{\"128\":1,\"129\":1}}],[\"connnect\",{\"1\":{\"293\":1}}],[\"connection\",{\"1\":{\"200\":3,\"201\":3,\"278\":1}}],[\"connect\",{\"1\":{\"106\":1,\"490\":5}}],[\"continue\",{\"1\":{\"424\":1}}],[\"containerinfo\",{\"1\":{\"475\":4}}],[\"container\",{\"1\":{\"475\":3}}],[\"containing\",{\"1\":{\"229\":1}}],[\"contain\",{\"1\":{\"171\":1}}],[\"containment\",{\"1\":{\"171\":1}}],[\"controlchildrender\",{\"1\":{\"529\":2}}],[\"control\",{\"1\":{\"123\":1,\"124\":2,\"184\":1,\"201\":1,\"213\":1,\"216\":2,\"217\":9,\"218\":1,\"221\":1}}],[\"contexttype\",{\"1\":{\"450\":1,\"490\":1}}],[\"context\",{\"0\":{\"450\":1},\"1\":{\"103\":1,\"111\":2,\"229\":1,\"450\":1,\"490\":4,\"493\":2,\"543\":1}}],[\"contentwindow\",{\"1\":{\"438\":1}}],[\"contentful\",{\"1\":{\"165\":2}}],[\"contenthash\",{\"1\":{\"110\":1,\"128\":1}}],[\"content\",{\"1\":{\"88\":3,\"171\":1,\"201\":1,\"204\":1,\"214\":4,\"546\":2}}],[\"consumer>\",{\"1\":{\"450\":2}}],[\"cons\",{\"1\":{\"143\":2,\"499\":1}}],[\"console3结束\",{\"1\":{\"483\":4}}],[\"console3开始\",{\"1\":{\"483\":4}}],[\"console3\",{\"1\":{\"483\":4}}],[\"console2结束\",{\"1\":{\"483\":4}}],[\"console2开始\",{\"1\":{\"483\":4}}],[\"console2\",{\"1\":{\"483\":4}}],[\"console1结束\",{\"1\":{\"483\":4}}],[\"console1开始\",{\"1\":{\"483\":4}}],[\"console1\",{\"1\":{\"483\":5}}],[\"console\",{\"0\":{\"375\":1},\"1\":{\"109\":2,\"201\":3,\"270\":1,\"271\":2,\"295\":1,\"309\":1,\"330\":2,\"338\":1,\"339\":7,\"340\":9,\"341\":1,\"342\":7,\"345\":1,\"355\":1,\"360\":4,\"361\":7,\"363\":6,\"375\":1,\"389\":4,\"390\":1,\"419\":4,\"424\":1,\"437\":1,\"483\":21,\"487\":1,\"496\":2,\"524\":5,\"535\":1,\"536\":1,\"537\":2}}],[\"constructo\",{\"1\":{\"401\":1}}],[\"constructor\",{\"0\":{\"505\":1},\"1\":{\"355\":6,\"392\":1,\"393\":1,\"394\":1,\"396\":3,\"397\":1,\"401\":10,\"423\":3,\"488\":1,\"529\":1,\"530\":1,\"534\":1}}],[\"const\",{\"0\":{\"287\":1},\"1\":{\"4\":4,\"6\":5,\"15\":1,\"20\":2,\"36\":1,\"84\":1,\"114\":3,\"221\":1,\"227\":5,\"270\":1,\"271\":5,\"293\":2,\"295\":1,\"305\":1,\"307\":2,\"309\":2,\"336\":1,\"337\":1,\"341\":1,\"345\":3,\"353\":2,\"356\":1,\"364\":1,\"389\":1,\"390\":1,\"393\":1,\"397\":2,\"419\":1,\"429\":5,\"437\":1,\"438\":1,\"443\":3,\"444\":3,\"449\":4,\"450\":5,\"456\":1,\"457\":4,\"463\":5,\"464\":1,\"465\":22,\"471\":1,\"472\":1,\"475\":1,\"480\":5,\"483\":2,\"487\":5,\"488\":1,\"489\":2,\"490\":1,\"491\":2,\"493\":3,\"496\":2,\"501\":1,\"529\":2,\"530\":1,\"532\":3,\"536\":1,\"537\":3,\"541\":4,\"546\":3}}],[\"conpress\",{\"1\":{\"109\":1}}],[\"configurable\",{\"1\":{\"408\":1,\"409\":1,\"419\":1}}],[\"configure\",{\"0\":{\"325\":1},\"1\":{\"324\":1,\"325\":4,\"326\":1}}],[\"config=\",{\"1\":{\"325\":1}}],[\"config\",{\"0\":{\"109\":1},\"1\":{\"111\":1,\"223\":1}}],[\"conquer\",{\"1\":{\"10\":1}}],[\"p>\",{\"1\":{\"496\":1}}],[\"pepsi\",{\"1\":{\"353\":2}}],[\"pendingprops\",{\"1\":{\"472\":1}}],[\"pendingqueue\",{\"1\":{\"444\":1}}],[\"pending\",{\"1\":{\"337\":1,\"443\":5,\"457\":2,\"541\":5}}],[\"pendingstate\",{\"1\":{\"337\":3}}],[\"peerconnection\",{\"1\":{\"278\":1}}],[\"performance\",{\"1\":{\"480\":2}}],[\"performunitofwork\",{\"1\":{\"475\":4,\"480\":2}}],[\"performsyncworkonroot\",{\"1\":{\"475\":2}}],[\"per\",{\"1\":{\"297\":3}}],[\"permanent\",{\"0\":{\"194\":1}}],[\"permanently\",{\"0\":{\"189\":1}}],[\"perspectivecamera\",{\"1\":{\"94\":1}}],[\"pnppm\",{\"0\":{\"251\":1}}],[\"pnpm\",{\"0\":{\"159\":1},\"1\":{\"159\":2,\"251\":3,\"254\":1,\"255\":1}}],[\"px\",{\"1\":{\"229\":1}}],[\"placement\",{\"1\":{\"460\":1}}],[\"platforminit\",{\"0\":{\"285\":1}}],[\"plain\",{\"1\":{\"214\":1}}],[\"plugin\",{\"1\":{\"111\":2,\"128\":1,\"129\":1,\"252\":2,\"254\":4}}],[\"plugins\",{\"1\":{\"109\":1,\"254\":1}}],[\"pipe\",{\"1\":{\"309\":1}}],[\"pipeline\",{\"1\":{\"186\":1}}],[\"pic\",{\"1\":{\"169\":1}}],[\"pie\",{\"1\":{\"20\":5}}],[\"put就直接派发action\",{\"1\":{\"493\":1}}],[\"put\",{\"1\":{\"184\":1,\"191\":1,\"214\":1,\"217\":1,\"493\":2}}],[\"purecomp\",{\"1\":{\"534\":1}}],[\"purecomponent\",{\"0\":{\"534\":1},\"1\":{\"533\":1,\"534\":1}}],[\"pure\",{\"1\":{\"109\":1,\"534\":2}}],[\"public\",{\"1\":{\"109\":1,\"124\":2,\"355\":2}}],[\"publicpath\",{\"1\":{\"109\":1}}],[\"push到一个队列里异步执行\",{\"1\":{\"478\":1}}],[\"pushstate\",{\"1\":{\"77\":1,\"79\":1,\"545\":1,\"546\":1}}],[\"push\",{\"1\":{\"4\":3,\"6\":3,\"122\":1,\"133\":1,\"365\":1,\"465\":2,\"480\":2,\"486\":1,\"488\":1,\"541\":1}}],[\"page\",{\"1\":{\"546\":3}}],[\"pagelets\",{\"1\":{\"173\":1}}],[\"parse\",{\"1\":{\"352\":1}}],[\"parser\",{\"1\":{\"252\":1}}],[\"parent\",{\"1\":{\"227\":1,\"396\":4,\"437\":1,\"438\":5,\"449\":1,\"450\":1,\"529\":1,\"530\":1,\"532\":1}}],[\"party\",{\"0\":{\"210\":1}}],[\"partitioned\",{\"1\":{\"209\":3}}],[\"params\",{\"1\":{\"179\":4,\"180\":7,\"487\":2}}],[\"parallel\",{\"1\":{\"109\":1}}],[\"pass\",{\"1\":{\"185\":1,\"319\":1}}],[\"patch\",{\"1\":{\"184\":1,\"214\":1}}],[\"path=\",{\"1\":{\"209\":1,\"463\":3,\"464\":1}}],[\"path\",{\"1\":{\"109\":4,\"261\":1,\"271\":1,\"319\":1,\"465\":4,\"543\":2,\"544\":1,\"546\":5}}],[\"pathname\",{\"1\":{\"76\":1,\"465\":2,\"546\":1}}],[\"payload\",{\"1\":{\"493\":1}}],[\"pay\",{\"1\":{\"183\":1}}],[\"paint\",{\"0\":{\"170\":1},\"1\":{\"165\":3,\"235\":2}}],[\"package>\",{\"1\":{\"251\":1}}],[\"packages\",{\"1\":{\"251\":2}}],[\"package\",{\"1\":{\"159\":1,\"348\":1,\"432\":1}}],[\"padding\",{\"1\":{\"88\":3,\"90\":3}}],[\"pq\",{\"1\":{\"47\":2}}],[\"p\",{\"1\":{\"20\":6,\"47\":1,\"185\":1}}],[\"p=1\",{\"1\":{\"12\":1}}],[\"poroto\",{\"1\":{\"372\":1}}],[\"port2\",{\"1\":{\"480\":2}}],[\"port1\",{\"1\":{\"480\":2}}],[\"port\",{\"1\":{\"76\":1,\"271\":1,\"293\":1,\"439\":1}}],[\"pointer\",{\"1\":{\"368\":1,\"369\":1}}],[\"pointlight\",{\"1\":{\"94\":1}}],[\"poll\",{\"1\":{\"315\":2}}],[\"policy\",{\"1\":{\"169\":1}}],[\"polyfill\",{\"1\":{\"168\":1}}],[\"position\",{\"1\":{\"90\":1,\"235\":1,\"239\":1}}],[\"postcss\",{\"1\":{\"254\":2}}],[\"posttask\",{\"1\":{\"171\":1}}],[\"postmessage\",{\"1\":{\"117\":1,\"162\":2,\"312\":1,\"437\":3,\"438\":3,\"439\":1,\"480\":4}}],[\"post\",{\"1\":{\"10\":1,\"184\":1,\"214\":1,\"217\":1,\"463\":2}}],[\"popstate\",{\"0\":{\"545\":1},\"1\":{\"79\":1,\"545\":1,\"546\":1}}],[\"pop\",{\"1\":{\"4\":1,\"6\":1}}],[\"priority\",{\"1\":{\"132\":1}}],[\"priorityoqueue\",{\"1\":{\"9\":1}}],[\"private\",{\"1\":{\"124\":2,\"355\":3}}],[\"production\",{\"1\":{\"548\":1}}],[\"production配置\",{\"1\":{\"109\":1}}],[\"prorotype\",{\"1\":{\"401\":1}}],[\"provider>\",{\"1\":{\"450\":1,\"465\":2}}],[\"provider\",{\"1\":{\"450\":1,\"465\":2,\"490\":3}}],[\"provide\",{\"1\":{\"307\":2}}],[\"provie\",{\"1\":{\"103\":1}}],[\"prof\",{\"1\":{\"298\":3}}],[\"profile\",{\"1\":{\"298\":4}}],[\"prop\",{\"1\":{\"490\":1}}],[\"properties\",{\"1\":{\"373\":1}}],[\"property\",{\"0\":{\"373\":1},\"1\":{\"367\":3}}],[\"propertydescriptor\",{\"1\":{\"227\":1}}],[\"propertykey\",{\"1\":{\"227\":1}}],[\"props\",{\"0\":{\"529\":1},\"1\":{\"101\":1,\"103\":2,\"143\":1,\"449\":1,\"458\":2,\"460\":2,\"465\":1,\"471\":1,\"490\":3,\"496\":4,\"498\":1,\"506\":4,\"511\":1,\"524\":1,\"529\":5,\"534\":3}}],[\"protected\",{\"1\":{\"355\":1}}],[\"protection\",{\"1\":{\"204\":1}}],[\"protobuf\",{\"1\":{\"282\":1}}],[\"protocal\",{\"1\":{\"282\":1}}],[\"protocols\",{\"1\":{\"200\":1}}],[\"protocol\",{\"1\":{\"76\":1,\"200\":1,\"273\":1}}],[\"proto\",{\"0\":{\"282\":1},\"1\":{\"282\":1,\"401\":4}}],[\"prototype\",{\"1\":{\"227\":3,\"396\":6,\"397\":1,\"401\":17,\"423\":3,\"548\":6}}],[\"proxy\",{\"1\":{\"185\":2,\"266\":1,\"319\":2,\"482\":1,\"547\":1}}],[\"proj\",{\"1\":{\"159\":2}}],[\"pros\",{\"1\":{\"143\":1,\"499\":1}}],[\"promise<string\",{\"1\":{\"356\":2}}],[\"promise<t>\",{\"1\":{\"356\":2}}],[\"promise6\",{\"1\":{\"339\":2}}],[\"promise3\",{\"1\":{\"339\":2}}],[\"promise5\",{\"1\":{\"339\":2}}],[\"promise7\",{\"1\":{\"339\":2}}],[\"promise4\",{\"1\":{\"339\":2}}],[\"promise2\",{\"1\":{\"339\":2}}],[\"promise1\",{\"1\":{\"339\":2}}],[\"promises\",{\"1\":{\"338\":4}}],[\"promisestate\",{\"1\":{\"337\":1}}],[\"promise\",{\"0\":{\"333\":1,\"335\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":1},\"1\":{\"133\":1,\"220\":1,\"221\":3,\"225\":1,\"227\":1,\"312\":2,\"315\":1,\"328\":1,\"334\":8,\"336\":5,\"337\":3,\"338\":5,\"339\":3,\"340\":5,\"341\":6,\"342\":5,\"343\":5,\"344\":3,\"356\":1,\"457\":5,\"458\":1,\"479\":1,\"541\":5}}],[\"problem\",{\"1\":{\"73\":3}}],[\"programming\",{\"1\":{\"10\":1}}],[\"processresult\",{\"1\":{\"73\":1}}],[\"process\",{\"0\":{\"291\":1},\"1\":{\"4\":2,\"6\":2,\"7\":1,\"71\":1,\"225\":3,\"286\":1,\"289\":1,\"290\":1,\"291\":2,\"298\":1,\"315\":1,\"548\":1}}],[\"prepromise\",{\"1\":{\"338\":2}}],[\"prepareupdate\",{\"1\":{\"460\":1}}],[\"prepare\",{\"1\":{\"315\":1}}],[\"prefix=\",{\"1\":{\"325\":1}}],[\"prefetch\",{\"1\":{\"119\":2,\"122\":1,\"135\":1}}],[\"preset\",{\"1\":{\"253\":1,\"254\":2,\"471\":1}}],[\"prettierrc\",{\"1\":{\"252\":1}}],[\"prettier\",{\"1\":{\"252\":1}}],[\"preload\",{\"1\":{\"122\":1,\"135\":1}}],[\"preconnect\",{\"1\":{\"120\":2}}],[\"preventdefault\",{\"1\":{\"82\":1,\"465\":1,\"546\":1}}],[\"prev\",{\"1\":{\"47\":5}}],[\"pre\",{\"1\":{\"10\":1,\"179\":1,\"180\":3}}],[\"=>\",{\"1\":{\"18\":2,\"57\":1,\"66\":5,\"84\":2,\"114\":1,\"167\":1,\"168\":1,\"169\":1,\"172\":4,\"201\":3,\"221\":1,\"223\":1,\"226\":1,\"227\":10,\"241\":5,\"270\":1,\"271\":4,\"293\":3,\"295\":2,\"305\":3,\"336\":5,\"337\":2,\"338\":8,\"340\":5,\"341\":3,\"342\":7,\"344\":1,\"355\":1,\"356\":1,\"389\":1,\"393\":1,\"394\":2,\"398\":4,\"400\":4,\"422\":2,\"427\":1,\"435\":8,\"443\":9,\"444\":3,\"449\":4,\"450\":4,\"456\":1,\"457\":5,\"458\":1,\"463\":2,\"464\":1,\"465\":14,\"480\":4,\"483\":12,\"487\":10,\"488\":2,\"489\":3,\"490\":2,\"491\":1,\"493\":2,\"496\":2,\"501\":2,\"524\":5,\"529\":2,\"530\":1,\"532\":2,\"534\":1,\"535\":1,\"536\":2,\"537\":6,\"541\":5,\"546\":5,\"548\":1}}],[\"==\",{\"0\":{\"398\":1},\"1\":{\"18\":1,\"20\":1,\"74\":1,\"397\":1,\"398\":7,\"437\":1,\"475\":2,\"483\":1,\"529\":1,\"541\":3,\"548\":1}}],[\"===\",{\"0\":{\"398\":1,\"399\":1},\"1\":{\"15\":1,\"24\":1,\"47\":1,\"84\":2,\"337\":1,\"363\":1,\"397\":1,\"399\":1,\"401\":13,\"406\":1,\"423\":7,\"424\":2,\"438\":1,\"443\":1,\"444\":1,\"475\":2,\"476\":1,\"483\":2,\"492\":1,\"546\":1}}],[\"=log\",{\"1\":{\"12\":1}}],[\"=2t\",{\"1\":{\"12\":3}}],[\"=t\",{\"1\":{\"12\":1}}],[\"=\",{\"0\":{\"286\":1},\"1\":{\"4\":4,\"6\":5,\"11\":1,\"15\":5,\"17\":3,\"20\":5,\"23\":1,\"36\":1,\"47\":3,\"73\":4,\"74\":1,\"81\":1,\"84\":3,\"114\":3,\"201\":5,\"221\":1,\"223\":1,\"227\":6,\"270\":1,\"271\":5,\"282\":1,\"293\":2,\"295\":3,\"305\":1,\"307\":2,\"309\":3,\"330\":2,\"331\":4,\"332\":2,\"334\":1,\"336\":2,\"337\":1,\"338\":3,\"341\":1,\"345\":3,\"348\":1,\"353\":2,\"355\":6,\"356\":1,\"360\":1,\"361\":4,\"363\":8,\"364\":13,\"369\":10,\"372\":9,\"373\":9,\"374\":5,\"389\":5,\"390\":1,\"392\":1,\"393\":2,\"394\":3,\"396\":2,\"397\":2,\"398\":1,\"404\":3,\"406\":2,\"419\":5,\"424\":22,\"429\":8,\"437\":1,\"438\":1,\"443\":5,\"444\":4,\"449\":4,\"450\":6,\"456\":1,\"457\":9,\"458\":1,\"463\":5,\"464\":1,\"465\":24,\"471\":1,\"472\":1,\"475\":4,\"478\":1,\"480\":9,\"483\":2,\"487\":7,\"488\":3,\"489\":3,\"490\":2,\"491\":2,\"493\":4,\"496\":2,\"501\":1,\"529\":6,\"530\":3,\"532\":3,\"534\":2,\"535\":1,\"536\":1,\"537\":4,\"541\":17,\"546\":7,\"548\":5}}],[\"skyblue\",{\"1\":{\"496\":1}}],[\"skips\",{\"1\":{\"424\":1}}],[\"skeletal\",{\"1\":{\"94\":1}}],[\"switch\",{\"1\":{\"457\":1,\"476\":1,\"493\":1}}],[\"switching\",{\"1\":{\"200\":1}}],[\"sweeping\",{\"1\":{\"386\":1}}],[\"sweep\",{\"0\":{\"384\":1},\"1\":{\"383\":1,\"384\":4,\"385\":1}}],[\"slow\",{\"1\":{\"370\":1}}],[\"slice\",{\"1\":{\"338\":1,\"541\":1}}],[\"s\",{\"1\":{\"369\":3,\"443\":3,\"444\":9}}],[\"symbole\",{\"1\":{\"346\":1}}],[\"symbol\",{\"0\":{\"346\":1},\"1\":{\"328\":1,\"345\":1,\"346\":7,\"351\":1,\"398\":2,\"400\":1,\"405\":1,\"406\":2,\"411\":1,\"416\":1,\"417\":1,\"419\":3,\"421\":1}}],[\"sys\",{\"1\":{\"325\":1}}],[\"syn\",{\"1\":{\"176\":2}}],[\"sdp\",{\"1\":{\"273\":1,\"278\":2}}],[\"sdk\",{\"1\":{\"244\":1}}],[\"sage\",{\"1\":{\"493\":1}}],[\"saga\",{\"0\":{\"493\":1},\"1\":{\"493\":3}}],[\"save\",{\"1\":{\"214\":1}}],[\"samesite=none\",{\"1\":{\"209\":1}}],[\"samesite\",{\"1\":{\"203\":1}}],[\"sse\",{\"0\":{\"201\":1},\"1\":{\"201\":5,\"267\":1}}],[\"ssr\",{\"0\":{\"304\":1},\"1\":{\"140\":1,\"167\":1,\"305\":1,\"544\":1}}],[\"shift\",{\"1\":{\"480\":1}}],[\"shouldcomponentupdate\",{\"0\":{\"513\":1},\"1\":{\"533\":1}}],[\"shouldyield\",{\"1\":{\"475\":2,\"480\":4}}],[\"showmessage和handleclick\",{\"1\":{\"496\":1}}],[\"showmessage\",{\"1\":{\"496\":2}}],[\"show\",{\"1\":{\"458\":1}}],[\"showpage\",{\"1\":{\"117\":1}}],[\"share\",{\"1\":{\"325\":2}}],[\"shared\",{\"1\":{\"124\":1,\"164\":1,\"439\":1}}],[\"shadowdom\",{\"0\":{\"263\":1}}],[\"shader\",{\"1\":{\"95\":2,\"97\":3}}],[\"shaking在去除代码冗余的过程中\",{\"1\":{\"348\":1}}],[\"shaking\",{\"0\":{\"347\":1},\"1\":{\"128\":1,\"168\":1,\"328\":1,\"434\":1}}],[\"shacking\",{\"1\":{\"128\":1}}],[\"sha\",{\"1\":{\"33\":2}}],[\"so\",{\"1\":{\"458\":1}}],[\"somemethods\",{\"1\":{\"355\":1}}],[\"socket\",{\"1\":{\"293\":9,\"315\":2}}],[\"sourcemap\",{\"1\":{\"141\":1}}],[\"source\",{\"1\":{\"109\":2,\"221\":1}}],[\"sort\",{\"1\":{\"12\":1,\"36\":1}}],[\"sortedarray\",{\"1\":{\"15\":4}}],[\"sorted\",{\"1\":{\"12\":1}}],[\"scavenge\",{\"0\":{\"379\":1,\"380\":1,\"381\":1},\"1\":{\"379\":2,\"381\":3,\"382\":1,\"383\":1,\"384\":1}}],[\"scss\",{\"1\":{\"348\":1}}],[\"scoped\",{\"1\":{\"261\":1}}],[\"scheduling\",{\"1\":{\"480\":1}}],[\"schedule\",{\"1\":{\"480\":1}}],[\"scheduler\",{\"1\":{\"171\":2}}],[\"scheduleupdateonfiber\",{\"1\":{\"102\":2,\"443\":1,\"475\":1}}],[\"scheme\",{\"1\":{\"365\":1}}],[\"schema\",{\"1\":{\"153\":1,\"282\":2,\"295\":2}}],[\"scene\",{\"1\":{\"94\":1}}],[\"script>\",{\"1\":{\"221\":1,\"305\":2,\"546\":1}}],[\"script\",{\"1\":{\"139\":4,\"220\":1}}],[\"scrolltop\",{\"1\":{\"516\":1}}],[\"scroll\",{\"1\":{\"87\":1}}],[\"scrollleft\",{\"1\":{\"81\":1}}],[\"scroltop\",{\"1\":{\"81\":1}}],[\"screen\",{\"0\":{\"81\":1}}],[\"svg\",{\"0\":{\"92\":1},\"1\":{\"143\":2}}],[\"student\",{\"1\":{\"369\":2}}],[\"stun\",{\"0\":{\"274\":1}}],[\"stdin\",{\"1\":{\"291\":1}}],[\"stderr\",{\"1\":{\"291\":1}}],[\"stdout\",{\"1\":{\"291\":1}}],[\"str\",{\"1\":{\"406\":5}}],[\"structure\",{\"1\":{\"282\":1}}],[\"string\",{\"1\":{\"227\":1,\"280\":1,\"281\":1,\"295\":1,\"351\":3,\"353\":2,\"355\":6,\"406\":1,\"412\":1,\"541\":2}}],[\"streamasynciterator\",{\"1\":{\"345\":2}}],[\"stream\",{\"0\":{\"309\":1},\"1\":{\"201\":2,\"280\":1,\"345\":2,\"365\":1}}],[\"style=\",{\"1\":{\"496\":1}}],[\"styled\",{\"1\":{\"260\":1}}],[\"stylesheet\",{\"1\":{\"229\":1}}],[\"style\",{\"0\":{\"231\":1},\"1\":{\"139\":1,\"231\":1,\"232\":1,\"254\":1,\"261\":1}}],[\"storehandler\",{\"1\":{\"490\":2}}],[\"store\",{\"0\":{\"486\":1},\"1\":{\"106\":1,\"124\":1,\"307\":9,\"308\":1,\"486\":2,\"487\":7,\"490\":5}}],[\"stop\",{\"1\":{\"278\":1}}],[\"stopimmediatepropagation\",{\"1\":{\"82\":1}}],[\"stoppropergation\",{\"1\":{\"82\":1}}],[\"static\",{\"0\":{\"506\":1},\"1\":{\"109\":1,\"185\":2,\"305\":1,\"319\":1,\"450\":1,\"458\":1,\"490\":1,\"506\":2,\"521\":1}}],[\"status\",{\"1\":{\"84\":1,\"337\":3,\"457\":4}}],[\"statemixin\",{\"1\":{\"548\":1}}],[\"statement\",{\"1\":{\"424\":2}}],[\"statenode\",{\"1\":{\"472\":1}}],[\"state\",{\"1\":{\"71\":1,\"79\":1,\"106\":1,\"201\":1,\"443\":2,\"444\":2,\"458\":3,\"465\":3,\"485\":1,\"486\":2,\"489\":2,\"490\":3,\"491\":2,\"505\":1,\"506\":6,\"511\":1,\"529\":4,\"530\":2,\"534\":3}}],[\"stack\",{\"1\":{\"6\":4,\"9\":1,\"311\":2,\"468\":1}}],[\"starttransition\",{\"1\":{\"480\":5}}],[\"start\",{\"0\":{\"289\":1},\"1\":{\"4\":3,\"6\":2}}],[\"splice\",{\"1\":{\"338\":1,\"480\":1}}],[\"split\",{\"1\":{\"265\":1}}],[\"splitchunk\",{\"1\":{\"109\":1,\"365\":1}}],[\"splitproblem\",{\"1\":{\"73\":1}}],[\"span>\",{\"1\":{\"536\":1,\"537\":2}}],[\"space\",{\"1\":{\"379\":5,\"382\":1}}],[\"spa\",{\"1\":{\"77\":1,\"265\":1,\"543\":1}}],[\"suspense>\",{\"1\":{\"457\":1}}],[\"suspenser\",{\"1\":{\"457\":2,\"458\":2}}],[\"suspence>\",{\"1\":{\"464\":1}}],[\"suspence1\",{\"1\":{\"458\":1}}],[\"suspence\",{\"0\":{\"457\":1,\"458\":1},\"1\":{\"220\":1,\"457\":2,\"458\":1,\"464\":2}}],[\"super\",{\"1\":{\"355\":2,\"456\":1,\"529\":1,\"534\":1}}],[\"superchat\",{\"1\":{\"200\":1}}],[\"subject\",{\"1\":{\"488\":1}}],[\"subscribe\",{\"0\":{\"488\":1},\"1\":{\"106\":1,\"486\":2,\"488\":1,\"490\":2}}],[\"subresult2\",{\"1\":{\"73\":2}}],[\"subresult1\",{\"1\":{\"73\":2}}],[\"subresult0\",{\"1\":{\"73\":2}}],[\"subproblems\",{\"1\":{\"73\":4}}],[\"sum\",{\"1\":{\"36\":3}}],[\"srcobject\",{\"1\":{\"278\":1}}],[\"src=\",{\"1\":{\"169\":1,\"221\":1,\"305\":1,\"365\":1,\"438\":1}}],[\"srcset=\",{\"1\":{\"169\":1}}],[\"src\",{\"1\":{\"60\":1,\"109\":1,\"169\":1,\"429\":4}}],[\"self\",{\"1\":{\"419\":3}}],[\"semispace\",{\"1\":{\"379\":1}}],[\"seal\",{\"1\":{\"348\":1}}],[\"search\",{\"1\":{\"9\":1,\"10\":3,\"12\":2,\"76\":1}}],[\"session\",{\"1\":{\"273\":1,\"274\":1}}],[\"seconds\",{\"1\":{\"336\":1}}],[\"second\",{\"1\":{\"297\":1,\"424\":1}}],[\"secure\",{\"1\":{\"209\":1}}],[\"sec\",{\"1\":{\"200\":4}}],[\"see\",{\"0\":{\"191\":1}}],[\"server\",{\"0\":{\"201\":1},\"1\":{\"179\":3,\"180\":7,\"185\":4,\"254\":1,\"267\":1,\"293\":2,\"305\":3,\"319\":3}}],[\"serviceworker\",{\"1\":{\"164\":1}}],[\"service\",{\"1\":{\"117\":1,\"122\":1,\"168\":1,\"221\":1,\"439\":1}}],[\"sent\",{\"0\":{\"201\":1},\"1\":{\"176\":1,\"267\":1}}],[\"senderror\",{\"1\":{\"227\":1}}],[\"send\",{\"1\":{\"84\":1,\"305\":1}}],[\"setcount\",{\"1\":{\"536\":4,\"537\":4}}],[\"setnum\",{\"1\":{\"532\":1}}],[\"setprototypeof\",{\"1\":{\"396\":1}}],[\"setup\",{\"0\":{\"286\":1},\"1\":{\"286\":1}}],[\"setremotedescription\",{\"1\":{\"278\":1}}],[\"setr\",{\"1\":{\"278\":1}}],[\"setlocaldescription\",{\"1\":{\"278\":2}}],[\"setimmdiate\",{\"1\":{\"290\":1}}],[\"setimmediate\",{\"1\":{\"271\":1,\"312\":1,\"315\":2,\"541\":1}}],[\"setinterval\",{\"1\":{\"241\":1,\"290\":1,\"312\":2,\"315\":2,\"537\":2}}],[\"settimeout\",{\"1\":{\"241\":1,\"290\":1,\"312\":2,\"315\":2,\"336\":1,\"479\":1,\"496\":1,\"535\":2,\"541\":2}}],[\"setter\",{\"1\":{\"101\":1,\"392\":2,\"547\":2}}],[\"sets\",{\"0\":{\"210\":1}}],[\"setstate的callback在这里执行\",{\"1\":{\"478\":1}}],[\"setstate\",{\"1\":{\"101\":1,\"102\":1,\"445\":1,\"458\":1,\"465\":2,\"482\":1,\"508\":1,\"517\":1,\"534\":2}}],[\"set\",{\"0\":{\"34\":1,\"411\":1},\"1\":{\"9\":1,\"30\":1,\"34\":1,\"36\":6,\"102\":1,\"203\":1,\"209\":1,\"227\":1,\"394\":1,\"409\":1,\"411\":1,\"548\":2}}],[\"sibling\",{\"1\":{\"472\":1}}],[\"sigterm\",{\"1\":{\"285\":1}}],[\"signalexit\",{\"1\":{\"285\":2}}],[\"sigint\",{\"1\":{\"285\":1}}],[\"site\",{\"1\":{\"207\":1}}],[\"sideeffects\",{\"1\":{\"128\":1,\"129\":1,\"348\":1}}],[\"since\",{\"1\":{\"125\":2,\"192\":1,\"278\":1}}],[\"single\",{\"1\":{\"9\":1,\"265\":1}}],[\"sizes=\",{\"1\":{\"169\":1}}],[\"size\",{\"1\":{\"89\":2}}],[\"sizeof\",{\"1\":{\"1\":1}}],[\"sizing\",{\"1\":{\"88\":2,\"169\":1}}],[\"given\",{\"1\":{\"448\":1}}],[\"git\",{\"1\":{\"249\":1}}],[\"g2\",{\"1\":{\"361\":1}}],[\"g函数就初始化了\",{\"1\":{\"361\":1}}],[\"gyp\",{\"1\":{\"303\":1}}],[\"gc\",{\"0\":{\"300\":1},\"1\":{\"300\":3,\"302\":2,\"375\":1}}],[\"gui\",{\"1\":{\"241\":1}}],[\"ghb2021081702\",{\"1\":{\"185\":1}}],[\"gzip\",{\"1\":{\"128\":1,\"129\":1,\"131\":1,\"201\":1}}],[\"generate\",{\"1\":{\"493\":1}}],[\"generater\",{\"1\":{\"493\":2}}],[\"generator\",{\"0\":{\"345\":1},\"1\":{\"493\":3}}],[\"gender\",{\"1\":{\"369\":2}}],[\"geometry\",{\"1\":{\"94\":1}}],[\"getstate\",{\"1\":{\"486\":2,\"487\":2,\"490\":1,\"492\":2}}],[\"getstore\",{\"1\":{\"271\":2}}],[\"getsnapshotbeforeupdate\",{\"0\":{\"516\":1},\"1\":{\"478\":2,\"507\":1}}],[\"getderivedstatefromprops\",{\"0\":{\"506\":1,\"512\":1},\"1\":{\"506\":2,\"507\":1,\"511\":1}}],[\"getderivedstatefromerror\",{\"1\":{\"458\":2,\"521\":1}}],[\"getdata\",{\"1\":{\"457\":1}}],[\"getownpropertysymbols\",{\"0\":{\"417\":1},\"1\":{\"421\":1}}],[\"getownpropertynames\",{\"0\":{\"417\":1},\"1\":{\"227\":1,\"421\":1}}],[\"getprototypeof\",{\"1\":{\"401\":3,\"423\":1}}],[\"getposts\",{\"1\":{\"356\":2}}],[\"getattribute\",{\"1\":{\"546\":1}}],[\"geta\",{\"1\":{\"389\":3}}],[\"getelementbyid\",{\"1\":{\"364\":2,\"438\":1}}],[\"getelementsbytagname\",{\"1\":{\"364\":2}}],[\"getname\",{\"1\":{\"355\":2,\"393\":2}}],[\"getreader\",{\"1\":{\"345\":1}}],[\"gettracks\",{\"1\":{\"278\":1}}],[\"getter\",{\"0\":{\"392\":1},\"1\":{\"101\":1,\"392\":2,\"547\":3}}],[\"getusermedia\",{\"1\":{\"278\":1}}],[\"getcomputedstyle\",{\"1\":{\"229\":1}}],[\"getworker\",{\"1\":{\"114\":1}}],[\"getboundingclientrect\",{\"1\":{\"81\":1}}],[\"getfib\",{\"1\":{\"24\":3}}],[\"get\",{\"1\":{\"12\":1,\"102\":1,\"184\":1,\"189\":2,\"190\":2,\"191\":2,\"200\":1,\"201\":2,\"214\":1,\"217\":1,\"227\":1,\"271\":1,\"305\":1,\"392\":1,\"394\":1,\"409\":1,\"547\":1}}],[\"gpu\",{\"1\":{\"94\":1,\"95\":1,\"97\":2,\"140\":1,\"229\":7,\"235\":2,\"241\":1,\"375\":1}}],[\"g\",{\"0\":{\"42\":2},\"1\":{\"12\":1,\"361\":6}}],[\"grgv\",{\"0\":{\"286\":1}}],[\"graplayer\",{\"1\":{\"375\":1}}],[\"graphql\",{\"0\":{\"295\":1},\"1\":{\"295\":3}}],[\"graphicslayers\",{\"0\":{\"240\":1}}],[\"graphicslayer\",{\"1\":{\"235\":1}}],[\"graph\",{\"1\":{\"4\":1,\"6\":1,\"10\":1}}],[\"grafana\",{\"1\":{\"172\":1}}],[\"grid\",{\"1\":{\"88\":1,\"90\":1}}],[\"greedy\",{\"1\":{\"10\":1,\"68\":1}}],[\"goodbye\",{\"1\":{\"363\":2}}],[\"go\",{\"0\":{\"0\":1},\"1\":{\"545\":1,\"546\":3,\"551\":1}}],[\"f\",{\"1\":{\"361\":7}}],[\"fn\",{\"1\":{\"343\":3,\"356\":5,\"361\":2,\"397\":4,\"480\":4,\"488\":2,\"493\":2}}],[\"f3\",{\"1\":{\"339\":6}}],[\"f2\",{\"1\":{\"339\":6}}],[\"f7\",{\"1\":{\"339\":6}}],[\"f6\",{\"1\":{\"339\":6}}],[\"f5\",{\"1\":{\"339\":5}}],[\"f4\",{\"1\":{\"339\":5}}],[\"f1\",{\"1\":{\"339\":5}}],[\"fullfilled\",{\"1\":{\"339\":2,\"340\":3,\"457\":2}}],[\"fulfilled\",{\"1\":{\"337\":1}}],[\"funcs\",{\"1\":{\"483\":6}}],[\"func2\",{\"1\":{\"430\":3}}],[\"func1\",{\"1\":{\"430\":3}}],[\"func\",{\"1\":{\"109\":1,\"227\":4}}],[\"functioncomponent\",{\"1\":{\"476\":1}}],[\"functions\",{\"1\":{\"351\":1,\"352\":1}}],[\"function\",{\"0\":{\"343\":1},\"1\":{\"4\":1,\"6\":2,\"15\":1,\"17\":1,\"20\":1,\"24\":2,\"47\":3,\"71\":1,\"73\":1,\"74\":1,\"221\":1,\"225\":2,\"270\":2,\"271\":2,\"305\":1,\"307\":1,\"309\":2,\"337\":1,\"338\":1,\"339\":7,\"343\":1,\"345\":3,\"355\":2,\"356\":2,\"360\":2,\"361\":10,\"363\":4,\"364\":2,\"369\":2,\"372\":1,\"373\":1,\"374\":1,\"389\":1,\"390\":3,\"396\":1,\"397\":2,\"401\":16,\"419\":2,\"429\":4,\"437\":1,\"443\":1,\"444\":4,\"448\":1,\"475\":4,\"476\":1,\"480\":5,\"483\":5,\"492\":1,\"496\":1,\"501\":1,\"536\":2,\"537\":2,\"541\":2,\"546\":1,\"548\":2}}],[\"fs\",{\"1\":{\"280\":1,\"299\":1,\"309\":5}}],[\"fstars\",{\"1\":{\"185\":2}}],[\"fallback=\",{\"1\":{\"457\":1,\"464\":1}}],[\"fallback\",{\"1\":{\"457\":1,\"458\":2}}],[\"false\",{\"1\":{\"47\":3,\"109\":1,\"353\":2,\"361\":2,\"398\":3,\"399\":1,\"400\":2,\"406\":1,\"419\":6,\"437\":1,\"458\":2,\"541\":2,\"546\":1}}],[\"fast\",{\"1\":{\"370\":1}}],[\"face\",{\"1\":{\"169\":1}}],[\"federation\",{\"1\":{\"265\":1}}],[\"feature\",{\"1\":{\"169\":1}}],[\"fetchpriority\",{\"1\":{\"167\":1}}],[\"fetch\",{\"0\":{\"85\":1},\"1\":{\"217\":1,\"336\":2,\"345\":1,\"492\":1,\"501\":1}}],[\"fcp\",{\"1\":{\"165\":3}}],[\"fp\",{\"1\":{\"165\":3}}],[\"frames\",{\"1\":{\"438\":3}}],[\"fragment\",{\"1\":{\"95\":1,\"97\":1,\"182\":1}}],[\"friendname\",{\"1\":{\"363\":6}}],[\"from\",{\"1\":{\"281\":3,\"293\":1,\"305\":3,\"307\":2,\"379\":4,\"390\":1,\"434\":1,\"437\":2,\"438\":2,\"463\":1,\"464\":1,\"465\":2}}],[\"frontend\",{\"1\":{\"243\":1,\"551\":1}}],[\"frequency\",{\"1\":{\"9\":1}}],[\"flushcallbackss\",{\"1\":{\"541\":1}}],[\"flushcallbacks\",{\"1\":{\"541\":3}}],[\"flush\",{\"1\":{\"480\":9}}],[\"flushpassiveeffects\",{\"1\":{\"478\":1}}],[\"flags\",{\"1\":{\"476\":1}}],[\"flag\",{\"1\":{\"221\":2,\"287\":1}}],[\"flex\",{\"1\":{\"88\":1,\"90\":1}}],[\"floor\",{\"1\":{\"47\":3}}],[\"float\",{\"1\":{\"88\":1,\"90\":1,\"235\":1}}],[\"float64\",{\"1\":{\"1\":1}}],[\"float32array\",{\"1\":{\"410\":1}}],[\"float32\",{\"1\":{\"1\":1}}],[\"fowardref\",{\"1\":{\"448\":1}}],[\"foo4\",{\"1\":{\"374\":3}}],[\"foo2\",{\"1\":{\"373\":4}}],[\"foo1\",{\"1\":{\"372\":3}}],[\"foo\",{\"1\":{\"369\":3,\"404\":6,\"429\":4}}],[\"found\",{\"0\":{\"190\":1,\"198\":1}}],[\"four\",{\"1\":{\"36\":1}}],[\"fonts\",{\"1\":{\"169\":1}}],[\"font\",{\"1\":{\"169\":1}}],[\"fork\",{\"1\":{\"493\":1}}],[\"forceupdate\",{\"1\":{\"482\":1,\"490\":1}}],[\"for中使用更是恐怖\",{\"1\":{\"364\":1}}],[\"formatting\",{\"1\":{\"229\":1}}],[\"form\",{\"1\":{\"214\":2}}],[\"forbidden\",{\"0\":{\"197\":1}}],[\"forwardref\",{\"0\":{\"448\":1},\"1\":{\"449\":2}}],[\"forward\",{\"1\":{\"79\":1,\"169\":1,\"545\":1}}],[\"foreach\",{\"1\":{\"60\":1,\"227\":1,\"278\":1,\"465\":1,\"480\":1,\"488\":1,\"489\":1}}],[\"for\",{\"0\":{\"415\":1,\"419\":1},\"1\":{\"6\":1,\"12\":1,\"274\":1,\"341\":1,\"345\":2,\"346\":2,\"364\":2,\"373\":3,\"374\":1,\"421\":3,\"424\":4,\"461\":1,\"465\":1,\"535\":1,\"541\":1}}],[\"fillfilled\",{\"1\":{\"339\":2}}],[\"filter\",{\"1\":{\"251\":2}}],[\"filesync\",{\"1\":{\"309\":1}}],[\"file>\",{\"1\":{\"282\":1}}],[\"file\",{\"1\":{\"185\":1}}],[\"filename\",{\"1\":{\"109\":1,\"290\":1}}],[\"fixed\",{\"0\":{\"250\":1}}],[\"firefox\",{\"1\":{\"201\":1}}],[\"firsteffect\",{\"1\":{\"472\":1}}],[\"first\",{\"0\":{\"168\":1,\"210\":1},\"1\":{\"10\":2,\"165\":4,\"167\":1,\"235\":2,\"394\":1,\"424\":1}}],[\"finishedwork\",{\"1\":{\"478\":1}}],[\"final\",{\"1\":{\"483\":1}}],[\"finalizeinitialchildren\",{\"1\":{\"460\":1}}],[\"finalizationregistry\",{\"1\":{\"375\":1}}],[\"finally后面的then函数\",{\"1\":{\"342\":1}}],[\"finally1\",{\"1\":{\"342\":2}}],[\"finally2后面的then函数\",{\"1\":{\"342\":2}}],[\"finally2\",{\"1\":{\"342\":2}}],[\"finally\",{\"0\":{\"342\":1},\"1\":{\"342\":8,\"345\":1,\"493\":1}}],[\"fin\",{\"1\":{\"176\":2}}],[\"find\",{\"1\":{\"36\":1}}],[\"fid\",{\"0\":{\"168\":1,\"170\":1},\"1\":{\"165\":3,\"168\":1,\"170\":2,\"234\":1}}],[\"fiberroot\",{\"1\":{\"475\":1}}],[\"fiberrootnode\",{\"1\":{\"475\":2}}],[\"fibernode\",{\"1\":{\"472\":1}}],[\"fiber\",{\"0\":{\"468\":1,\"470\":1,\"472\":1},\"1\":{\"102\":1,\"107\":1,\"442\":1,\"443\":2,\"468\":3,\"472\":4,\"476\":1,\"477\":1}}],[\"fibonacci斐波那契堆\",{\"1\":{\"56\":1}}],[\"fib\",{\"1\":{\"23\":1,\"24\":1}}],[\"bbb\",{\"1\":{\"372\":2,\"373\":1,\"374\":1}}],[\"bb\",{\"1\":{\"355\":2}}],[\"button>\",{\"1\":{\"536\":1,\"537\":2}}],[\"button>`\",{\"1\":{\"305\":1}}],[\"button\",{\"1\":{\"496\":2}}],[\"bugreport\",{\"1\":{\"326\":1}}],[\"buildschema\",{\"1\":{\"295\":2}}],[\"buffers\",{\"1\":{\"282\":1}}],[\"buffer\",{\"0\":{\"279\":1,\"280\":1,\"282\":1},\"1\":{\"280\":7,\"281\":5,\"283\":3,\"293\":6,\"299\":1,\"301\":2,\"309\":1}}],[\"bubbledown\",{\"1\":{\"42\":1}}],[\"bubbleup\",{\"1\":{\"42\":1}}],[\"beginwork\",{\"0\":{\"476\":1},\"1\":{\"473\":1,\"475\":1,\"476\":1}}],[\"been\",{\"1\":{\"332\":1}}],[\"before\",{\"1\":{\"330\":1}}],[\"beforecreate\",{\"1\":{\"306\":1,\"548\":1}}],[\"beforeunload\",{\"1\":{\"220\":1,\"221\":2}}],[\"bench\",{\"1\":{\"297\":1}}],[\"be\",{\"1\":{\"281\":1,\"448\":1}}],[\"bem\",{\"1\":{\"261\":1}}],[\"best\",{\"1\":{\"23\":1}}],[\"blink\",{\"1\":{\"241\":1}}],[\"blank会打开新的标签页\",{\"1\":{\"207\":1}}],[\"blank\",{\"1\":{\"207\":1,\"437\":1}}],[\"blog\",{\"1\":{\"185\":1}}],[\"blob\",{\"0\":{\"114\":1},\"1\":{\"114\":3}}],[\"block\",{\"1\":{\"88\":4,\"90\":3,\"229\":2,\"261\":1}}],[\"bloomfilter\",{\"1\":{\"9\":1}}],[\"bfc\",{\"1\":{\"171\":1,\"229\":1}}],[\"bf\",{\"1\":{\"169\":1}}],[\"bfs的步长为每一层元素的个数\",{\"1\":{\"7\":1}}],[\"bfs\",{\"0\":{\"2\":1,\"3\":1},\"1\":{\"4\":1,\"7\":2}}],[\"bc\",{\"1\":{\"162\":2}}],[\"bvh\",{\"0\":{\"96\":1},\"1\":{\"96\":1}}],[\"bool\",{\"1\":{\"513\":1}}],[\"boolean\",{\"1\":{\"351\":1,\"353\":2,\"398\":1,\"406\":1}}],[\"both\",{\"1\":{\"424\":1}}],[\"bottom\",{\"1\":{\"298\":1}}],[\"bob\",{\"1\":{\"406\":1}}],[\"body>\",{\"1\":{\"305\":1,\"546\":1}}],[\"body\",{\"1\":{\"299\":1,\"345\":1}}],[\"boundleless\",{\"0\":{\"258\":1}}],[\"boundled\",{\"0\":{\"257\":1}}],[\"box\",{\"1\":{\"88\":4,\"169\":2}}],[\"border\",{\"1\":{\"88\":5,\"90\":2,\"169\":1}}],[\"bom\",{\"0\":{\"75\":1},\"1\":{\"99\":1}}],[\"break\",{\"1\":{\"493\":5}}],[\"breadth\",{\"1\":{\"10\":1}}],[\"brk\",{\"1\":{\"298\":1}}],[\"browserrouter>\",{\"1\":{\"463\":1}}],[\"browserrouter\",{\"1\":{\"463\":1,\"465\":1}}],[\"broadcastchannel\",{\"1\":{\"162\":1,\"439\":1}}],[\"broker\",{\"1\":{\"65\":1}}],[\"bigint\",{\"1\":{\"405\":1,\"406\":5,\"412\":1}}],[\"bigpipe\",{\"0\":{\"173\":1}}],[\"bind\",{\"1\":{\"390\":1,\"443\":1,\"478\":1,\"490\":1}}],[\"bin\",{\"1\":{\"325\":2}}],[\"binominal多项式堆\",{\"1\":{\"56\":1}}],[\"binary\",{\"1\":{\"9\":2,\"10\":1,\"12\":2,\"56\":1}}],[\"bits\",{\"1\":{\"20\":7}}],[\"b^a\",{\"1\":{\"17\":1}}],[\"b^c\",{\"1\":{\"17\":1}}],[\"b\",{\"1\":{\"17\":2,\"24\":4,\"36\":9,\"157\":1,\"159\":2,\"168\":1,\"189\":2,\"190\":1,\"330\":2,\"361\":8,\"365\":2,\"369\":3,\"372\":3,\"373\":4,\"374\":3,\"390\":2,\"419\":2,\"429\":2,\"483\":2}}],[\"bs\",{\"1\":{\"15\":1}}],[\"b=2\",{\"1\":{\"12\":3,\"185\":1}}],[\"basicstateaction<s>\",{\"1\":{\"444\":1}}],[\"basicstatereducer<s>\",{\"1\":{\"444\":1}}],[\"basicstatereducer\",{\"1\":{\"443\":1,\"444\":1}}],[\"basequeue\",{\"1\":{\"443\":1,\"444\":1}}],[\"base64\",{\"1\":{\"129\":1,\"201\":1,\"261\":1,\"365\":2}}],[\"bar\",{\"1\":{\"404\":1,\"429\":2}}],[\"babel\",{\"1\":{\"253\":1,\"254\":5,\"471\":2}}],[\"backgroundcolor\",{\"1\":{\"496\":1}}],[\"backend\",{\"1\":{\"243\":1}}],[\"backward\",{\"1\":{\"169\":1}}],[\"back\",{\"1\":{\"79\":1,\"545\":1}}],[\"backtrace\",{\"1\":{\"10\":1}}],[\"baidu\",{\"1\":{\"76\":1}}],[\"bazzi\",{\"1\":{\"12\":1}}],[\"batch\",{\"1\":{\"7\":1}}],[\"bytelengthutf8\",{\"1\":{\"299\":1}}],[\"bytedance\",{\"1\":{\"210\":1}}],[\"byte\",{\"1\":{\"1\":1,\"167\":1}}],[\"ul>\",{\"1\":{\"457\":1}}],[\"util\",{\"1\":{\"394\":2}}],[\"utilities\",{\"1\":{\"274\":1}}],[\"utility\",{\"0\":{\"262\":1}}],[\"utf\",{\"1\":{\"299\":1}}],[\"uv\",{\"0\":{\"286\":1,\"289\":1},\"1\":{\"286\":1}}],[\"usr\",{\"1\":{\"325\":6}}],[\"using\",{\"1\":{\"275\":1}}],[\"useseelctor\",{\"1\":{\"491\":1}}],[\"usestate\",{\"0\":{\"443\":1,\"536\":1},\"1\":{\"442\":2,\"443\":1,\"465\":2,\"473\":1,\"501\":1,\"532\":1,\"536\":1,\"537\":2}}],[\"uselayouteffect\",{\"1\":{\"465\":3}}],[\"uselocation\",{\"1\":{\"463\":2,\"465\":2}}],[\"usenavigate\",{\"1\":{\"463\":2,\"465\":2}}],[\"useparams\",{\"1\":{\"463\":2}}],[\"usecallback\",{\"0\":{\"453\":1}}],[\"usecontext\",{\"1\":{\"450\":1,\"465\":3}}],[\"usememo\",{\"0\":{\"452\":1,\"532\":1},\"1\":{\"452\":1,\"465\":3,\"532\":1}}],[\"useimperativehandle\",{\"0\":{\"449\":1},\"1\":{\"449\":1}}],[\"useeffect\",{\"0\":{\"451\":1,\"537\":1},\"1\":{\"443\":1,\"478\":2,\"501\":1,\"524\":4,\"537\":2}}],[\"useroutes\",{\"1\":{\"463\":1,\"465\":3}}],[\"useref\",{\"0\":{\"446\":1},\"1\":{\"447\":1,\"448\":1,\"449\":1,\"465\":2,\"537\":1}}],[\"user\",{\"1\":{\"355\":1}}],[\"userinfo\",{\"1\":{\"182\":1}}],[\"useragent\",{\"1\":{\"80\":1}}],[\"use\",{\"1\":{\"104\":1,\"222\":1,\"226\":1,\"305\":1}}],[\"usedispatch\",{\"1\":{\"491\":1}}],[\"usedexports\",{\"1\":{\"128\":1,\"129\":1,\"348\":1}}],[\"used\",{\"1\":{\"9\":2}}],[\"ui\",{\"1\":{\"264\":1,\"365\":2,\"458\":1,\"543\":1}}],[\"uint64\",{\"1\":{\"1\":1}}],[\"uint32\",{\"1\":{\"1\":1}}],[\"uint16\",{\"1\":{\"1\":1}}],[\"uintptr\",{\"1\":{\"1\":1}}],[\"uint\",{\"1\":{\"1\":1}}],[\"uint8\",{\"1\":{\"1\":2}}],[\"upstream\",{\"1\":{\"319\":1}}],[\"up\",{\"1\":{\"298\":1}}],[\"uptime\",{\"1\":{\"287\":1}}],[\"upload\",{\"1\":{\"214\":1}}],[\"upgrade\",{\"1\":{\"200\":6}}],[\"updatequeue\",{\"1\":{\"472\":1}}],[\"updateworkinprogresshook\",{\"1\":{\"444\":2}}],[\"updatereducer<s\",{\"1\":{\"444\":1}}],[\"updatereducer\",{\"1\":{\"444\":3}}],[\"updatestate<s>\",{\"1\":{\"444\":1}}],[\"updatestate\",{\"0\":{\"444\":1},\"1\":{\"444\":1}}],[\"updateui\",{\"1\":{\"364\":2}}],[\"update\",{\"0\":{\"444\":1},\"1\":{\"132\":1,\"364\":2,\"442\":1,\"443\":4,\"445\":1,\"458\":1,\"460\":4,\"476\":1,\"478\":1,\"488\":3,\"501\":2}}],[\"unmount\",{\"1\":{\"543\":1}}],[\"undefiend\",{\"1\":{\"541\":1}}],[\"undefined\",{\"1\":{\"330\":1,\"343\":1,\"344\":2,\"351\":1,\"358\":1,\"360\":1,\"361\":6,\"363\":2,\"398\":2,\"406\":6,\"419\":1,\"433\":1,\"465\":1,\"541\":2}}],[\"unitofwork\",{\"1\":{\"475\":4}}],[\"uninitialized\",{\"1\":{\"433\":1}}],[\"unicode\",{\"1\":{\"280\":1}}],[\"uncaught\",{\"1\":{\"363\":1}}],[\"uncaughtexception\",{\"1\":{\"225\":1,\"291\":1}}],[\"unhandledrejection\",{\"1\":{\"220\":1,\"221\":2,\"225\":1}}],[\"unauthorized\",{\"0\":{\"196\":1}}],[\"unshift\",{\"1\":{\"480\":1}}],[\"unsized\",{\"1\":{\"169\":1}}],[\"unsafe\",{\"0\":{\"507\":1,\"511\":1,\"514\":1},\"1\":{\"1\":1,\"523\":2}}],[\"uri\",{\"1\":{\"185\":1,\"365\":1}}],[\"urls\",{\"1\":{\"338\":2}}],[\"url和header字段都相同的情况下\",{\"1\":{\"218\":1}}],[\"urlencoded\",{\"1\":{\"214\":1}}],[\"url=http\",{\"1\":{\"200\":1}}],[\"url\",{\"0\":{\"78\":1,\"229\":1},\"1\":{\"84\":1,\"114\":1,\"169\":1,\"182\":1,\"200\":1,\"207\":1,\"270\":1,\"271\":2,\"297\":1,\"338\":4}}],[\"udp\",{\"0\":{\"181\":1},\"1\":{\"136\":1,\"181\":1,\"272\":1,\"280\":1,\"292\":1}}],[\"uglifyjs\",{\"1\":{\"129\":1,\"221\":1}}],[\"ua\",{\"1\":{\"80\":1}}],[\"u\",{\"1\":{\"12\":2}}],[\"与其他fiber\",{\"1\":{\"472\":1}}],[\"与外部系统联系的\",{\"1\":{\"451\":1}}],[\"与外部交互\",{\"1\":{\"111\":1}}],[\"与增量式整理\",{\"1\":{\"386\":1}}],[\"与执行时无关\",{\"1\":{\"358\":1}}],[\"与重绘\",{\"1\":{\"140\":1}}],[\"与\",{\"0\":{\"18\":1},\"1\":{\"1\":1,\"139\":1,\"241\":1,\"309\":3}}],[\"位置\",{\"1\":{\"229\":1}}],[\"位1的个数\",{\"1\":{\"20\":1}}],[\"位运算来判重\",{\"1\":{\"20\":1}}],[\"位运算\",{\"0\":{\"16\":1}}],[\"位\",{\"1\":{\"1\":1}}],[\"位或\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
